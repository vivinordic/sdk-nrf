<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="scan__wifi_8h" kind="file" language="C++">
    <compoundname>scan_wifi.h</compoundname>
    <includes refid="wifi__location__common_8h" local="no">net/wifi_location_common.h</includes>
    <incdepgraph>
      <node id="2">
        <label>net/wifi_location_common.h</label>
        <link refid="wifi__location__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zephyr/net/wifi_mgmt.h</label>
      </node>
      <node id="1">
        <label>lib/location/scan_wifi.h</label>
        <link refid="scan__wifi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="scan__wifi_8h_a0358e72d95ce2fad94faded20d077fab_1a0358e72d95ce2fad94faded20d077fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int scan_wifi_init</definition>
        <argsstring>(void)</argsstring>
        <name>scan_wifi_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/location/scan_wifi.h" line="12" column="5" declfile="lib/location/scan_wifi.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="scan__wifi_8h_acbe960277f67841b5dbc3d37352a2f50_1acbe960277f67841b5dbc3d37352a2f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int scan_wifi_start</definition>
        <argsstring>(struct k_sem *wifi_scan_ready)</argsstring>
        <name>scan_wifi_start</name>
        <param>
          <type>struct k_sem *</type>
          <declname>wifi_scan_ready</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/location/scan_wifi.h" line="13" column="5" declfile="lib/location/scan_wifi.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="scan__wifi_8h_aaada14006431f86a82f8345b8f1a263c_1aaada14006431f86a82f8345b8f1a263c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwifi__scan__info" kindref="compound">wifi_scan_info</ref> *</type>
        <definition>struct wifi_scan_info* scan_wifi_results_get</definition>
        <argsstring>(void)</argsstring>
        <name>scan_wifi_results_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/location/scan_wifi.h" line="14" column="21" declfile="lib/location/scan_wifi.h" declline="14" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="scan__wifi_8h_a3da6015c4965a135a7729aefa84d4c72_1a3da6015c4965a135a7729aefa84d4c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int scan_wifi_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>scan_wifi_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/location/scan_wifi.h" line="15" column="5" declfile="lib/location/scan_wifi.h" declline="15" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SCAN_WIFI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCAN_WIFI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wifi__location__common_8h" kindref="compound">net/wifi_location_common.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="scan__wifi_8h_a0358e72d95ce2fad94faded20d077fab_1a0358e72d95ce2fad94faded20d077fab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="scan__wifi_8h_a0358e72d95ce2fad94faded20d077fab_1a0358e72d95ce2fad94faded20d077fab" kindref="member">scan_wifi_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13" refid="scan__wifi_8h_acbe960277f67841b5dbc3d37352a2f50_1acbe960277f67841b5dbc3d37352a2f50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="scan__wifi_8h_acbe960277f67841b5dbc3d37352a2f50_1acbe960277f67841b5dbc3d37352a2f50" kindref="member">scan_wifi_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_sem<sp/>*wifi_scan_ready);</highlight></codeline>
<codeline lineno="14" refid="scan__wifi_8h_aaada14006431f86a82f8345b8f1a263c_1aaada14006431f86a82f8345b8f1a263c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__scan__info" kindref="compound">wifi_scan_info</ref><sp/>*<ref refid="scan__wifi_8h_aaada14006431f86a82f8345b8f1a263c_1aaada14006431f86a82f8345b8f1a263c" kindref="member">scan_wifi_results_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15" refid="scan__wifi_8h_a3da6015c4965a135a7729aefa84d4c72_1a3da6015c4965a135a7729aefa84d4c72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="scan__wifi_8h_a3da6015c4965a135a7729aefa84d4c72_1a3da6015c4965a135a7729aefa84d4c72" kindref="member">scan_wifi_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SCAN_WIFI_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/location/scan_wifi.h"/>
  </compounddef>
</doxygen>
