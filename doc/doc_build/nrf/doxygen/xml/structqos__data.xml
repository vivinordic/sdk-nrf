<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structqos__data" kind="struct" language="C++" prot="public">
    <compoundname>qos_data</compoundname>
    <includes refid="qos_8h" local="no">qos.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structqos__data_af4ff0bb2f463b601c5283aad2a8ff83b_1af4ff0bb2f463b601c5283aad2a8ff83b" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t qos_data::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags associated with the message. See <ref refid="group__qos__flag__bitmask" kindref="compound">QoS library flag bitmask values.</ref> for documentation on the various flags that can be set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="91" column="10" bodyfile="include/qos.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structqos__data_a786bdc07156015749ebaf91ebdbf2b68_1a786bdc07156015749ebaf91ebdbf2b68" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t qos_data::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="94" column="10" bodyfile="include/qos.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structqos__data_a54d950b9caef8143f55e76a8d3140a17_1a54d950b9caef8143f55e76a8d3140a17" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t qos_data::notified_count</definition>
        <argsstring></argsstring>
        <name>notified_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of times that the message has been notified by the library. This count is not incremented for messages flagged with QOS_FLAG_RELIABILITY_ACK_DISABLED. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="99" column="10" bodyfile="include/qos.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structqos__data_ad1a16909d0210dd69b21556cccec9e28_1ad1a16909d0210dd69b21556cccec9e28" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t qos_data::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the message.</para>
<para>The message type can be used to route data after a new or timed out message is received with the QOS_MESSAGE_NEW or QOS_EVT_MESSAGE_TIMER_EXPIRED events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="106" column="9" bodyfile="include/qos.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structqos__data_ac862ffaa85413ccfca4e2921abcd9dc3_1ac862ffaa85413ccfca4e2921abcd9dc3" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structqos__payload" kindref="compound">qos_payload</ref></type>
        <definition>struct qos_payload qos_data::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variable to keep track of user-allocated payload. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="106" column="9" bodyfile="include/qos.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structqos__data_a7810cecf71796aec705072793a715a70_1a7810cecf71796aec705072793a715a70" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool qos_data::heap_allocated</definition>
        <argsstring></argsstring>
        <name>heap_allocated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag signifying if the payload is heap allocated. When a message has been removed from the library using <ref refid="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" kindref="member">qos_message_remove()</ref> the payload buffer must be freed if this flag has been set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="115" column="6" bodyfile="include/qos.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure that contains the message payload and corresponding metadata. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>qos_data</label>
        <link refid="structqos__data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>qos_payload</label>
        <link refid="structqos__payload"/>
      </node>
    </collaborationgraph>
    <location file="include/qos.h" line="87" column="1" bodyfile="include/qos.h" bodystart="87" bodyend="116"/>
    <listofallmembers>
      <member refid="structqos__data_ac862ffaa85413ccfca4e2921abcd9dc3_1ac862ffaa85413ccfca4e2921abcd9dc3" prot="public" virt="non-virtual"><scope>qos_data</scope><name>data</name></member>
      <member refid="structqos__data_af4ff0bb2f463b601c5283aad2a8ff83b_1af4ff0bb2f463b601c5283aad2a8ff83b" prot="public" virt="non-virtual"><scope>qos_data</scope><name>flags</name></member>
      <member refid="structqos__data_a7810cecf71796aec705072793a715a70_1a7810cecf71796aec705072793a715a70" prot="public" virt="non-virtual"><scope>qos_data</scope><name>heap_allocated</name></member>
      <member refid="structqos__data_a786bdc07156015749ebaf91ebdbf2b68_1a786bdc07156015749ebaf91ebdbf2b68" prot="public" virt="non-virtual"><scope>qos_data</scope><name>id</name></member>
      <member refid="structqos__data_a54d950b9caef8143f55e76a8d3140a17_1a54d950b9caef8143f55e76a8d3140a17" prot="public" virt="non-virtual"><scope>qos_data</scope><name>notified_count</name></member>
      <member refid="structqos__data_ad1a16909d0210dd69b21556cccec9e28_1ad1a16909d0210dd69b21556cccec9e28" prot="public" virt="non-virtual"><scope>qos_data</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
