<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="trace__backend_8h" kind="file" language="C++">
    <compoundname>trace_backend.h</compoundname>
    <innerclass refid="structnrf__modem__lib__trace__backend" prot="public">nrf_modem_lib_trace_backend</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__trace__backend_ga596451c031cddc4c3671b9fed5f90776_1ga596451c031cddc4c3671b9fed5f90776" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* trace_backend_processed_cb) (size_t len)</definition>
        <argsstring>)(size_t len)</argsstring>
        <name>trace_backend_processed_cb</name>
        <briefdescription>
<para>callback to signal the trace module that some amount of trace data has been processed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/trace_backend.h" line="24" column="9" bodyfile="include/modem/trace_backend.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2023<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRACE_BACKEND_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_BACKEND_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__trace__backend_ga596451c031cddc4c3671b9fed5f90776_1ga596451c031cddc4c3671b9fed5f90776" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__trace__backend_ga596451c031cddc4c3671b9fed5f90776_1ga596451c031cddc4c3671b9fed5f90776" kindref="member">trace_backend_processed_cb</ref>)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structnrf__modem__lib__trace__backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrf__modem__lib__trace__backend" kindref="compound">nrf_modem_lib_trace_backend</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structnrf__modem__lib__trace__backend_a210314a128beac4e42772bf2d685b77b_1a210314a128beac4e42772bf2d685b77b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_a210314a128beac4e42772bf2d685b77b_1a210314a128beac4e42772bf2d685b77b" kindref="member">init</ref>)(<ref refid="group__trace__backend_ga596451c031cddc4c3671b9fed5f90776_1ga596451c031cddc4c3671b9fed5f90776" kindref="member">trace_backend_processed_cb</ref><sp/>trace_processed_cb);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structnrf__modem__lib__trace__backend_a3e11f1fe6d995e45c11efdf0a12d9780_1a3e11f1fe6d995e45c11efdf0a12d9780" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_a3e11f1fe6d995e45c11efdf0a12d9780_1a3e11f1fe6d995e45c11efdf0a12d9780" kindref="member">deinit</ref>)(void);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structnrf__modem__lib__trace__backend_afacdfe03aeb8ef91aef78c4e7c153d00_1afacdfe03aeb8ef91aef78c4e7c153d00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_afacdfe03aeb8ef91aef78c4e7c153d00_1afacdfe03aeb8ef91aef78c4e7c153d00" kindref="member">write</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structnrf__modem__lib__trace__backend_ab64c2f14440181a6a492d1cd9ef97ddd_1ab64c2f14440181a6a492d1cd9ef97ddd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_ab64c2f14440181a6a492d1cd9ef97ddd_1ab64c2f14440181a6a492d1cd9ef97ddd" kindref="member">data_size</ref>)(void);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structnrf__modem__lib__trace__backend_a5f270e2da963c478d758e373501ab957_1a5f270e2da963c478d758e373501ab957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_a5f270e2da963c478d758e373501ab957_1a5f270e2da963c478d758e373501ab957" kindref="member">read</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structnrf__modem__lib__trace__backend_a8f35e051005e4be3f6e01f35066c75ef_1a8f35e051005e4be3f6e01f35066c75ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structnrf__modem__lib__trace__backend_a8f35e051005e4be3f6e01f35066c75ef_1a8f35e051005e4be3f6e01f35066c75ef" kindref="member">clear</ref>)(void);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>defgroup<sp/>trace_backend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TRACE_BACKEND_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/modem/trace_backend.h"/>
  </compounddef>
</doxygen>
