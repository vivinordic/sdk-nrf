<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__identity__key" kind="group">
    <compoundname>identity_key</compoundname>
    <title>Identity key APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__identity__key_1ga0a1b6ac4a0778d6ed2d5f1bf712c81a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool identity_key_mkek_is_written</definition>
        <argsstring>(void)</argsstring>
        <name>identity_key_mkek_is_written</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to check that the MKEK is present. </para>
        </briefdescription>
        <detaileddescription>
<para>MKEK is a prerequisite to encrypt and decrypt the identity key.</para>
<para><simplesect kind="return"><para>true if MKEK is written, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="43" column="6" declfile="include/identity_key.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__identity__key_1ga43326197bd70c3811a38599543fd917e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool identity_key_is_written</definition>
        <argsstring>(void)</argsstring>
        <name>identity_key_is_written</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to check if identity key is written. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the identity key is written, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="50" column="6" declfile="include/identity_key.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__identity__key_1gaa3cc5e3ba8acebf3a81ecb0e8a087cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int identity_key_read</definition>
        <argsstring>(uint8_t key[(32)])</argsstring>
        <name>identity_key_read</name>
        <param>
          <type>uint8_t</type>
          <declname>key</declname>
          <array>[(32)]</array>
        </param>
        <briefdescription>
<para>Function to read the identity key from KMU. </para>
        </briefdescription>
        <detaileddescription>
<para>The key is read from KMU and decrypted using the Master Key Encryption Key (MKEK).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold the decrypted identity key</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a non-zero error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="62" column="5" declfile="include/identity_key.h" declline="62" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__identity__key_1ga3cef59b4d1665f9a8757fea5b86e8590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void identity_key_write_random</definition>
        <argsstring>(void)</argsstring>
        <name>identity_key_write_random</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to write a random identity key to KMU. </para>
        </briefdescription>
        <detaileddescription>
<para>The identity key will be encrypted using the Master Key Encryption Key (MKEK).</para>
<para><simplesect kind="note"><para>A panic-function that does not return will be called on write-failure.</para>
</simplesect>
<simplesect kind="note"><para>This function is generally only used in provisioning of the device and hence is not part of the code running on the end-product. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="74" column="6" declfile="include/identity_key.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__identity__key_1ga8e72035c0b50dccd4c23dcba8c22dc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void identity_key_write_key</definition>
        <argsstring>(uint8_t key[(32)])</argsstring>
        <name>identity_key_write_key</name>
        <param>
          <type>uint8_t</type>
          <declname>key</declname>
          <array>[(32)]</array>
        </param>
        <briefdescription>
<para>Function to write a previously generated identity key to the KMU. </para>
        </briefdescription>
        <detaileddescription>
<para>The identity key will be encrypted using the Master Key Encryption Key (MKEK).</para>
<para>This function can be used in a scheme where the key is securely provisioned to the device in production.</para>
<para><simplesect kind="note"><para>A panic-function that does not return will be called on write-failure.</para>
</simplesect>
<simplesect kind="note"><para>This function is generally only used in provisioning of the device and hence is not part of the code running on the end-product. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="89" column="6" declfile="include/identity_key.h" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__identity__key_1ga79c68ae0a4cbe9e3f9605b05ae9fa282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void identity_key_write_dummy</definition>
        <argsstring>(void)</argsstring>
        <name>identity_key_write_dummy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to write a dummy identity key to KMU. </para>
        </briefdescription>
        <detaileddescription>
<para>The identity key will be encrypted using the Master Key Encryption Key (MKEK).</para>
<para><simplesect kind="warning"><para>The dummy identity key is must only be used for debugging and testing purposes. Never use this function in production!</para>
</simplesect>
<simplesect kind="note"><para>A panic-function that does not return will be called on write-failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="101" column="6" declfile="include/identity_key.h" declline="101" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__identity__key_1gadbc5df3e6e149c39333b0f096a738082" prot="public" static="no">
        <name>IDENTITY_KEY_SIZE_BYTES</name>
        <initializer>(32)</initializer>
        <briefdescription>
<para>Identity key size in bytes, corresponding to ECC secp256r1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="25" column="9" bodyfile="include/identity_key.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__identity__key_1gad752682ddfa809407f8d57f9683da829" prot="public" static="no">
        <name>ERR_IDENTITY_KEY_MKEK_MISSING</name>
        <initializer>(0x15501)</initializer>
        <briefdescription>
<para>Error value when MKEK is missing from the KMU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="28" column="9" bodyfile="include/identity_key.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__identity__key_1ga68679183bd0aa68563cdf65a2bb72c12" prot="public" static="no">
        <name>ERR_IDENTITY_KEY_MISSING</name>
        <initializer>(0x15502)</initializer>
        <briefdescription>
<para>Error value when identity key is missing from the KMU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="31" column="9" bodyfile="include/identity_key.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__identity__key_1ga361f45a1fddc4572dc2d5b297cbd4a7f" prot="public" static="no">
        <name>ERR_IDENTITY_KEY_READ_FAILED</name>
        <initializer>(0x15503)</initializer>
        <briefdescription>
<para>Error value when identity key can&apos;t be read. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/identity_key.h" line="34" column="9" bodyfile="include/identity_key.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for identity key on CryptoCell devices with KMU. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
