<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structnrf__cloud__init__param" kind="struct" language="C++" prot="public">
    <compoundname>nrf_cloud_init_param</compoundname>
    <includes refid="nrf__cloud_8h" local="no">nrf_cloud.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnrf__cloud__init__param_a8e668966ecffed099a15d79a4336f1a4_1a8e668966ecffed099a15d79a4336f1a4" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__cloud_gaba76a1d354a998fcc241531440b28770_1gaba76a1d354a998fcc241531440b28770" kindref="member">nrf_cloud_event_handler_t</ref></type>
        <definition>nrf_cloud_event_handler_t nrf_cloud_init_param::event_handler</definition>
        <argsstring></argsstring>
        <name>event_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event handler that is registered with the module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud.h" line="606" column="27" bodyfile="include/net/nrf_cloud.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrf__cloud__init__param_ae6f3328b4ba85bbeb3cf16763f811a70_1ae6f3328b4ba85bbeb3cf16763f811a70" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* nrf_cloud_init_param::client_id</definition>
        <argsstring></argsstring>
        <name>client_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NULL-terminated MQTT client ID string. Must not exceed NRF_CLOUD_CLIENT_ID_MAX_LEN. Must be set if NRF_CLOUD_CLIENT_ID_SRC_RUNTIME is enabled; otherwise, NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud.h" line="612" column="6" bodyfile="include/net/nrf_cloud.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrf__cloud__init__param_a51f18367632b76ef8887c1930d825245_1a51f18367632b76ef8887c1930d825245" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdfu__target__fmfu__fdev" kindref="compound">dfu_target_fmfu_fdev</ref> *</type>
        <definition>struct dfu_target_fmfu_fdev* nrf_cloud_init_param::fmfu_dev_inf</definition>
        <argsstring></argsstring>
        <name>fmfu_dev_inf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flash device information required for full modem FOTA updates. Only used if CONFIG_NRF_CLOUD_FOTA_FULL_MODEM_UPDATE is enabled. Ignored if CONFIG_DFU_TARGET_FULL_MODEM_USE_EXT_PARTITION is enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud.h" line="618" column="27" bodyfile="include/net/nrf_cloud.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrf__cloud__init__param_ac8c1feef365075a02f065e4e4d72bf32_1ac8c1feef365075a02f065e4e4d72bf32" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structnrf__cloud__os__mem__hooks" kindref="compound">nrf_cloud_os_mem_hooks</ref> *</type>
        <definition>struct nrf_cloud_os_mem_hooks* nrf_cloud_init_param::hooks</definition>
        <argsstring></argsstring>
        <name>hooks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional hooks to override memory management functions. If set, <ref refid="group__nrf__cloud__os_ga5b6e596e4dd0e4a9e1bb30c75b2e17cd_1ga5b6e596e4dd0e4a9e1bb30c75b2e17cd" kindref="member">nrf_cloud_os_mem_hooks_init</ref> will be called by <ref refid="group__nrf__cloud_ga1d7e9e66df5c45750c6479c0439f49fd_1ga1d7e9e66df5c45750c6479c0439f49fd" kindref="member">nrf_cloud_init</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud.h" line="622" column="29" bodyfile="include/net/nrf_cloud.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrf__cloud__init__param_a8bc95a0e1a618e627fce3efe575caaa6_1a8bc95a0e1a618e627fce3efe575caaa6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* nrf_cloud_init_param::application_version</definition>
        <argsstring></argsstring>
        <name>application_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional application version that is reported to nRF Cloud if CONFIG_NRF_CLOUD_SEND_DEVICE_STATUS is enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud.h" line="626" column="12" bodyfile="include/net/nrf_cloud.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Initialization parameters for the module. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>nrf_cloud_os_mem_hooks</label>
        <link refid="structnrf__cloud__os__mem__hooks"/>
      </node>
      <node id="6">
        <label>dfu_target_fmfu_fdev</label>
        <link refid="structdfu__target__fmfu__fdev"/>
      </node>
      <node id="3">
        <label>nrf_cloud_topic</label>
        <link refid="structnrf__cloud__topic"/>
      </node>
      <node id="1">
        <label>nrf_cloud_init_param</label>
        <link refid="structnrf__cloud__init__param"/>
        <childnode refid="2" relation="usage">
          <edgelabel>event_handler</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>hooks</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fmfu_dev_inf</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nrf_cloud_data</label>
        <link refid="structnrf__cloud__data"/>
      </node>
      <node id="2">
        <label>nrf_cloud_evt</label>
        <link refid="structnrf__cloud__evt"/>
        <childnode refid="3" relation="usage">
          <edgelabel>topic</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/net/nrf_cloud.h" line="604" column="1" bodyfile="include/net/nrf_cloud.h" bodystart="604" bodyend="627"/>
    <listofallmembers>
      <member refid="structnrf__cloud__init__param_a8bc95a0e1a618e627fce3efe575caaa6_1a8bc95a0e1a618e627fce3efe575caaa6" prot="public" virt="non-virtual"><scope>nrf_cloud_init_param</scope><name>application_version</name></member>
      <member refid="structnrf__cloud__init__param_ae6f3328b4ba85bbeb3cf16763f811a70_1ae6f3328b4ba85bbeb3cf16763f811a70" prot="public" virt="non-virtual"><scope>nrf_cloud_init_param</scope><name>client_id</name></member>
      <member refid="structnrf__cloud__init__param_a8e668966ecffed099a15d79a4336f1a4_1a8e668966ecffed099a15d79a4336f1a4" prot="public" virt="non-virtual"><scope>nrf_cloud_init_param</scope><name>event_handler</name></member>
      <member refid="structnrf__cloud__init__param_a51f18367632b76ef8887c1930d825245_1a51f18367632b76ef8887c1930d825245" prot="public" virt="non-virtual"><scope>nrf_cloud_init_param</scope><name>fmfu_dev_inf</name></member>
      <member refid="structnrf__cloud__init__param_ac8c1feef365075a02f065e4e4d72bf32_1ac8c1feef365075a02f065e4e4d72bf32" prot="public" virt="non-virtual"><scope>nrf_cloud_init_param</scope><name>hooks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
