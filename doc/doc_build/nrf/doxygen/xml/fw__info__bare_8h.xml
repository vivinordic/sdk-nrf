<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fw__info__bare_8h" kind="file" language="C++">
    <compoundname>fw_info_bare.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="fw__info_8h" local="no">include/fw_info.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>include/fw_info_bare.h</label>
        <link refid="fw__info__bare_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/bl_validation.h</label>
        <link refid="bl__validation_8h"/>
      </node>
      <node id="3">
        <label>include/bl_crypto.h</label>
        <link refid="bl__crypto_8h"/>
      </node>
      <node id="1">
        <label>include/fw_info_bare.h</label>
        <link refid="fw__info__bare_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/fw_info.h</label>
        <link refid="fw__info_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfw__info__ext__api" prot="public">fw_info_ext_api</innerclass>
    <innerclass refid="structfw__info__ext__api__request" prot="public">fw_info_ext_api_request</innerclass>
    <innerclass refid="structfw__info" prot="public">fw_info</innerclass>
    <innerclass refid="structext__api__provide__ext__api" prot="public">ext_api_provide_ext_api</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__fw__info__bare_ga05e112c3c885437430f4c8908e696a0c_1ga05e112c3c885437430f4c8908e696a0c" prot="public" static="no">
        <name>MAGIC_LEN_WORDS</name>
        <initializer>(CONFIG_FW_INFO_MAGIC_LEN / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="21" column="9" bodyfile="include/fw_info_bare.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_ga0f75431e4c212a40a5a59dae399cd99a_1ga0f75431e4c212a40a5a59dae399cd99a" prot="public" static="no">
        <name>FW_INFO_OFFSET0</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="24" column="9" bodyfile="include/fw_info_bare.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_ga3f2d0cca8acec7a0b7f207d7d62ce68c_1ga3f2d0cca8acec7a0b7f207d7d62ce68c" prot="public" static="no">
        <name>FW_INFO_OFFSET1</name>
        <initializer>0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="25" column="9" bodyfile="include/fw_info_bare.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_ga0bb442cc1e41b63f586aafee75aebf78_1ga0bb442cc1e41b63f586aafee75aebf78" prot="public" static="no">
        <name>FW_INFO_OFFSET2</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="26" column="9" bodyfile="include/fw_info_bare.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_ga9b0e8c61448141e1b8c32086d792fef1_1ga9b0e8c61448141e1b8c32086d792fef1" prot="public" static="no">
        <name>FW_INFO_OFFSET3</name>
        <initializer>0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="27" column="9" bodyfile="include/fw_info_bare.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_gaa994161baf1daf2abc34f0d3a3ad9600_1gaa994161baf1daf2abc34f0d3a3ad9600" prot="public" static="no">
        <name>FW_INFO_OFFSET4</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="28" column="9" bodyfile="include/fw_info_bare.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_gada889dc8a81a2da32c7622751bbdbcbe_1gada889dc8a81a2da32c7622751bbdbcbe" prot="public" static="no">
        <name>FW_INFO_OFFSET_COUNT</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="29" column="9" bodyfile="include/fw_info_bare.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_ga4c8da29991a7ea435bed730f48f61278_1ga4c8da29991a7ea435bed730f48f61278" prot="public" static="no">
        <name>FW_INFO_CURRENT_OFFSET</name>
        <initializer>(CONFIG_FW_INFO_OFFSET + <ref refid="group__fw__info_ga560b86f362bb7de199d1b64ec0740b8c_1ga560b86f362bb7de199d1b64ec0740b8c" kindref="member">FW_INFO_VECTOR_OFFSET</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="189" column="9" bodyfile="include/fw_info_bare.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__fw__info__bare_ga19e9a54005602c6d04fe25b1f0980500_1ga19e9a54005602c6d04fe25b1f0980500" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* fw_info_ext_api_provide_t) (const struct fw_info *fwinfo, bool provide)</definition>
        <argsstring>)(const struct fw_info *fwinfo, bool provide)</argsstring>
        <name>fw_info_ext_api_provide_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="219" column="9" bodyfile="include/fw_info_bare.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__fw__info__bare_ga0f1288a42c7aab29f7c9b878b9f853d0_1ga0f1288a42c7aab29f7c9b878b9f853d0" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t fw_info_allowed_offsets[]</definition>
        <argsstring>[]</argsstring>
        <name>fw_info_allowed_offsets</name>
        <initializer>= {
					 0x0 ,  0x200 ,
					 0x400 ,  0x800 ,
					 0x1000 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="192" column="23" bodyfile="include/fw_info_bare.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__fw__info__bare_ga91a7a927456b5c869ae7c1388736978c_1ga91a7a927456b5c869ae7c1388736978c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref> *</type>
        <definition>static const struct fw_info_ext_api* fw_info_ext_api_check</definition>
        <argsstring>(uint32_t ext_api_addr)</argsstring>
        <name>fw_info_ext_api_check</name>
        <param>
          <type>uint32_t</type>
          <declname>ext_api_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="67" column="42" bodyfile="include/fw_info_bare.h" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__fw__info__bare_ga0eaf0d4e2b05f24af0e72dab514e318f_1ga0eaf0d4e2b05f24af0e72dab514e318f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info" kindref="compound">fw_info</ref> *</type>
        <definition>static const struct fw_info* fw_info_check</definition>
        <argsstring>(uint32_t fw_info_addr)</argsstring>
        <name>fw_info_check</name>
        <param>
          <type>uint32_t</type>
          <declname>fw_info_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="173" column="34" bodyfile="include/fw_info_bare.h" bodystart="173" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__fw__info__bare_ga7b2b53932674a9376be334cdb53a8d17_1ga7b2b53932674a9376be334cdb53a8d17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info" kindref="compound">fw_info</ref> *</type>
        <definition>static const struct fw_info* fw_info_find</definition>
        <argsstring>(uint32_t firmware_address)</argsstring>
        <name>fw_info_find</name>
        <param>
          <type>uint32_t</type>
          <declname>firmware_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for the firmware_info structure inside the firmware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">firmware_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the image. The function will search at the allowed offsets from firmware_address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the <ref refid="structfw__info" kindref="compound">fw_info</ref> struct if found. Otherwise NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="205" column="34" bodyfile="include/fw_info_bare.h" bodystart="205" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FW_INFO_BARE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_BARE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="group__fw__info__bare_ga05e112c3c885437430f4c8908e696a0c_1ga05e112c3c885437430f4c8908e696a0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAGIC_LEN_WORDS<sp/>(CONFIG_FW_INFO_MAGIC_LEN<sp/>/<sp/>sizeof(uint32_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>supported<sp/>offsets<sp/>for<sp/>the<sp/>fw_info<sp/>struct.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="group__fw__info__bare_ga0f75431e4c212a40a5a59dae399cd99a_1ga0f75431e4c212a40a5a59dae399cd99a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET0<sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__fw__info__bare_ga3f2d0cca8acec7a0b7f207d7d62ce68c_1ga3f2d0cca8acec7a0b7f207d7d62ce68c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET1<sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__fw__info__bare_ga0bb442cc1e41b63f586aafee75aebf78_1ga0bb442cc1e41b63f586aafee75aebf78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET2<sp/>0x400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__fw__info__bare_ga9b0e8c61448141e1b8c32086d792fef1_1ga9b0e8c61448141e1b8c32086d792fef1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET3<sp/>0x800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__fw__info__bare_gaa994161baf1daf2abc34f0d3a3ad9600_1gaa994161baf1daf2abc34f0d3a3ad9600" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET4<sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__fw__info__bare_gada889dc8a81a2da32c7622751bbdbcbe_1gada889dc8a81a2da32c7622751bbdbcbe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_OFFSET_COUNT<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structfw__info__ext__api" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Magic<sp/>value<sp/>to<sp/>verify<sp/>that<sp/>the<sp/>struct<sp/>has<sp/>the<sp/>correct<sp/>format.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>magic<sp/>value<sp/>will<sp/>change<sp/>whenever<sp/>the<sp/>format<sp/>changes.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structfw__info__ext__api_a742917ff82fc921a8296b5cea325039f_1a742917ff82fc921a8296b5cea325039f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>magic[<ref refid="group__fw__info__bare_ga05e112c3c885437430f4c8908e696a0c_1ga05e112c3c885437430f4c8908e696a0c" kindref="member">MAGIC_LEN_WORDS</ref>];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>length<sp/>of<sp/>this<sp/>header<sp/>plus<sp/>everything<sp/>after<sp/>this<sp/>header.<sp/>Must<sp/>be</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>word-aligned.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structfw__info__ext__api_ae9e77f2e066162e3caf3eef5746acce9_1ae9e77f2e066162e3caf3eef5746acce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api_ae9e77f2e066162e3caf3eef5746acce9_1ae9e77f2e066162e3caf3eef5746acce9" kindref="member">ext_api_len</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>id<sp/>of<sp/>the<sp/>EXT_API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structfw__info__ext__api_ab07cd84b457995a9fb0bdc913d735c41_1ab07cd84b457995a9fb0bdc913d735c41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api_ab07cd84b457995a9fb0bdc913d735c41_1ab07cd84b457995a9fb0bdc913d735c41" kindref="member">ext_api_id</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flags<sp/>specifying<sp/>properties<sp/>of<sp/>the<sp/>EXT_API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structfw__info__ext__api_ab491c14c85504979a561f302f93a6142_1ab491c14c85504979a561f302f93a6142" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api_ab491c14c85504979a561f302f93a6142_1ab491c14c85504979a561f302f93a6142" kindref="member">ext_api_flags</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>version<sp/>of<sp/>this<sp/>EXT_API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structfw__info__ext__api_a58a78841d204655dfc137554f909f65e_1a58a78841d204655dfc137554f909f65e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api_a58a78841d204655dfc137554f909f65e_1a58a78841d204655dfc137554f909f65e" kindref="member">ext_api_version</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>and<sp/>provide<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>fw_info_ext_api<sp/>structure.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@return<sp/>pointer<sp/>if<sp/>valid,<sp/>NULL<sp/>if<sp/>not.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__fw__info__bare_ga91a7a927456b5c869ae7c1388736978c_1ga91a7a927456b5c869ae7c1388736978c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>*<ref refid="group__fw__info__bare_ga91a7a927456b5c869ae7c1388736978c_1ga91a7a927456b5c869ae7c1388736978c" kindref="member">fw_info_ext_api_check</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ext_api_addr)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>*ext_api;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ext_api_magic[]<sp/>=<sp/>{EXT_API_MAGIC};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext_api<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>*)(ext_api_addr);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(ext_api-&gt;<ref refid="structfw__info__ext__api_a742917ff82fc921a8296b5cea325039f_1a742917ff82fc921a8296b5cea325039f" kindref="member">magic</ref>,<sp/>ext_api_magic,<sp/>CONFIG_FW_INFO_MAGIC_LEN)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ext_api;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structfw__info__ext__api__request" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structfw__info__ext__api__request" kindref="compound">fw_info_ext_api_request</ref><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>requested<sp/>EXT_API.<sp/>This<sp/>struct<sp/>defines<sp/>the<sp/>requested<sp/>ID<sp/>as<sp/>well</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>as<sp/>the<sp/>minimum<sp/>required<sp/>version<sp/>and<sp/>the<sp/>flags<sp/>that<sp/>must<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>request;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>maximum<sp/>accepted<sp/>version.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structfw__info__ext__api__request_aa529e6d2a1c186f696903e57c138b4a7_1aa529e6d2a1c186f696903e57c138b4a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api__request_aa529e6d2a1c186f696903e57c138b4a7_1aa529e6d2a1c186f696903e57c138b4a7" kindref="member">ext_api_max_version</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>EXT_API<sp/>is<sp/>required.<sp/>I.e.<sp/>having<sp/>this<sp/>EXT_API<sp/>available<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hard<sp/>requirement.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structfw__info__ext__api__request_a0d7e339d5c46ad45e36e1b2aad4df023_1a0d7e339d5c46ad45e36e1b2aad4df023" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info__ext__api__request_a0d7e339d5c46ad45e36e1b2aad4df023_1a0d7e339d5c46ad45e36e1b2aad4df023" kindref="member">required</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Where<sp/>to<sp/>place<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>EXT_API.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structfw__info__ext__api__request_aa58cf18594eeedb8c21a817873741dbf_1aa58cf18594eeedb8c21a817873741dbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>**<ref refid="structfw__info__ext__api__request_aa58cf18594eeedb8c21a817873741dbf_1aa58cf18594eeedb8c21a817873741dbf" kindref="member">ext_api</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structfw__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__packed<sp/><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Magic<sp/>value<sp/>to<sp/>verify<sp/>that<sp/>the<sp/>struct<sp/>has<sp/>the<sp/>correct<sp/>format.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>magic<sp/>value<sp/>will<sp/>change<sp/>whenever<sp/>the<sp/>format<sp/>changes.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structfw__info_a18e88a48449ef52b75e21d4221e9f9a5_1a18e88a48449ef52b75e21d4221e9f9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>magic[<ref refid="group__fw__info__bare_ga05e112c3c885437430f4c8908e696a0c_1ga05e112c3c885437430f4c8908e696a0c" kindref="member">MAGIC_LEN_WORDS</ref>];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Total<sp/>size<sp/>of<sp/>this<sp/>fw_info<sp/>struct<sp/>including<sp/>the<sp/>EXT_API<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structfw__info_ab618abfff92f3a4388941798bedb6167_1ab618abfff92f3a4388941798bedb6167" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_ab618abfff92f3a4388941798bedb6167_1ab618abfff92f3a4388941798bedb6167" kindref="member">total_size</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>the<sp/>firmware<sp/>image<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structfw__info_aa1217e6419e685236aba845203ca44e5_1aa1217e6419e685236aba845203ca44e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_aa1217e6419e685236aba845203ca44e5_1aa1217e6419e685236aba845203ca44e5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Monotonically<sp/>increasing<sp/>version<sp/>counter.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="structfw__info_a41e6ae97618240abd68cd4c20f39c622_1a41e6ae97618240abd68cd4c20f39c622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_a41e6ae97618240abd68cd4c20f39c622_1a41e6ae97618240abd68cd4c20f39c622" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>address<sp/>of<sp/>the<sp/>start<sp/>of<sp/>the<sp/>image.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structfw__info_aed3c79b2e6602a638acc005793645e71_1aed3c79b2e6602a638acc005793645e71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_aed3c79b2e6602a638acc005793645e71_1aed3c79b2e6602a638acc005793645e71" kindref="member">address</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>address<sp/>of<sp/>the<sp/>boot<sp/>point<sp/>(vector<sp/>table)<sp/>of<sp/>the<sp/>firmware.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structfw__info_a5f7cbe27106d03e05c23d333b50877ca_1a5f7cbe27106d03e05c23d333b50877ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_a5f7cbe27106d03e05c23d333b50877ca_1a5f7cbe27106d03e05c23d333b50877ca" kindref="member">boot_address</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>that<sp/>can<sp/>be<sp/>modified<sp/>to<sp/>invalidate<sp/>the<sp/>firmware.<sp/>Has<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>CONFIG_FW_INFO_VALID_VAL<sp/>when<sp/>valid.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structfw__info_a080aaeb01f92541aaa491d1d0eca3368_1a080aaeb01f92541aaa491d1d0eca3368" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_a080aaeb01f92541aaa491d1d0eca3368_1a080aaeb01f92541aaa491d1d0eca3368" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reserved<sp/>values<sp/>(set<sp/>to<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structfw__info_a457aa31ebd5e1fbf68bbc7dc47405406_1a457aa31ebd5e1fbf68bbc7dc47405406" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved[4];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>EXT_APIs<sp/>in<sp/>the<sp/>@ref<sp/>ext_apis<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structfw__info_a117d8f9a33ce0a8e6e01db4e9d14292f_1a117d8f9a33ce0a8e6e01db4e9d14292f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_a117d8f9a33ce0a8e6e01db4e9d14292f_1a117d8f9a33ce0a8e6e01db4e9d14292f" kindref="member">ext_api_num</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>EXT_API<sp/>requests<sp/>in<sp/>the<sp/>@ref<sp/>ext_apis<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structfw__info_acf2ab574181f077c45696978bc6ad1f5_1acf2ab574181f077c45696978bc6ad1f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structfw__info_acf2ab574181f077c45696978bc6ad1f5_1acf2ab574181f077c45696978bc6ad1f5" kindref="member">ext_api_request_num</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>list<sp/>of<sp/>@ref<sp/>ext_api_num<sp/>EXT_APIs<sp/>followed<sp/>by<sp/>@ref</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ext_api_request_num<sp/>EXT_API<sp/>requests.<sp/>Since<sp/>the<sp/>entries<sp/>have</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>different<sp/>lengths,<sp/>the<sp/>@ref<sp/>ext_api_len<sp/>of<sp/>an<sp/>entry<sp/>is<sp/>used<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>next<sp/>entry.<sp/>To<sp/>get<sp/>to<sp/>the<sp/>EXT_API<sp/>requests,<sp/>first<sp/>iterate<sp/>over</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>EXT_APIs.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref><sp/>ext_apis[];</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>and<sp/>provide<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>firmware_info<sp/>structure.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@return<sp/>pointer<sp/>if<sp/>valid,<sp/>NULL<sp/>if<sp/>not.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group__fw__info__bare_ga0eaf0d4e2b05f24af0e72dab514e318f_1ga0eaf0d4e2b05f24af0e72dab514e318f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*<ref refid="group__fw__info__bare_ga0eaf0d4e2b05f24af0e72dab514e318f_1ga0eaf0d4e2b05f24af0e72dab514e318f" kindref="member">fw_info_check</ref>(uint32_t<sp/>fw_info_addr)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*finfo;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>fw_info_magic[]<sp/>=<sp/>{FIRMWARE_INFO_MAGIC};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finfo<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*)(fw_info_addr);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(finfo-&gt;<ref refid="structfw__info_a18e88a48449ef52b75e21d4221e9f9a5_1a18e88a48449ef52b75e21d4221e9f9a5" kindref="member">magic</ref>,<sp/>fw_info_magic,<sp/>CONFIG_FW_INFO_MAGIC_LEN)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finfo;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>actual<sp/>fw_info<sp/>struct<sp/>offset<sp/>accounting<sp/>for<sp/>any<sp/>space<sp/>in<sp/>front<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>image,<sp/>e.g.<sp/>when<sp/>there&apos;s<sp/>a<sp/>header.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__fw__info__bare_ga4c8da29991a7ea435bed730f48f61278_1ga4c8da29991a7ea435bed730f48f61278" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FW_INFO_CURRENT_OFFSET<sp/>(CONFIG_FW_INFO_OFFSET<sp/>+<sp/>FW_INFO_VECTOR_OFFSET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Array<sp/>for<sp/>run<sp/>time<sp/>usage.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__fw__info__bare_ga0f1288a42c7aab29f7c9b878b9f853d0_1ga0f1288a42c7aab29f7c9b878b9f853d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__fw__info__bare_ga0f1288a42c7aab29f7c9b878b9f853d0_1ga0f1288a42c7aab29f7c9b878b9f853d0" kindref="member">fw_info_allowed_offsets</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fw__info__bare_ga0f75431e4c212a40a5a59dae399cd99a_1ga0f75431e4c212a40a5a59dae399cd99a" kindref="member">FW_INFO_OFFSET0</ref>,<sp/><ref refid="group__fw__info__bare_ga3f2d0cca8acec7a0b7f207d7d62ce68c_1ga3f2d0cca8acec7a0b7f207d7d62ce68c" kindref="member">FW_INFO_OFFSET1</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fw__info__bare_ga0bb442cc1e41b63f586aafee75aebf78_1ga0bb442cc1e41b63f586aafee75aebf78" kindref="member">FW_INFO_OFFSET2</ref>,<sp/><ref refid="group__fw__info__bare_ga9b0e8c61448141e1b8c32086d792fef1_1ga9b0e8c61448141e1b8c32086d792fef1" kindref="member">FW_INFO_OFFSET3</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fw__info__bare_gaa994161baf1daf2abc34f0d3a3ad9600_1gaa994161baf1daf2abc34f0d3a3ad9600" kindref="member">FW_INFO_OFFSET4</ref>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group__fw__info__bare_ga7b2b53932674a9376be334cdb53a8d17_1ga7b2b53932674a9376be334cdb53a8d17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*<ref refid="group__fw__info__bare_ga7b2b53932674a9376be334cdb53a8d17_1ga7b2b53932674a9376be334cdb53a8d17" kindref="member">fw_info_find</ref>(uint32_t<sp/>firmware_address)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*finfo;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__fw__info__bare_gada889dc8a81a2da32c7622751bbdbcbe_1gada889dc8a81a2da32c7622751bbdbcbe" kindref="member">FW_INFO_OFFSET_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finfo<sp/>=<sp/><ref refid="group__fw__info__bare_ga0eaf0d4e2b05f24af0e72dab514e318f_1ga0eaf0d4e2b05f24af0e72dab514e318f" kindref="member">fw_info_check</ref>(firmware_address<sp/>+</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fw__info__bare_ga0f1288a42c7aab29f7c9b878b9f853d0_1ga0f1288a42c7aab29f7c9b878b9f853d0" kindref="member">fw_info_allowed_offsets</ref>[i]);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finfo)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finfo;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group__fw__info__bare_ga19e9a54005602c6d04fe25b1f0980500_1ga19e9a54005602c6d04fe25b1f0980500" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="group__fw__info__bare_ga19e9a54005602c6d04fe25b1f0980500_1ga19e9a54005602c6d04fe25b1f0980500" kindref="member">fw_info_ext_api_provide_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*fwinfo,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>provide);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structext__api__provide__ext__api" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structext__api__provide__ext__api" kindref="compound">ext_api_provide_ext_api</ref><sp/>{</highlight></codeline>
<codeline lineno="226" refid="structext__api__provide__ext__api_a7d4270f7be4d57dc3b89bda940eef569_1a7d4270f7be4d57dc3b89bda940eef569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fw__info__bare_ga19e9a54005602c6d04fe25b1f0980500_1ga19e9a54005602c6d04fe25b1f0980500" kindref="member">fw_info_ext_api_provide_t</ref><sp/><ref refid="structext__api__provide__ext__api_a7d4270f7be4d57dc3b89bda940eef569_1a7d4270f7be4d57dc3b89bda940eef569" kindref="member">ext_api_provide</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FW_INFO_BARE_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/fw_info_bare.h"/>
  </compounddef>
</doxygen>
