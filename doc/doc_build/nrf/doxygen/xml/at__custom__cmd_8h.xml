<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="at__custom__cmd_8h" kind="file" language="C++">
    <compoundname>at_custom_cmd.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">zephyr/kernel.h</includes>
    <includes local="no">zephyr/sys/util_macro.h</includes>
    <includes local="no">zephyr/toolchain/common.h</includes>
    <includes local="no">nrf_modem_at.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/modem/at_custom_cmd.h</label>
        <link refid="at__custom__cmd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>zephyr/toolchain/common.h</label>
      </node>
      <node id="6">
        <label>nrf_modem_at.h</label>
      </node>
      <node id="4">
        <label>zephyr/sys/util_macro.h</label>
      </node>
      <node id="3">
        <label>zephyr/kernel.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__at__custom__cmd_gaf5177193fbf770996c75658353786e40_1gaf5177193fbf770996c75658353786e40" prot="public" static="no">
        <name>AT_CUSTOM_CMD_PAUSED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="52" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__at__custom__cmd_gabbc68502d00650be9be27ddaa619cdc7_1gabbc68502d00650be9be27ddaa619cdc7" prot="public" static="no">
        <name>AT_CUSTOM_CMD_ACTIVE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="54" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__at__custom__cmd_ga64bdbbc83b4076c51c2e65dc88af37b8_1ga64bdbbc83b4076c51c2e65dc88af37b8" prot="public" static="no">
        <name>AT_CUSTOM_CMD</name>
        <param><defname>entry</defname></param>
        <param><defname>_filter</defname></param>
        <param><defname>_callback</defname></param>
        <param><defname>...</defname></param>
        <initializer>	static int _callback(char *buf, size_t len, char *at_cmd);                                 \
	static STRUCT_SECTION_ITERABLE(nrf_modem_at_cmd_filter, entry) = {                         \
		.cmd = _filter,                                                                    \
		.callback = _callback,                                                             \
		COND_CODE_1(__VA_ARGS__, (.paused = __VA_ARGS__,), ())                             \
	}</initializer>
        <briefdescription>
<para>Define an custom AT command callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The (partial) AT command on which the callback should trigger. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The AT command callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial state ( <computeroutput>AT_CUSTOM_CMD_PAUSED</computeroutput> or <computeroutput>AT_CUSTOM_CMD_ACTIVE</computeroutput> ). The default is <computeroutput>AT_CUSTOM_CMD_ACTIVE</computeroutput> . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="65" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__at__custom__cmd_ga5793d4dc72cd5568b4a99592bfd34591_1ga5793d4dc72cd5568b4a99592bfd34591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int at_custom_cmd_respond</definition>
        <argsstring>(char *buf, size_t buf_size, const char *response,...)</argsstring>
        <name>at_custom_cmd_respond</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Fill response buffer without overflowing the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For the modem library to accept the response in <computeroutput>buf</computeroutput> as a success, the response must contain &quot;OK\\r\\n&quot;. If the response is an error, use &quot;ERROR\\r\\n&quot; or appropriate CMS/CME responses, e.g. &quot;+CMS ERROR: &lt;errorcode&gt;&quot;.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to put response into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the response buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Response format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Format arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-NRF_EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>if no buffer provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-NRF_E2BIG</parametername>
</parameternamelist>
<parameterdescription>
<para>if the provided buffer is too small for the response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="48" column="5" declfile="include/modem/at_custom_cmd.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__at__custom__cmd_ga143d89c95c972ab6d9962353662fa8e3_1ga143d89c95c972ab6d9962353662fa8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at_custom_cmd_pause</definition>
        <argsstring>(struct nrf_modem_at_cmd_filter *entry)</argsstring>
        <name>at_custom_cmd_pause</name>
        <param>
          <type>struct nrf_modem_at_cmd_filter *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Pause a custom AT command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the custom AT command to pause. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="78" column="6" declfile="include/modem/at_custom_cmd.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__at__custom__cmd_ga2f6c9df1a7464f8e5e7520c52c5f930b_1ga2f6c9df1a7464f8e5e7520c52c5f930b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at_custom_cmd_resume</definition>
        <argsstring>(struct nrf_modem_at_cmd_filter *entry)</argsstring>
        <name>at_custom_cmd_resume</name>
        <param>
          <type>struct nrf_modem_at_cmd_filter *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Resume a custom AT command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the custom AT command to resume. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="85" column="6" declfile="include/modem/at_custom_cmd.h" declline="85" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AT_CUSTOM_CMD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AT_CUSTOM_CMD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/sys/util_macro.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/toolchain/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrf_modem_at.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__at__custom__cmd_ga5793d4dc72cd5568b4a99592bfd34591_1ga5793d4dc72cd5568b4a99592bfd34591" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__at__custom__cmd_ga5793d4dc72cd5568b4a99592bfd34591_1ga5793d4dc72cd5568b4a99592bfd34591" kindref="member">at_custom_cmd_respond</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*response,<sp/>...);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Custom<sp/>command<sp/>filter<sp/>is<sp/>paused.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__at__custom__cmd_gaf5177193fbf770996c75658353786e40_1gaf5177193fbf770996c75658353786e40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AT_CUSTOM_CMD_PAUSED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Custom<sp/>command<sp/>filter<sp/>is<sp/>active,<sp/>default.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__at__custom__cmd_gabbc68502d00650be9be27ddaa619cdc7_1gabbc68502d00650be9be27ddaa619cdc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AT_CUSTOM_CMD_ACTIVE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__at__custom__cmd_ga64bdbbc83b4076c51c2e65dc88af37b8_1ga64bdbbc83b4076c51c2e65dc88af37b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AT_CUSTOM_CMD(entry,<sp/>_filter,<sp/>_callback,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>int<sp/>_callback(char<sp/>*buf,<sp/>size_t<sp/>len,<sp/>char<sp/>*at_cmd);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>STRUCT_SECTION_ITERABLE(nrf_modem_at_cmd_filter,<sp/>entry)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cmd<sp/>=<sp/>_filter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.callback<sp/>=<sp/>_callback,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COND_CODE_1(__VA_ARGS__,<sp/>(.paused<sp/>=<sp/>__VA_ARGS__,),<sp/>())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__at__custom__cmd_ga143d89c95c972ab6d9962353662fa8e3_1ga143d89c95c972ab6d9962353662fa8e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__at__custom__cmd_ga143d89c95c972ab6d9962353662fa8e3_1ga143d89c95c972ab6d9962353662fa8e3" kindref="member">at_custom_cmd_pause</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nrf_modem_at_cmd_filter<sp/>*entry);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__at__custom__cmd_ga2f6c9df1a7464f8e5e7520c52c5f930b_1ga2f6c9df1a7464f8e5e7520c52c5f930b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__at__custom__cmd_ga2f6c9df1a7464f8e5e7520c52c5f930b_1ga2f6c9df1a7464f8e5e7520c52c5f930b" kindref="member">at_custom_cmd_resume</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>nrf_modem_at_cmd_filter<sp/>*entry);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AT_CUSTOM_CMD_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/modem/at_custom_cmd.h"/>
  </compounddef>
</doxygen>
