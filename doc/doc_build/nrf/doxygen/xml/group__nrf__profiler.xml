<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__nrf__profiler" kind="group">
    <compoundname>nrf_profiler</compoundname>
    <title>Profiler</title>
    <innerclass refid="structnrf__profiler__event__enabled__bm" prot="public">nrf_profiler_event_enabled_bm</innerclass>
    <innerclass refid="structlog__event__buf" prot="public">log_event_buf</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__profiler_1ga2d2c506d48e3db92fe5d45ae6eeeed63" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_profiler_arg</name>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63a145ce63791337c3a2d874d8c332b26a5" prot="public">
          <name>NRF_PROFILER_ARG_U8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63ad52cb91578a8229ff4ab3542165fd53e" prot="public">
          <name>NRF_PROFILER_ARG_S8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63ab22522e9b7a5fef5cc855d8972a998af" prot="public">
          <name>NRF_PROFILER_ARG_U16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63aba912bee9c50380d76fea244f62f76fb" prot="public">
          <name>NRF_PROFILER_ARG_S16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63ab0d4e740d75d8891d9ff18733eead5e8" prot="public">
          <name>NRF_PROFILER_ARG_U32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63a9a3ca0cdefa977358a98eea4d6f9ee4f" prot="public">
          <name>NRF_PROFILER_ARG_S32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63a195c588ce05d98ce6402050bcc0d9a89" prot="public">
          <name>NRF_PROFILER_ARG_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1gga2d2c506d48e3db92fe5d45ae6eeeed63a80c967d7534b5449f87640275a958cbc" prot="public">
          <name>NRF_PROFILER_ARG_TIMESTAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Data types for profiling. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="56" column="1" bodyfile="include/nrf_profiler.h" bodystart="56" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__nrf__profiler_1gaedcb060837da9289ca44e3ddc5f83cce" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrf_profiler_num_events</definition>
        <argsstring></argsstring>
        <name>nrf_profiler_num_events</name>
        <briefdescription>
<para>Number of event types registered in the Profiler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="51" column="16" declfile="include/nrf_profiler.h" declline="51" declcolumn="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__profiler_1gabc38b4cb7b3110c23bd63c0e37d07b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_profiler_init</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_profiler_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Profiler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is thread-safe, but not safe to use in interrupts.</para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="88" column="5" declfile="include/nrf_profiler.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga52fd35c4a8f1807014bd06de218522aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_term</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_profiler_term</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Terminate the Profiler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="97" column="6" declfile="include/nrf_profiler.h" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga205c9161425ac0b77528977d7b104ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* nrf_profiler_get_event_descr</definition>
        <argsstring>(size_t nrf_profiler_event_id)</argsstring>
        <name>nrf_profiler_get_event_descr</name>
        <param>
          <type>size_t</type>
          <declname>nrf_profiler_event_id</declname>
        </param>
        <briefdescription>
<para>Retrieve the description of an event type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nrf_profiler_event_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Event description. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="109" column="12" declfile="include/nrf_profiler.h" declline="109" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga5decf8a2cdc752e24359e8fe7eec6e4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_profiling_enabled</definition>
        <argsstring>(size_t nrf_profiler_event_id)</argsstring>
        <name>is_profiling_enabled</name>
        <param>
          <type>size_t</type>
          <declname>nrf_profiler_event_id</declname>
        </param>
        <briefdescription>
<para>Check if profiling is enabled for a given event type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nrf_profiler_event_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Logical value indicating if the event type is currently profiled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="123" column="20" bodyfile="include/nrf_profiler.h" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1gac8c9cc3f572055d47814578b5bc5a077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t nrf_profiler_register_event_type</definition>
        <argsstring>(const char *name, const char *const *args, const enum nrf_profiler_arg *arg_types, uint8_t arg_cnt)</argsstring>
        <name>nrf_profiler_register_event_type</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const enum <ref refid="group__nrf__profiler_ga2d2c506d48e3db92fe5d45ae6eeeed63_1ga2d2c506d48e3db92fe5d45ae6eeeed63" kindref="member">nrf_profiler_arg</ref> *</type>
          <declname>arg_types</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>arg_cnt</declname>
        </param>
        <briefdescription>
<para>Register an event type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is thread-safe, but not safe to use in interrupts.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Names of data values sent with the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_types</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of data values sent with the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data values sent with the event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ID assigned to the event type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="146" column="10" declfile="include/nrf_profiler.h" declline="146" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga3d657948e978f053e141920113b9fc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_start</definition>
        <argsstring>(struct log_event_buf *buf)</argsstring>
        <name>nrf_profiler_log_start</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Initialize a buffer for the data of an event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="161" column="6" declfile="include/nrf_profiler.h" declline="161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga5ea5dcbaae81e4a019c33324994839a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_uint32</definition>
        <argsstring>(struct log_event_buf *buf, uint32_t data)</argsstring>
        <name>nrf_profiler_log_encode_uint32</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add uint32_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="175" column="6" declfile="include/nrf_profiler.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga99f27928df3098d2e2f0eec88887f395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_int32</definition>
        <argsstring>(struct log_event_buf *buf, int32_t data)</argsstring>
        <name>nrf_profiler_log_encode_int32</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add int32_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="190" column="6" declfile="include/nrf_profiler.h" declline="190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1gad2347e1b4f3611872512868a4c69fc13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_uint16</definition>
        <argsstring>(struct log_event_buf *buf, uint16_t data)</argsstring>
        <name>nrf_profiler_log_encode_uint16</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add uint16_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="205" column="6" declfile="include/nrf_profiler.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1gae296c4a4c38193c4511be953f9851539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_int16</definition>
        <argsstring>(struct log_event_buf *buf, int16_t data)</argsstring>
        <name>nrf_profiler_log_encode_int16</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add int16_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="220" column="6" declfile="include/nrf_profiler.h" declline="220" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga159494e2ac49a776fc4b5952a83d5d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_uint8</definition>
        <argsstring>(struct log_event_buf *buf, uint8_t data)</argsstring>
        <name>nrf_profiler_log_encode_uint8</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add uint8_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="235" column="6" declfile="include/nrf_profiler.h" declline="235" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1gafd2f2c3324aa81e80364fa13ab1942e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_int8</definition>
        <argsstring>(struct log_event_buf *buf, int8_t data)</argsstring>
        <name>nrf_profiler_log_encode_int8</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode and add int8_t data type to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="250" column="6" declfile="include/nrf_profiler.h" declline="250" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1gacaf23e722c1b6211383b34380678bd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_encode_string</definition>
        <argsstring>(struct log_event_buf *buf, const char *string)</argsstring>
        <name>nrf_profiler_log_encode_string</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Encode and add string to a buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum 255 characters can be sent (the rest is omitted).</para>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>String to add to the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="267" column="6" declfile="include/nrf_profiler.h" declline="267" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga7db5285c35e0dcbadff6a8449d8933b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_add_mem_address</definition>
        <argsstring>(struct log_event_buf *buf, const void *mem_address)</argsstring>
        <name>nrf_profiler_log_add_mem_address</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>mem_address</declname>
        </param>
        <briefdescription>
<para>Encode and add the event&apos;s address in memory to the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This information is used for event identification.</para>
<para><simplesect kind="note"><para>The buffer must be initialized with <ref refid="group__nrf__profiler_ga3d657948e978f053e141920113b9fc1e_1ga3d657948e978f053e141920113b9fc1e" kindref="member">nrf_profiler_log_start</ref> before calling this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mem_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory address to encode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="285" column="6" declfile="include/nrf_profiler.h" declline="285" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__profiler_1ga3186f2678c6950b46dc6abd3eb43f02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_profiler_log_send</definition>
        <argsstring>(struct log_event_buf *buf, uint16_t event_type_id)</argsstring>
        <name>nrf_profiler_log_send</name>
        <param>
          <type>struct <ref refid="structlog__event__buf" kindref="compound">log_event_buf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>event_type_id</declname>
        </param>
        <briefdescription>
<para>Send data from the buffer to the host. </para>
        </briefdescription>
        <detaileddescription>
<para>This function only sends data that is already stored in the buffer. Use <ref refid="group__nrf__profiler_ga5ea5dcbaae81e4a019c33324994839a3_1ga5ea5dcbaae81e4a019c33324994839a3" kindref="member">nrf_profiler_log_encode_uint32</ref>, <ref refid="group__nrf__profiler_ga99f27928df3098d2e2f0eec88887f395_1ga99f27928df3098d2e2f0eec88887f395" kindref="member">nrf_profiler_log_encode_int32</ref>, <ref refid="group__nrf__profiler_gad2347e1b4f3611872512868a4c69fc13_1gad2347e1b4f3611872512868a4c69fc13" kindref="member">nrf_profiler_log_encode_uint16</ref>, <ref refid="group__nrf__profiler_gae296c4a4c38193c4511be953f9851539_1gae296c4a4c38193c4511be953f9851539" kindref="member">nrf_profiler_log_encode_int16</ref>, <ref refid="group__nrf__profiler_ga159494e2ac49a776fc4b5952a83d5d67_1ga159494e2ac49a776fc4b5952a83d5d67" kindref="member">nrf_profiler_log_encode_uint8</ref>, <ref refid="group__nrf__profiler_gafd2f2c3324aa81e80364fa13ab1942e7_1gafd2f2c3324aa81e80364fa13ab1942e7" kindref="member">nrf_profiler_log_encode_int8</ref>, <ref refid="group__nrf__profiler_gacaf23e722c1b6211383b34380678bd4f_1gacaf23e722c1b6211383b34380678bd4f" kindref="member">nrf_profiler_log_encode_string</ref> or <ref refid="group__nrf__profiler_ga7db5285c35e0dcbadff6a8449d8933b7_1ga7db5285c35e0dcbadff6a8449d8933b7" kindref="member">nrf_profiler_log_add_mem_address</ref> to add data to the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event_type_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Event type ID as assigned to the event type when it is registered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="307" column="6" declfile="include/nrf_profiler.h" declline="307" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__profiler_1ga875c424e7230fa161764d98f853ae3c5" prot="public" static="no">
        <name>CONFIG_NRF_PROFILER_MAX_NUMBER_OF_APP_EVENTS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="24" column="9" bodyfile="include/nrf_profiler.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__profiler_1ga8d3a03f301353d6b59d35733e049f66f" prot="public" static="no">
        <name>CONFIG_NRF_PROFILER_NUMBER_OF_INTERNAL_EVENTS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of internal events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="29" column="9" bodyfile="include/nrf_profiler.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__profiler_1ga1eac0f299c2b65f6ef2e8bcef782952b" prot="public" static="no">
        <name>NRF_PROFILER_MAX_NUMBER_OF_APPLICATION_AND_INTERNAL_EVENTS</name>
        <initializer>	((<ref refid="group__nrf__profiler_ga875c424e7230fa161764d98f853ae3c5_1ga875c424e7230fa161764d98f853ae3c5" kindref="member">CONFIG_NRF_PROFILER_MAX_NUMBER_OF_APP_EVENTS</ref>) + \
	(<ref refid="group__nrf__profiler_ga8d3a03f301353d6b59d35733e049f66f_1ga8d3a03f301353d6b59d35733e049f66f" kindref="member">CONFIG_NRF_PROFILER_NUMBER_OF_INTERNAL_EVENTS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of events including user application events and internal events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nrf_profiler.h" line="33" column="9" bodyfile="include/nrf_profiler.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Profiler. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
