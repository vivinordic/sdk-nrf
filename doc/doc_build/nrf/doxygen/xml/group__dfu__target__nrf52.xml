<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__dfu__target__nrf52" kind="group">
    <compoundname>dfu_target_nrf52</compoundname>
    <title>NRF52 DFU Target</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target__nrf52_1ga14013905255b568133809040ff440bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_nrf52_set_buf</definition>
        <argsstring>(uint8_t *buf, size_t len)</argsstring>
        <name>dfu_target_nrf52_set_buf</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set buffer to use for flash write operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>value if successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" line="29" column="5" declfile="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" declline="29" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__nrf52_1gaae3d67313e2cd1c877dfd0a4c3be47a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_nrf52_init</definition>
        <argsstring>(size_t file_size)</argsstring>
        <name>dfu_target_nrf52_init</name>
        <param>
          <type>size_t</type>
          <declname>file_size</declname>
        </param>
        <briefdescription>
<para>Initialize dfu target, perform steps necessary to receive firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the current file being downloaded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" line="38" column="5" declfile="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" declline="38" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__nrf52_1gaa9ab8377c78814296f7d1f71a9bf9e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_nrf52_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_nrf52_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get offset of firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" line="47" column="5" declfile="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__nrf52_1ga2ef1338e4906305a05daf7b5ae1ad3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_nrf52_write</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_nrf52_write</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write firmware data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data that should be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" line="57" column="5" declfile="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" declline="57" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__nrf52_1ga0ec1b6ff08d752450056f8bcc290de08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_nrf52_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_nrf52_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>Deinitialize resources and finalize firmware upgrade if successful. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the firmware was successfully recived.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" line="66" column="5" declfile="applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h" declline="66" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DFU Target for upgrades performed by NRF52 DFU. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
