<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__dfu__target__full__modem" kind="group">
    <compoundname>dfu_target_full_modem</compoundname>
    <title>Full Modem DFU Target</title>
    <innerclass refid="structdfu__target__fmfu__fdev" prot="public">dfu_target_fmfu_fdev</innerclass>
    <innerclass refid="structdfu__target__full__modem__params" prot="public">dfu_target_full_modem_params</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga7dbcc1bcb469c31aec9ea953c0931703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_cfg</definition>
        <argsstring>(const struct dfu_target_full_modem_params *params)</argsstring>
        <name>dfu_target_full_modem_cfg</name>
        <param>
          <type>const struct <ref refid="structdfu__target__full__modem__params" kindref="compound">dfu_target_full_modem_params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Configure resources required by dfu_target_full_modem. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to dfu target full modem update parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>integer if successful, otherwise negative errno. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="60" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga22194d10c65e304359172ebfe3412403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_fdev_get</definition>
        <argsstring>(struct dfu_target_fmfu_fdev *const fdev)</argsstring>
        <name>dfu_target_full_modem_fdev_get</name>
        <param>
          <type>struct <ref refid="structdfu__target__fmfu__fdev" kindref="compound">dfu_target_fmfu_fdev</ref> *const</type>
          <declname>fdev</declname>
        </param>
        <briefdescription>
<para>Get the configured flash device information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">fdev</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the flash device information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="69" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="69" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga65c65fe61617bab7ec30066bf83eac2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dfu_target_full_modem_identify</definition>
        <argsstring>(const void *const buf)</argsstring>
        <name>dfu_target_full_modem_identify</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>See if data in buf indicates a full modem update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if data matches, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="78" column="6" declfile="include/dfu/dfu_target_full_modem.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga7f3caab7c98c4346811a559cf84ac8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_init</definition>
        <argsstring>(size_t file_size, int img_num, dfu_target_callback_t callback)</argsstring>
        <name>dfu_target_full_modem_init</name>
        <param>
          <type>size_t</type>
          <declname>file_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <param>
          <type><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Initialize dfu target, perform steps necessary to receive firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the current file being downloaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Image pair index. The value is not used currently. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Not in use. In place to be compatible with DFU target API.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="90" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="90" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga96c1f2dbd5c9404f06738d241da71c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_full_modem_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get offset of firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="100" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1gad344cdb0f2293f9cb62b6760f830ba35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_write</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_full_modem_write</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write firmware data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data that should be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="110" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1gad2c1da472a30a1854fd7ef005bba3b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_full_modem_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>Release resources and finalize firmware upgrade if successful. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the firmware was successfully received.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="120" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="120" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga1fb5ef8338add30998faf527065b1437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_schedule_update</definition>
        <argsstring>(int img_num)</argsstring>
        <name>dfu_target_full_modem_schedule_update</name>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <briefdescription>
<para>Schedule update of the image. </para>
        </briefdescription>
        <detaileddescription>
<para>This call does nothing fot this target type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>This parameter is unused by this target type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0, it is always successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="131" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__full__modem_1ga55a1ffd53f71df15edd95999b513d397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_full_modem_reset</definition>
        <argsstring>(void)</argsstring>
        <name>dfu_target_full_modem_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release resources and erase the download area. </para>
        </briefdescription>
        <detaileddescription>
<para>Cancel any ongoing updates.</para>
<para><simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_full_modem.h" line="140" column="5" declfile="include/dfu/dfu_target_full_modem.h" declline="140" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DFU Target full modem updates. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
