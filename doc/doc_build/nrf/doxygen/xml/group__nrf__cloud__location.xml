<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__nrf__cloud__location" kind="group">
    <compoundname>nrf_cloud_location</compoundname>
    <title>nRF Cloud location</title>
    <innerclass refid="structnrf__cloud__location__result" prot="public">nrf_cloud_location_result</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__cloud__location_1gaa554b4d75a7e13a111faf8cc412489c7" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_cloud_location_type</name>
        <enumvalue id="group__nrf__cloud__location_gaa554b4d75a7e13a111faf8cc412489c7_1ggaa554b4d75a7e13a111faf8cc412489c7a59e7be6cee17cd9564cfec7cd4f25983" prot="public">
          <name>LOCATION_TYPE_SINGLE_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__location_gaa554b4d75a7e13a111faf8cc412489c7_1ggaa554b4d75a7e13a111faf8cc412489c7a7c6cb2a6abc7d526e94410df5f7c4e47" prot="public">
          <name>LOCATION_TYPE_MULTI_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__location_gaa554b4d75a7e13a111faf8cc412489c7_1ggaa554b4d75a7e13a111faf8cc412489c7a375662bff9f8379f8afe0eb209ef086c" prot="public">
          <name>LOCATION_TYPE_WIFI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__location_gaa554b4d75a7e13a111faf8cc412489c7_1ggaa554b4d75a7e13a111faf8cc412489c7a174c7913adc21f5afea006073b483b54" prot="public">
          <name>LOCATION_TYPE__INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Location request type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="37" column="1" bodyfile="include/net/nrf_cloud_location.h" bodystart="37" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrf__cloud__location_1ga4837ad61ac264990bde851a5d306a04a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* nrf_cloud_location_response_t) (const struct nrf_cloud_location_result *const pos)</definition>
        <argsstring>)(const struct nrf_cloud_location_result *const pos)</argsstring>
        <name>nrf_cloud_location_response_t</name>
        <briefdescription>
<para>Cloud location result handler function type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Location result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="79" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__cloud__location_1ga11371cefb06931b26a67566e9a9abfb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_location_request</definition>
        <argsstring>(const struct lte_lc_cells_info *const cells_inf, const struct wifi_scan_info *const wifi_inf, const bool request_loc, nrf_cloud_location_response_t cb)</argsstring>
        <name>nrf_cloud_location_request</name>
        <param>
          <type>const struct <ref refid="structlte__lc__cells__info" kindref="compound">lte_lc_cells_info</ref> *const</type>
          <declname>cells_inf</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwifi__scan__info" kindref="compound">wifi_scan_info</ref> *const</type>
          <declname>wifi_inf</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>request_loc</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__cloud__location_ga4837ad61ac264990bde851a5d306a04a_1ga4837ad61ac264990bde851a5d306a04a" kindref="member">nrf_cloud_location_response_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Perform an nRF Cloud location request over MQTT. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells_inf</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell info. The required network parameters are cell identifier, mcc, mnc and tac. The required neighboring cell parameters are E-ARFCN and physical cell identity. The parameters for time diff and measurement time are not used. The remaining parameters are optional; including them may improve location accuracy. To omit a request parameter, use the appropriate <computeroutput>NRF_CLOUD_LOCATION_CELL_OMIT_</computeroutput> define. Can be NULL if Wi-Fi info is provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wifi_inf</parametername>
</parameternamelist>
<parameterdescription>
<para>Wi-Fi info. The MAC address is the only required parameter for each item. To omit a request parameter, use the appropriate <computeroutput>NRF_CLOUD_LOCATION_WIFI_OMIT_</computeroutput> define. Can be NULL if cell info is provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_loc</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, cloud will send location to the device. If false, cloud will not send location to the device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to receive parsed location result. Only used when request_loc is true. If NULL, JSON result will be sent to the cloud event handler as an NRF_CLOUD_EVT_RX_DATA_LOCATION event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Request sent successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>Cloud connection is not established; wait for <ref refid="group__nrf__cloud_gabfa69ba752561f778c2f055e1ef7c46f_1ggabfa69ba752561f778c2f055e1ef7c46faefde723fbee891cc13ce5d016f9eeac2" kindref="member">NRF_CLOUD_EVT_READY</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EDOM</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of access points in the Wi-Fi-only request was smaller than the minimum required value NRF_CLOUD_LOCATION_WIFI_AP_CNT_MIN. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A negative value indicates an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="107" column="5" declfile="include/net/nrf_cloud_location.h" declline="107" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__location_1ga17908babb8b68be4e3861e9f9e8a0907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_location_request_json_get</definition>
        <argsstring>(const struct lte_lc_cells_info *const cells_inf, const struct wifi_scan_info *const wifi_inf, const bool request_loc, cJSON **req_obj_out)</argsstring>
        <name>nrf_cloud_location_request_json_get</name>
        <param>
          <type>const struct <ref refid="structlte__lc__cells__info" kindref="compound">lte_lc_cells_info</ref> *const</type>
          <declname>cells_inf</declname>
        </param>
        <param>
          <type>const struct <ref refid="structwifi__scan__info" kindref="compound">wifi_scan_info</ref> *const</type>
          <declname>wifi_inf</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>request_loc</declname>
        </param>
        <param>
          <type>cJSON **</type>
          <declname>req_obj_out</declname>
        </param>
        <briefdescription>
<para>Get the reference to a cJSON object containing a location request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells_inf</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell info; can be NULL if Wi-Fi info is provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wifi_inf</parametername>
</parameternamelist>
<parameterdescription>
<para>Wi-Fi info; can be NULL if cell info is provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_loc</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, cloud will send location to the device. If false, cloud will not send location to the device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_obj_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to the generated cJSON object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EDOM</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of access points in the Wi-Fi-only request was smaller than the minimum required value NRF_CLOUD_LOCATION_WIFI_AP_CNT_MIN. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A negative value indicates an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="125" column="5" declfile="include/net/nrf_cloud_location.h" declline="125" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__location_1ga86d56633f903ef862808a8dbb9e24f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_location_process</definition>
        <argsstring>(const char *buf, struct nrf_cloud_location_result *result)</argsstring>
        <name>nrf_cloud_location_process</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structnrf__cloud__location__result" kindref="compound">nrf_cloud_location_result</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Process location data received from nRF Cloud over MQTT or REST. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Data received from nRF Cloud. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Parsed results.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If processed successfully and location found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>If processed successfully but no location data found. This indicates that the data is not a location response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>An nRF Cloud error code was processed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A negative value indicates an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="140" column="5" declfile="include/net/nrf_cloud_location.h" declline="140" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__location_1gaefd7fb3f921813b5121a511b87d88490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_location_scell_data_get</definition>
        <argsstring>(struct lte_lc_cell *const cell_inf)</argsstring>
        <name>nrf_cloud_location_scell_data_get</name>
        <param>
          <type>struct <ref refid="structlte__lc__cell" kindref="compound">lte_lc_cell</ref> *const</type>
          <declname>cell_inf</declname>
        </param>
        <briefdescription>
<para>Get the cellular network information from the modem that is required for a single-cell location request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell_inf</parametername>
</parameternamelist>
<parameterdescription>
<para>Cellular information obtained from the modem.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If cellular informat was obtained successfully. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A negative value indicates an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="150" column="5" declfile="include/net/nrf_cloud_location.h" declline="150" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__cloud__location_1gadf063283be85baa8006ada9dd01c7c4f" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_WIFI_OMIT_RSSI</name>
        <initializer>(INT8_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the RSSI value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="29" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga56c97142e061f84360c7a2c0bdf44721" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_WIFI_OMIT_CHAN</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the channel value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="31" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga00fc303d179def90362c7cac37fd75c4" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_WIFI_AP_CNT_MIN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum number of access points required by nRF Cloud </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="34" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga3f18bfef56f2437d481631e1949938e0" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_CELL_OMIT_TIME_ADV</name>
        <initializer><ref refid="group__lte__lc_ga4cef12240755a4f2cd473f3ecc64c1f0_1ga4cef12240755a4f2cd473f3ecc64c1f0" kindref="member">LTE_LC_CELL_TIMING_ADVANCE_INVALID</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the timing advance value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="62" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga2802314a4127a5737fc339e4c98c4240" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_CELL_OMIT_RSRQ</name>
        <initializer><ref refid="group__lte__lc_ga4d3b89eb0a8d1590bb253eac35c252c4_1ga4d3b89eb0a8d1590bb253eac35c252c4" kindref="member">LTE_LC_CELL_RSRQ_INVALID</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the RSRQ value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="64" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga392093c4c15be9787c6fdc502a28c1a8" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_CELL_OMIT_RSRP</name>
        <initializer><ref refid="group__lte__lc_ga5f8bc9c9f2303bb2cbe4036ae5b9b05a_1ga5f8bc9c9f2303bb2cbe4036ae5b9b05a" kindref="member">LTE_LC_CELL_RSRP_INVALID</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the RSRP value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="66" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga3f55599e831480fb3b2ac249c82644f3" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_CELL_OMIT_EARFCN</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Omit the EARFN value when submitting a location request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="68" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__location_1ga66ee01f94476654a143467310350e26d" prot="public" static="no">
        <name>NRF_CLOUD_LOCATION_CELL_TIME_ADV_MAX</name>
        <initializer><ref refid="group__lte__lc_gaaf135bb70fdf0c29469f7ddf768eec03_1gaaf135bb70fdf0c29469f7ddf768eec03" kindref="member">LTE_LC_CELL_TIMING_ADVANCE_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum value for timing advance parameter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_location.h" line="71" column="9" bodyfile="include/net/nrf_cloud_location.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
