<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="audio__datapath_8h" kind="file" language="C++">
    <compoundname>audio_datapath.h</compoundname>
    <includes local="no">zephyr/kernel.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="data__fifo_8h" local="yes">data_fifo.h</includes>
    <includes refid="sw__codec__select_8h" local="yes">sw_codec_select.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="1">
        <label>applications/nrf5340_audio/src/audio/audio_datapath.h</label>
        <link refid="audio__datapath_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>data_fifo.h</label>
        <link refid="data__fifo_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>audio_defines.h</label>
        <link refid="audio__defines_8h"/>
      </node>
      <node id="7">
        <label>sw_codec_select.h</label>
        <link refid="sw__codec__select_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>channel_assignment.h</label>
        <link refid="channel__assignment_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/kernel.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="audio__datapath_8h_a0a2f27e801f372ebd6a2dde03c569419_1a0a2f27e801f372ebd6a2dde03c569419" prot="public" static="no">
        <name>PRES_DLY_BUFFER_US</name>
        <initializer>2500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="19" column="9" bodyfile="applications/nrf5340_audio/src/audio/audio_datapath.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__datapath_8h_ac6508de2036f0b4509b75c0ac219a919_1ac6508de2036f0b4509b75c0ac219a919" prot="public" static="no">
        <name>MAX_PRES_DLY_US</name>
        <initializer>40000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="20" column="9" bodyfile="applications/nrf5340_audio/src/audio/audio_datapath.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__datapath_8h_a086181c63829ca5354a21e3e54f483ae_1a086181c63829ca5354a21e3e54f483ae" prot="public" static="no">
        <name>DEFAULT_PRES_DLY_US</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="21" column="9" bodyfile="applications/nrf5340_audio/src/audio/audio_datapath.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__datapath_8h_a2e3b604f05c2fc026893f0341fb84c15_1a2e3b604f05c2fc026893f0341fb84c15" prot="public" static="no">
        <name>MIN_PRES_DLY_US</name>
        <initializer>(<ref refid="sw__codec__select_8h_a0991243afb64c10359a552733d6b45d6_1a0991243afb64c10359a552733d6b45d6" kindref="member">DEC_TIME_US</ref> + <ref refid="audio__datapath_8h_a0a2f27e801f372ebd6a2dde03c569419_1a0a2f27e801f372ebd6a2dde03c569419" kindref="member">PRES_DLY_BUFFER_US</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="22" column="9" bodyfile="applications/nrf5340_audio/src/audio/audio_datapath.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="audio__datapath_8h_ad775674d71e8c9fbde29a999d6e5b473_1ad775674d71e8c9fbde29a999d6e5b473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_datapath_tone_play</definition>
        <argsstring>(uint16_t freq, uint16_t dur_ms, float amplitude)</argsstring>
        <name>audio_datapath_tone_play</name>
        <param>
          <type>uint16_t</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dur_ms</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Mixes a tone into the I2S TX stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Tone frequency [Hz] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dur_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Tone duration [ms]. 0 = forever </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amplitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Tone amplitude [0, 1]</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="33" column="5" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a6e258359f8fae9afdbb60e90fe27b456_1a6e258359f8fae9afdbb60e90fe27b456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_datapath_tone_stop</definition>
        <argsstring>(void)</argsstring>
        <name>audio_datapath_tone_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stops tone playback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="38" column="6" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a0e76542afa090b57203b9fcf4fff786a_1a0e76542afa090b57203b9fcf4fff786a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_datapath_pres_delay_us_set</definition>
        <argsstring>(uint32_t delay_us)</argsstring>
        <name>audio_datapath_pres_delay_us_set</name>
        <param>
          <type>uint32_t</type>
          <declname>delay_us</declname>
        </param>
        <briefdescription>
<para>Set the presentation delay. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay_us</parametername>
</parameternamelist>
<parameterdescription>
<para>The presentation delay in Âµs</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="47" column="5" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a80ea50a8317b0286e6bf47f5fcdc2b56_1a80ea50a8317b0286e6bf47f5fcdc2b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_datapath_pres_delay_us_get</definition>
        <argsstring>(uint32_t *delay_us)</argsstring>
        <name>audio_datapath_pres_delay_us_get</name>
        <param>
          <type>uint32_t *</type>
          <declname>delay_us</declname>
        </param>
        <briefdescription>
<para>Get the current presentation delay. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay_us</parametername>
</parameternamelist>
<parameterdescription>
<para>The presentation delay in Âµs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="54" column="6" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a51f715ef7b5ae4574789f6c074e84239_1a51f715ef7b5ae4574789f6c074e84239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_datapath_just_in_time_check_and_adjust</definition>
        <argsstring>(uint32_t sdu_ref_us)</argsstring>
        <name>audio_datapath_just_in_time_check_and_adjust</name>
        <param>
          <type>uint32_t</type>
          <declname>sdu_ref_us</declname>
        </param>
        <briefdescription>
<para>Adjust timing to make sure audio data is sent just in time for BLE event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The time from last anchor point is checked and then blocks of 1ms can be dropped to allow the sending of encoded data to be sent just before the connection interval opens up. This is done to reduce overall latency.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sdu_ref_us</parametername>
</parameternamelist>
<parameterdescription>
<para>The sdu reference to the previous sent packet in Âµs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="66" column="6" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a06700c8ea23135efb348b524a22f0f7a_1a06700c8ea23135efb348b524a22f0f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_datapath_sdu_ref_update</definition>
        <argsstring>(uint32_t sdu_ref_us)</argsstring>
        <name>audio_datapath_sdu_ref_update</name>
        <param>
          <type>uint32_t</type>
          <declname>sdu_ref_us</declname>
        </param>
        <briefdescription>
<para>Update sdu_ref_us so that drift compensation can work correctly. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is only valid for gateway using I2S as audio source and unidirectional audio stream (gateway to headset(s))</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sdu_ref_us</parametername>
</parameternamelist>
<parameterdescription>
<para>ISO timestamp reference from BLE controller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="76" column="6" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a964b84cfdbef300b921c5e59b700a066_1a964b84cfdbef300b921c5e59b700a066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_datapath_stream_out</definition>
        <argsstring>(const uint8_t *buf, size_t size, uint32_t sdu_ref_us, bool bad_frame, uint32_t recv_frame_ts_us)</argsstring>
        <name>audio_datapath_stream_out</name>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sdu_ref_us</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bad_frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>recv_frame_ts_us</declname>
        </param>
        <briefdescription>
<para>Input an audio data frame which is processed and outputted over I2S. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>A frame of raw encoded audio data is inputted, and this data then is decoded and processed before being outputted over I2S. The audio is synchronized using sdu_ref_us</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to audio data frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of audio data frame in bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdu_ref_us</parametername>
</parameternamelist>
<parameterdescription>
<para>ISO timestamp reference from BLE controller </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bad_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicating if the audio frame is bad or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv_frame_ts_us</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp of when audio frame was received </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="91" column="6" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_a2806904a869e0ea9fe0536168502ddf3_1a2806904a869e0ea9fe0536168502ddf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_datapath_start</definition>
        <argsstring>(struct data_fifo *fifo_rx)</argsstring>
        <name>audio_datapath_start</name>
        <param>
          <type>struct <ref refid="structdata__fifo" kindref="compound">data_fifo</ref> *</type>
          <declname>fifo_rx</declname>
        </param>
        <briefdescription>
<para>Start the audio datapath module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The continuously running I2S is started</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fifo_rx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FIFO structure where I2S RX data is put</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="103" column="5" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_afa4ad921b99b4f2dc4554b7a4c43182f_1afa4ad921b99b4f2dc4554b7a4c43182f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_datapath_stop</definition>
        <argsstring>(void)</argsstring>
        <name>audio_datapath_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop the audio datapath module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="110" column="5" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__datapath_8h_ad8f06c5aa9d41b371f3b3018ade072d5_1ad8f06c5aa9d41b371f3b3018ade072d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_datapath_init</definition>
        <argsstring>(void)</argsstring>
        <name>audio_datapath_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the audio datapath module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_datapath.h" line="117" column="5" declfile="applications/nrf5340_audio/src/audio/audio_datapath.h" declline="117" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2021,<sp/>PACKETCRAFT,<sp/>INC.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>SPDX-License-Identifier:<sp/>LicenseRef-PCFT</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_AUDIO_DATAPATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AUDIO_DATAPATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__fifo_8h" kindref="compound">data_fifo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sw__codec__select_8h" kindref="compound">sw_codec_select.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Presentation<sp/>delay<sp/>defines<sp/>in<sp/>microseconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allow<sp/>some<sp/>buffer<sp/>time<sp/>to<sp/>allow<sp/>for<sp/>HCI<sp/>Transport<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="audio__datapath_8h_a0a2f27e801f372ebd6a2dde03c569419_1a0a2f27e801f372ebd6a2dde03c569419" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRES_DLY_BUFFER_US<sp/>2500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="audio__datapath_8h_ac6508de2036f0b4509b75c0ac219a919_1ac6508de2036f0b4509b75c0ac219a919" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PRES_DLY_US<sp/>40000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="audio__datapath_8h_a086181c63829ca5354a21e3e54f483ae_1a086181c63829ca5354a21e3e54f483ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_PRES_DLY_US<sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="audio__datapath_8h_a2e3b604f05c2fc026893f0341fb84c15_1a2e3b604f05c2fc026893f0341fb84c15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_PRES_DLY_US<sp/>(DEC_TIME_US<sp/>+<sp/>PRES_DLY_BUFFER_US)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="audio__datapath_8h_ad775674d71e8c9fbde29a999d6e5b473_1ad775674d71e8c9fbde29a999d6e5b473" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_ad775674d71e8c9fbde29a999d6e5b473_1ad775674d71e8c9fbde29a999d6e5b473" kindref="member">audio_datapath_tone_play</ref>(uint16_t<sp/>freq,<sp/>uint16_t<sp/>dur_ms,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amplitude);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="audio__datapath_8h_a6e258359f8fae9afdbb60e90fe27b456_1a6e258359f8fae9afdbb60e90fe27b456" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a6e258359f8fae9afdbb60e90fe27b456_1a6e258359f8fae9afdbb60e90fe27b456" kindref="member">audio_datapath_tone_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="audio__datapath_8h_a0e76542afa090b57203b9fcf4fff786a_1a0e76542afa090b57203b9fcf4fff786a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a0e76542afa090b57203b9fcf4fff786a_1a0e76542afa090b57203b9fcf4fff786a" kindref="member">audio_datapath_pres_delay_us_set</ref>(uint32_t<sp/>delay_us);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="audio__datapath_8h_a80ea50a8317b0286e6bf47f5fcdc2b56_1a80ea50a8317b0286e6bf47f5fcdc2b56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a80ea50a8317b0286e6bf47f5fcdc2b56_1a80ea50a8317b0286e6bf47f5fcdc2b56" kindref="member">audio_datapath_pres_delay_us_get</ref>(uint32_t<sp/>*delay_us);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="audio__datapath_8h_a51f715ef7b5ae4574789f6c074e84239_1a51f715ef7b5ae4574789f6c074e84239" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a51f715ef7b5ae4574789f6c074e84239_1a51f715ef7b5ae4574789f6c074e84239" kindref="member">audio_datapath_just_in_time_check_and_adjust</ref>(uint32_t<sp/>sdu_ref_us);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="audio__datapath_8h_a06700c8ea23135efb348b524a22f0f7a_1a06700c8ea23135efb348b524a22f0f7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a06700c8ea23135efb348b524a22f0f7a_1a06700c8ea23135efb348b524a22f0f7a" kindref="member">audio_datapath_sdu_ref_update</ref>(uint32_t<sp/>sdu_ref_us);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="audio__datapath_8h_a964b84cfdbef300b921c5e59b700a066_1a964b84cfdbef300b921c5e59b700a066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a964b84cfdbef300b921c5e59b700a066_1a964b84cfdbef300b921c5e59b700a066" kindref="member">audio_datapath_stream_out</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint32_t<sp/>sdu_ref_us,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_frame,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>recv_frame_ts_us);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="audio__datapath_8h_a2806904a869e0ea9fe0536168502ddf3_1a2806904a869e0ea9fe0536168502ddf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_a2806904a869e0ea9fe0536168502ddf3_1a2806904a869e0ea9fe0536168502ddf3" kindref="member">audio_datapath_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdata__fifo" kindref="compound">data_fifo</ref><sp/>*fifo_rx);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="audio__datapath_8h_afa4ad921b99b4f2dc4554b7a4c43182f_1afa4ad921b99b4f2dc4554b7a4c43182f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_afa4ad921b99b4f2dc4554b7a4c43182f_1afa4ad921b99b4f2dc4554b7a4c43182f" kindref="member">audio_datapath_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="audio__datapath_8h_ad8f06c5aa9d41b371f3b3018ade072d5_1ad8f06c5aa9d41b371f3b3018ade072d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__datapath_8h_ad8f06c5aa9d41b371f3b3018ade072d5_1ad8f06c5aa9d41b371f3b3018ade072d5" kindref="member">audio_datapath_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_AUDIO_DATAPATH_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="applications/nrf5340_audio/src/audio/audio_datapath.h"/>
  </compounddef>
</doxygen>
