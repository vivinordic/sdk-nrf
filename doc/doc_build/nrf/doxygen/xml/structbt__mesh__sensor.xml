<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structbt__mesh__sensor" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_sensor</compoundname>
    <includes refid="include_2bluetooth_2mesh_2sensor_8h" local="no">sensor.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__sensor_a6ad66790bc7e5c6e4f932235e31e52ac_1a6ad66790bc7e5c6e4f932235e31e52ac" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structbt__mesh__sensor__type" kindref="compound">bt_mesh_sensor_type</ref> *</type>
        <definition>const struct bt_mesh_sensor_type* bt_mesh_sensor::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sensor type.</para>
<para>Must be one of the specification defined types listed in <ref refid="group__bt__mesh__sensor__types" kindref="compound">Sensor types</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="345" column="32" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a94285b7b186ac3525c6b5203193826f5_1a94285b7b186ac3525c6b5203193826f5" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structbt__mesh__sensor__descriptor" kindref="compound">bt_mesh_sensor_descriptor</ref> *</type>
        <definition>const struct bt_mesh_sensor_descriptor* bt_mesh_sensor::descriptor</definition>
        <argsstring></argsstring>
        <name>descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional sensor descriptor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="347" column="38" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_aafdf9d18b42bb9794429f1159a9004f1_1aafdf9d18b42bb9794429f1159a9004f1" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structbt__mesh__sensor__setting" kindref="compound">bt_mesh_sensor_setting</ref> *</type>
        <definition>const struct bt_mesh_sensor_setting* bt_mesh_sensor::list</definition>
        <argsstring></argsstring>
        <name>list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static array of sensor settings </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="351" column="35" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a34ab6901bf53460366af9291fd715dc0_1a34ab6901bf53460366af9291fd715dc0" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t bt_mesh_sensor::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of sensor settings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="353" column="8" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a5e451580b1b7be94e3af428ac236c1bb_1a5e451580b1b7be94e3af428ac236c1bb" prot="public" static="no" mutable="no">
        <type>const struct bt_mesh_sensor::@135</type>
        <definition>const struct bt_mesh_sensor::@135 bt_mesh_sensor::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sensor settings access specification. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="354" column="10"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a964eea42aafc7f2ced58320e619a2e50_1a964eea42aafc7f2ced58320e619a2e50" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structbt__mesh__sensor__series" kindref="compound">bt_mesh_sensor_series</ref></type>
        <definition>const struct bt_mesh_sensor_series bt_mesh_sensor::series</definition>
        <argsstring></argsstring>
        <name>series</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sensor series specification.</para>
<para>Only sensors who have a non-zero column-count and a defined series getter will accept series messages. Sensors with more than two channels also require a non-empty list of columns. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="347" column="38" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_aafcbb4ea7e0bba50957e02a542e17a97_1aafcbb4ea7e0bba50957e02a542e17a97" prot="public" static="no" mutable="no">
        <type>int(*const</type>
        <definition>int(*const bt_mesh_sensor::get) (struct bt_mesh_sensor_srv *srv, struct bt_mesh_sensor *sensor, struct bt_mesh_msg_ctx *ctx, struct sensor_value *rsp)</definition>
        <argsstring>)(struct bt_mesh_sensor_srv *srv, struct bt_mesh_sensor *sensor, struct bt_mesh_msg_ctx *ctx, struct sensor_value *rsp)</argsstring>
        <name>get</name>
        <briefdescription>
<para>Getter function for the sensor value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensor server associated with sensor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensor instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL if the call wasn&apos;t triggered by a mesh message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Value response buffer. Fits the number of channels specified by the sensor type. All channels must be filled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or (negative) error code otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="376" column="1" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_ae03ddf024a868759ced017870324bfe9_1ae03ddf024a868759ced017870324bfe9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbt__mesh__sensor__threshold" kindref="compound">bt_mesh_sensor_threshold</ref></type>
        <definition>struct bt_mesh_sensor_threshold bt_mesh_sensor::threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sensor threshold specification. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="353" column="8" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a3c35c151523921531be28b48e306680e_1a3c35c151523921531be28b48e306680e" prot="public" static="no" mutable="no">
        <type>sys_snode_t</type>
        <definition>sys_snode_t bt_mesh_sensor::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Linked list node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="389" column="13" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a17a1a6148a7a677249db4823272e8faf_1a17a1a6148a7a677249db4823272e8faf" prot="public" static="no" mutable="no">
        <type>struct sensor_value</type>
        <definition>struct sensor_value bt_mesh_sensor::prev</definition>
        <argsstring></argsstring>
        <name>prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The previously published sensor value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="389" column="13" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_ac10c7c9d4601ebd5de017c244ed14a76_1ac10c7c9d4601ebd5de017c244ed14a76" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t bt_mesh_sensor::seq</definition>
        <argsstring></argsstring>
        <name>seq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sequence number of the previous publication. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="395" column="10" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a923dc3ccfeb625ce4c73b9ba117edeee_1a923dc3ccfeb625ce4c73b9ba117edeee" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bt_mesh_sensor::min_int</definition>
        <argsstring></argsstring>
        <name>min_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum possible interval for fast cadence value publishing. The value is represented as 2 to the power of N milliseconds.</para>
<para><simplesect kind="see"><para><ref refid="group__bt__mesh__sensor_ga6abeb9cc1864ac44cbd43eb2475a5a9d_1ga6abeb9cc1864ac44cbd43eb2475a5a9d" kindref="member">BT_MESH_SENSOR_INTERVAL_MAX</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="402" column="9" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a8b353df165bebdc920252eec3641815a_1a8b353df165bebdc920252eec3641815a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bt_mesh_sensor::pub_div</definition>
        <argsstring></argsstring>
        <name>pub_div</name>
        <bitfield> 4</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fast period divisor used when publishing with fast cadence. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="406" column="9" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_abc959f5987f2d1cafbb450385fd8752c_1abc959f5987f2d1cafbb450385fd8752c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bt_mesh_sensor::fast_pub</definition>
        <argsstring></argsstring>
        <name>fast_pub</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag indicating whether the sensor is in fast cadence mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="410" column="9" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_a7260e7ea750607fdd643be9d94665302_1a7260e7ea750607fdd643be9d94665302" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bt_mesh_sensor::configured</definition>
        <argsstring></argsstring>
        <name>configured</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag indicating whether the sensor cadence state has been configured. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="413" column="9" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__sensor_ac384c59ae43f974ea27367b4623b16c0_1ac384c59ae43f974ea27367b4623b16c0" prot="public" static="no" mutable="no">
        <type>struct bt_mesh_sensor::@136</type>
        <definition>struct bt_mesh_sensor::@136 bt_mesh_sensor::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/sensor.h" line="414" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Sensor instance. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>bt_mesh_sensor_column</label>
        <link refid="structbt__mesh__sensor__column"/>
      </node>
      <node id="5">
        <label>bt_mesh_sensor_channel</label>
        <link refid="structbt__mesh__sensor__channel"/>
        <childnode refid="6" relation="usage">
          <edgelabel>format</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>bt_mesh_sensor</label>
        <link refid="structbt__mesh__sensor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>descriptor</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>threshold</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>list</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>series</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>bt_mesh_sensor_descriptor</label>
        <link refid="structbt__mesh__sensor__descriptor"/>
      </node>
      <node id="7">
        <label>bt_mesh_sensor_setting</label>
        <link refid="structbt__mesh__sensor__setting"/>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>bt_mesh_sensor_format</label>
        <link refid="structbt__mesh__sensor__format"/>
      </node>
      <node id="4">
        <label>bt_mesh_sensor_type</label>
        <link refid="structbt__mesh__sensor__type"/>
        <childnode refid="5" relation="usage">
          <edgelabel>channels</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>bt_mesh_sensor_series</label>
        <link refid="structbt__mesh__sensor__series"/>
        <childnode refid="9" relation="usage">
          <edgelabel>columns</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>bt_mesh_sensor_threshold</label>
        <link refid="structbt__mesh__sensor__threshold"/>
      </node>
    </collaborationgraph>
    <location file="include/bluetooth/mesh/sensor.h" line="339" column="1" bodyfile="include/bluetooth/mesh/sensor.h" bodystart="339" bodyend="415"/>
    <listofallmembers>
      <member refid="structbt__mesh__sensor_a7260e7ea750607fdd643be9d94665302_1a7260e7ea750607fdd643be9d94665302" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>configured</name></member>
      <member refid="structbt__mesh__sensor_a34ab6901bf53460366af9291fd715dc0_1a34ab6901bf53460366af9291fd715dc0" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>count</name></member>
      <member refid="structbt__mesh__sensor_a94285b7b186ac3525c6b5203193826f5_1a94285b7b186ac3525c6b5203193826f5" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>descriptor</name></member>
      <member refid="structbt__mesh__sensor_abc959f5987f2d1cafbb450385fd8752c_1abc959f5987f2d1cafbb450385fd8752c" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>fast_pub</name></member>
      <member refid="structbt__mesh__sensor_aafcbb4ea7e0bba50957e02a542e17a97_1aafcbb4ea7e0bba50957e02a542e17a97" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>get</name></member>
      <member refid="structbt__mesh__sensor_aafdf9d18b42bb9794429f1159a9004f1_1aafdf9d18b42bb9794429f1159a9004f1" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>list</name></member>
      <member refid="structbt__mesh__sensor_a923dc3ccfeb625ce4c73b9ba117edeee_1a923dc3ccfeb625ce4c73b9ba117edeee" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>min_int</name></member>
      <member refid="structbt__mesh__sensor_a3c35c151523921531be28b48e306680e_1a3c35c151523921531be28b48e306680e" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>node</name></member>
      <member refid="structbt__mesh__sensor_a17a1a6148a7a677249db4823272e8faf_1a17a1a6148a7a677249db4823272e8faf" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>prev</name></member>
      <member refid="structbt__mesh__sensor_a8b353df165bebdc920252eec3641815a_1a8b353df165bebdc920252eec3641815a" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>pub_div</name></member>
      <member refid="structbt__mesh__sensor_ac10c7c9d4601ebd5de017c244ed14a76_1ac10c7c9d4601ebd5de017c244ed14a76" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>seq</name></member>
      <member refid="structbt__mesh__sensor_a964eea42aafc7f2ced58320e619a2e50_1a964eea42aafc7f2ced58320e619a2e50" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>series</name></member>
      <member refid="structbt__mesh__sensor_a5e451580b1b7be94e3af428ac236c1bb_1a5e451580b1b7be94e3af428ac236c1bb" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>settings</name></member>
      <member refid="structbt__mesh__sensor_ac384c59ae43f974ea27367b4623b16c0_1ac384c59ae43f974ea27367b4623b16c0" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>state</name></member>
      <member refid="structbt__mesh__sensor_ae03ddf024a868759ced017870324bfe9_1ae03ddf024a868759ced017870324bfe9" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>threshold</name></member>
      <member refid="structbt__mesh__sensor_a6ad66790bc7e5c6e4f932235e31e52ac_1a6ad66790bc7e5c6e4f932235e31e52ac" prot="public" virt="non-virtual"><scope>bt_mesh_sensor</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
