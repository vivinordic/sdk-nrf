<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="audio__system_8h" kind="file" language="C++">
    <compoundname>audio_system.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>applications/nrf5340_audio/src/audio/audio_system.h</label>
        <link refid="audio__system_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="audio__system_8h_acd1640cfd545b9d3588b02fe55910caf_1acd1640cfd545b9d3588b02fe55910caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_encode_test_tone_set</definition>
        <argsstring>(uint32_t freq)</argsstring>
        <name>audio_encode_test_tone_set</name>
        <param>
          <type>uint32_t</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>Toggle a test tone on and off. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired frequency of tone, 0 = off</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>A stream must already be running to use this feature</para>
</simplesect>
<simplesect kind="return"><para>0 on success, and -ENOMEM if the frequency is too low (buffer overflow) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="23" column="5" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__system_8h_a69d68f04e00254eddbae7ad883f3be42_1a69d68f04e00254eddbae7ad883f3be42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_decode</definition>
        <argsstring>(void const *const encoded_data, size_t encoded_data_size, bool bad_frame)</argsstring>
        <name>audio_decode</name>
        <param>
          <type>void const *const</type>
          <declname>encoded_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>encoded_data_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bad_frame</declname>
        </param>
        <briefdescription>
<para>Decode data and then add it to TX FIFO buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">encoded_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to encoded data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">encoded_data_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of encoded data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bad_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Indication on missed or incomplete frame</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, error otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="34" column="5" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__system_8h_aff8f5eaf0fd70feaba3a278e2a9c0e3e_1aff8f5eaf0fd70feaba3a278e2a9c0e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_system_start</definition>
        <argsstring>(void)</argsstring>
        <name>audio_system_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize and start both HW and SW audio codec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="39" column="6" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="39" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__system_8h_a310eb508c951ddbc4383b7ec381138f0_1a310eb508c951ddbc4383b7ec381138f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_system_stop</definition>
        <argsstring>(void)</argsstring>
        <name>audio_system_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop all activities related to audio. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="44" column="6" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="audio__system_8h_a709163e2e32c0b40eaa6cfd87b1914f4_1a709163e2e32c0b40eaa6cfd87b1914f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int audio_system_fifo_rx_block_drop</definition>
        <argsstring>(void)</argsstring>
        <name>audio_system_fifo_rx_block_drop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Drop oldest block from fifo_rx buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This can be used to adjust the timing of completed frame sampled in relation to the connection interval in BLE, to reduce latency</para>
</simplesect>
<simplesect kind="return"><para>0 on success, -ECANCELED otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="54" column="5" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="54" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="audio__system_8h_a68c7e2fe68fa74ca6acb55189683000f_1a68c7e2fe68fa74ca6acb55189683000f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audio_system_init</definition>
        <argsstring>(void)</argsstring>
        <name>audio_system_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the audio_system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/nrf5340_audio/src/audio/audio_system.h" line="59" column="6" declfile="applications/nrf5340_audio/src/audio/audio_system.h" declline="59" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_AUDIO_SYSTEM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AUDIO_SYSTEM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="audio__system_8h_acd1640cfd545b9d3588b02fe55910caf_1acd1640cfd545b9d3588b02fe55910caf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_acd1640cfd545b9d3588b02fe55910caf_1acd1640cfd545b9d3588b02fe55910caf" kindref="member">audio_encode_test_tone_set</ref>(uint32_t<sp/>freq);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="audio__system_8h_a69d68f04e00254eddbae7ad883f3be42_1a69d68f04e00254eddbae7ad883f3be42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_a69d68f04e00254eddbae7ad883f3be42_1a69d68f04e00254eddbae7ad883f3be42" kindref="member">audio_decode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>encoded_data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>encoded_data_size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_frame);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="audio__system_8h_aff8f5eaf0fd70feaba3a278e2a9c0e3e_1aff8f5eaf0fd70feaba3a278e2a9c0e3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_aff8f5eaf0fd70feaba3a278e2a9c0e3e_1aff8f5eaf0fd70feaba3a278e2a9c0e3e" kindref="member">audio_system_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="audio__system_8h_a310eb508c951ddbc4383b7ec381138f0_1a310eb508c951ddbc4383b7ec381138f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_a310eb508c951ddbc4383b7ec381138f0_1a310eb508c951ddbc4383b7ec381138f0" kindref="member">audio_system_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="audio__system_8h_a709163e2e32c0b40eaa6cfd87b1914f4_1a709163e2e32c0b40eaa6cfd87b1914f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_a709163e2e32c0b40eaa6cfd87b1914f4_1a709163e2e32c0b40eaa6cfd87b1914f4" kindref="member">audio_system_fifo_rx_block_drop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="audio__system_8h_a68c7e2fe68fa74ca6acb55189683000f_1a68c7e2fe68fa74ca6acb55189683000f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__system_8h_a68c7e2fe68fa74ca6acb55189683000f_1a68c7e2fe68fa74ca6acb55189683000f" kindref="member">audio_system_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_AUDIO_SYSTEM_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="applications/nrf5340_audio/src/audio/audio_system.h"/>
  </compounddef>
</doxygen>
