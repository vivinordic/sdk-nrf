<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__fw__info__bare" kind="group">
    <compoundname>fw_info_bare</compoundname>
    <title>Firmware info structure definition and inline helpers</title>
    <innerclass refid="structfw__info__ext__api" prot="public">fw_info_ext_api</innerclass>
    <innerclass refid="structfw__info__ext__api__request" prot="public">fw_info_ext_api_request</innerclass>
    <innerclass refid="structfw__info" prot="public">fw_info</innerclass>
    <innerclass refid="structext__api__provide__ext__api" prot="public">ext_api_provide_ext_api</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__fw__info__bare_1ga19e9a54005602c6d04fe25b1f0980500" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* fw_info_ext_api_provide_t) (const struct fw_info *fwinfo, bool provide)</definition>
        <argsstring>)(const struct fw_info *fwinfo, bool provide)</argsstring>
        <name>fw_info_ext_api_provide_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="219" column="9" bodyfile="include/fw_info_bare.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__fw__info__bare_1ga0f1288a42c7aab29f7c9b878b9f853d0" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t fw_info_allowed_offsets[]</definition>
        <argsstring>[]</argsstring>
        <name>fw_info_allowed_offsets</name>
        <initializer>= {
					 0x0 ,  0x200 ,
					 0x400 ,  0x800 ,
					 0x1000 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="192" column="23" bodyfile="include/fw_info_bare.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__fw__info__bare_1ga91a7a927456b5c869ae7c1388736978c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info__ext__api" kindref="compound">fw_info_ext_api</ref> *</type>
        <definition>static const struct fw_info_ext_api* fw_info_ext_api_check</definition>
        <argsstring>(uint32_t ext_api_addr)</argsstring>
        <name>fw_info_ext_api_check</name>
        <param>
          <type>uint32_t</type>
          <declname>ext_api_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="67" column="42" bodyfile="include/fw_info_bare.h" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__fw__info__bare_1ga0eaf0d4e2b05f24af0e72dab514e318f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info" kindref="compound">fw_info</ref> *</type>
        <definition>static const struct fw_info* fw_info_check</definition>
        <argsstring>(uint32_t fw_info_addr)</argsstring>
        <name>fw_info_check</name>
        <param>
          <type>uint32_t</type>
          <declname>fw_info_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="173" column="34" bodyfile="include/fw_info_bare.h" bodystart="173" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__fw__info__bare_1ga7b2b53932674a9376be334cdb53a8d17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct <ref refid="structfw__info" kindref="compound">fw_info</ref> *</type>
        <definition>static const struct fw_info* fw_info_find</definition>
        <argsstring>(uint32_t firmware_address)</argsstring>
        <name>fw_info_find</name>
        <param>
          <type>uint32_t</type>
          <declname>firmware_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for the firmware_info structure inside the firmware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">firmware_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the image. The function will search at the allowed offsets from firmware_address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the <ref refid="structfw__info" kindref="compound">fw_info</ref> struct if found. Otherwise NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="205" column="34" bodyfile="include/fw_info_bare.h" bodystart="205" bodyend="217"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__fw__info__bare_1ga05e112c3c885437430f4c8908e696a0c" prot="public" static="no">
        <name>MAGIC_LEN_WORDS</name>
        <initializer>(CONFIG_FW_INFO_MAGIC_LEN / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="21" column="9" bodyfile="include/fw_info_bare.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1ga0f75431e4c212a40a5a59dae399cd99a" prot="public" static="no">
        <name>FW_INFO_OFFSET0</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="24" column="9" bodyfile="include/fw_info_bare.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1ga3f2d0cca8acec7a0b7f207d7d62ce68c" prot="public" static="no">
        <name>FW_INFO_OFFSET1</name>
        <initializer>0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="25" column="9" bodyfile="include/fw_info_bare.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1ga0bb442cc1e41b63f586aafee75aebf78" prot="public" static="no">
        <name>FW_INFO_OFFSET2</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="26" column="9" bodyfile="include/fw_info_bare.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1ga9b0e8c61448141e1b8c32086d792fef1" prot="public" static="no">
        <name>FW_INFO_OFFSET3</name>
        <initializer>0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="27" column="9" bodyfile="include/fw_info_bare.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1gaa994161baf1daf2abc34f0d3a3ad9600" prot="public" static="no">
        <name>FW_INFO_OFFSET4</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="28" column="9" bodyfile="include/fw_info_bare.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1gada889dc8a81a2da32c7622751bbdbcbe" prot="public" static="no">
        <name>FW_INFO_OFFSET_COUNT</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="29" column="9" bodyfile="include/fw_info_bare.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fw__info__bare_1ga4c8da29991a7ea435bed730f48f61278" prot="public" static="no">
        <name>FW_INFO_CURRENT_OFFSET</name>
        <initializer>(CONFIG_FW_INFO_OFFSET + <ref refid="group__fw__info_ga560b86f362bb7de199d1b64ec0740b8c_1ga560b86f362bb7de199d1b64ec0740b8c" kindref="member">FW_INFO_VECTOR_OFFSET</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/fw_info_bare.h" line="189" column="9" bodyfile="include/fw_info_bare.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
