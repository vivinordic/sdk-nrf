<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__cloud__codec" kind="group">
    <compoundname>cloud_codec</compoundname>
    <title>Cloud codec.</title>
    <innerclass refid="structcloud__data__battery" prot="public">cloud_data_battery</innerclass>
    <innerclass refid="structcloud__data__gnss__pvt" prot="public">cloud_data_gnss_pvt</innerclass>
    <innerclass refid="structcloud__data__gnss" prot="public">cloud_data_gnss</innerclass>
    <innerclass refid="structcloud__data__no__data" prot="public">cloud_data_no_data</innerclass>
    <innerclass refid="structcloud__data__cfg" prot="public">cloud_data_cfg</innerclass>
    <innerclass refid="structcloud__data__impact" prot="public">cloud_data_impact</innerclass>
    <innerclass refid="structcloud__data__sensors" prot="public">cloud_data_sensors</innerclass>
    <innerclass refid="structcloud__data__modem__static" prot="public">cloud_data_modem_static</innerclass>
    <innerclass refid="structcloud__data__modem__dynamic" prot="public">cloud_data_modem_dynamic</innerclass>
    <innerclass refid="structcloud__data__ui" prot="public">cloud_data_ui</innerclass>
    <innerclass refid="structcloud__codec__data" prot="public">cloud_codec_data</innerclass>
    <innerclass refid="structcloud__data__neighbor__cells" prot="public">cloud_data_neighbor_cells</innerclass>
    <innerclass refid="structcloud__data__cloud__location" prot="public">cloud_data_cloud_location</innerclass>
    <innerclass refid="structcloud__data__agps__request" prot="public">cloud_data_agps_request</innerclass>
    <innerclass refid="structcloud__data__pgps__request" prot="public">cloud_data_pgps_request</innerclass>
    <innerclass refid="structcloud__codec__evt" prot="public">cloud_codec_evt</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__cloud__codec_1ga25a1f613ea3f68d7b4c6bb1fec0624ce" prot="public" static="no" strong="no">
        <type></type>
        <name>cloud_codec_event_type</name>
        <enumvalue id="group__cloud__codec_ga25a1f613ea3f68d7b4c6bb1fec0624ce_1gga25a1f613ea3f68d7b4c6bb1fec0624ceae5872c6b8651f6888535865bc2032bcd" prot="public">
          <name>CLOUD_CODEC_EVT_CONFIG_UPDATE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Only used in LwM2M codec. This event carries a config update. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="271" column="1" bodyfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" bodystart="271" bodyend="274"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__cloud__codec_1gac0bb700d414da8fc0cfdbd2803eaf7bd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* cloud_codec_evt_handler_t) (const struct cloud_codec_evt *evt)</definition>
        <argsstring>)(const struct cloud_codec_evt *evt)</argsstring>
        <name>cloud_codec_evt_handler_t</name>
        <briefdescription>
<para>Event handler prototype. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>Event type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="288" column="9" bodyfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__cloud__codec_1ga08a20b855e871149e06f86226dd02bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_init</definition>
        <argsstring>(struct cloud_data_cfg *cfg, cloud_codec_evt_handler_t event_handler)</argsstring>
        <name>cloud_codec_init</name>
        <param>
          <type>struct <ref refid="structcloud__data__cfg" kindref="compound">cloud_data_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="group__cloud__codec_gac0bb700d414da8fc0cfdbd2803eaf7bd_1gac0bb700d414da8fc0cfdbd2803eaf7bd" kindref="member">cloud_codec_evt_handler_t</ref></type>
          <declname>event_handler</declname>
        </param>
        <briefdescription>
<para>Initialize cloud codec. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Currently only used for config updates in LwM2M.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial config data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handler for events coming from the codec.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if LwM2M engine couldn&apos;t allocate its objects. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="300" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="300" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga0b85ba9be388cbfcbdf693f9a441cef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_cloud_location</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_cloud_location *cloud_location)</argsstring>
        <name>cloud_codec_encode_cloud_location</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__cloud__location" kindref="compound">cloud_data_cloud_location</ref> *</type>
          <declname>cloud_location</declname>
        </param>
        <briefdescription>
<para>Encode cloud codec cloud location data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>LwM2M builds: This function does not output a list of objects, unlike other functions in this API. The object references that are required to update Wi-Fi access points are kept internal in the LwM2M utils library.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cloud_location</parametername>
</parameternamelist>
<parameterdescription>
<para>Cloud location data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if data object is not marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec could not allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="318" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="318" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1gaef6c41b6911cd859dbdb4953dd410e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_agps_request</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_agps_request *agps_request)</argsstring>
        <name>cloud_codec_encode_agps_request</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__agps__request" kindref="compound">cloud_data_agps_request</ref> *</type>
          <declname>agps_request</declname>
        </param>
        <briefdescription>
<para>Encode cloud codec A-GPS request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>LwM2M builds: This function does not output a list of objects, unlike other functions in this API. The object references that are required to update A-GPS are kept internal in the LwM2M utils library.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">agps_request</parametername>
</parameternamelist>
<parameterdescription>
<para>A-GPS request data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if data object is not marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="337" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="337" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga719c018fc6bf8cb4b7dd5763e0104763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_pgps_request</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_pgps_request *pgps_request)</argsstring>
        <name>cloud_codec_encode_pgps_request</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__pgps__request" kindref="compound">cloud_data_pgps_request</ref> *</type>
          <declname>pgps_request</declname>
        </param>
        <briefdescription>
<para>Encode cloud codec P-GPS request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>LwM2M builds: This function does not output a list of objects, unlike other functions in this API. The object references that are required to update P-GPS are kept internal in the LwM2M utils library.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pgps_request</parametername>
</parameternamelist>
<parameterdescription>
<para>P-GPS request data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if data object is not marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="355" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="355" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga10018785c7afbf032bbc89163ac6eaa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_decode_config</definition>
        <argsstring>(const char *input, size_t input_len, struct cloud_data_cfg *cfg)</argsstring>
        <name>cloud_codec_decode_config</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>input_len</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__cfg" kindref="compound">cloud_data_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Decode received configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer with encoded config. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the decoded config.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if string doesn&apos;t contain required JSON objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ECANCELED</parametername>
</parameternamelist>
<parameterdescription>
<para>if data was already processed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="371" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="371" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga796c2746862e804d63d3f1f59f8a5d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_config</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_cfg *cfg)</argsstring>
        <name>cloud_codec_encode_config</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__cfg" kindref="compound">cloud_data_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Encode current configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Current configuration.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="384" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="384" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga269bfdac9733632ac9e1c25153ee7a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_data</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_gnss *gnss_buf, struct cloud_data_sensors *sensor_buf, struct cloud_data_modem_static *modem_stat_buf, struct cloud_data_modem_dynamic *modem_dyn_buf, struct cloud_data_ui *ui_buf, struct cloud_data_impact *impact_buf, struct cloud_data_battery *bat_buf)</argsstring>
        <name>cloud_codec_encode_data</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__gnss" kindref="compound">cloud_data_gnss</ref> *</type>
          <declname>gnss_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__sensors" kindref="compound">cloud_data_sensors</ref> *</type>
          <declname>sensor_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__modem__static" kindref="compound">cloud_data_modem_static</ref> *</type>
          <declname>modem_stat_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__modem__dynamic" kindref="compound">cloud_data_modem_dynamic</ref> *</type>
          <declname>modem_dyn_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__ui" kindref="compound">cloud_data_ui</ref> *</type>
          <declname>ui_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__impact" kindref="compound">cloud_data_impact</ref> *</type>
          <declname>impact_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__battery" kindref="compound">cloud_data_battery</ref> *</type>
          <declname>bat_buf</declname>
        </param>
        <briefdescription>
<para>Encode cloud buffer data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gnss_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>GNSS data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensor data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_stat_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Static modem data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_dyn_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Dynamic modem data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Button data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">impact_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Impact data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bat_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Battery data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if none of the data elements are marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="405" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="405" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga45b5ec76d8d4d8aab896e06a0d4ad730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_ui_data</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_ui *ui_buf)</argsstring>
        <name>cloud_codec_encode_ui_data</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__ui" kindref="compound">cloud_data_ui</ref> *</type>
          <declname>ui_buf</declname>
        </param>
        <briefdescription>
<para>Encode UI data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>UI data to encode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data elements is not marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="425" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="425" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga96e76fd6c6ba0e57db8272ea0b0b87ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_impact_data</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_impact *impact_buf)</argsstring>
        <name>cloud_codec_encode_impact_data</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__impact" kindref="compound">cloud_data_impact</ref> *</type>
          <declname>impact_buf</declname>
        </param>
        <briefdescription>
<para>Encode impact data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">impact_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Impact data to encode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data elements is not marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="439" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="439" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga4518c53fe1bbc34a2e8a0a5304923e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_codec_encode_batch_data</definition>
        <argsstring>(struct cloud_codec_data *output, struct cloud_data_gnss *gnss_buf, struct cloud_data_sensors *sensor_buf, struct cloud_data_modem_static *modem_stat_buf, struct cloud_data_modem_dynamic *modem_dyn_buf, struct cloud_data_ui *ui_buf, struct cloud_data_impact *impact_buf, struct cloud_data_battery *bat_buf, size_t gnss_buf_count, size_t sensor_buf_count, size_t modem_stat_buf_count, size_t modem_dyn_buf_count, size_t ui_buf_count, size_t impact_buf_count, size_t bat_buf_count)</argsstring>
        <name>cloud_codec_encode_batch_data</name>
        <param>
          <type>struct <ref refid="structcloud__codec__data" kindref="compound">cloud_codec_data</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__gnss" kindref="compound">cloud_data_gnss</ref> *</type>
          <declname>gnss_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__sensors" kindref="compound">cloud_data_sensors</ref> *</type>
          <declname>sensor_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__modem__static" kindref="compound">cloud_data_modem_static</ref> *</type>
          <declname>modem_stat_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__modem__dynamic" kindref="compound">cloud_data_modem_dynamic</ref> *</type>
          <declname>modem_dyn_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__ui" kindref="compound">cloud_data_ui</ref> *</type>
          <declname>ui_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__impact" kindref="compound">cloud_data_impact</ref> *</type>
          <declname>impact_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__battery" kindref="compound">cloud_data_battery</ref> *</type>
          <declname>bat_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>gnss_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sensor_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>modem_stat_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>modem_dyn_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ui_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>impact_buf_count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bat_buf_count</declname>
        </param>
        <briefdescription>
<para>Encode a batch of cloud buffer data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>string buffer for encoding result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gnss_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>GNSS data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensor data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_stat_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Static modem data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_dyn_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Dynamic modem data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Button data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">impact_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Impact data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bat_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Battery data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gnss_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of GNSS data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of Sensor data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_stat_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of static modem data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modem_dyn_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of dynamic modem data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of button data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">impact_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of impact data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bat_buf_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of battery data buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>if none of the data elements are marked valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if codec couldn&apos;t allocate memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if the function is not supported by the encoding backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="467" column="5" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="467" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1gaecced72fa0c46815e0b2105f14c1fdd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_sensor_buffer</definition>
        <argsstring>(struct cloud_data_sensors *sensor_buffer, struct cloud_data_sensors *new_sensor_data, int *head_sensor_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_sensor_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__sensors" kindref="compound">cloud_data_sensors</ref> *</type>
          <declname>sensor_buffer</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__sensors" kindref="compound">cloud_data_sensors</ref> *</type>
          <declname>new_sensor_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_sensor_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="483" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="483" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga65d32adb4aac7e4a1fcda21b108c86be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_ui_buffer</definition>
        <argsstring>(struct cloud_data_ui *ui_buffer, struct cloud_data_ui *new_ui_data, int *head_ui_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_ui_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__ui" kindref="compound">cloud_data_ui</ref> *</type>
          <declname>ui_buffer</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__ui" kindref="compound">cloud_data_ui</ref> *</type>
          <declname>new_ui_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_ui_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="489" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="489" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1gaaa841b39f40e50ff0a80460606329312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_impact_buffer</definition>
        <argsstring>(struct cloud_data_impact *impact_buf, struct cloud_data_impact *new_impact_data, int *head_impact_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_impact_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__impact" kindref="compound">cloud_data_impact</ref> *</type>
          <declname>impact_buf</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__impact" kindref="compound">cloud_data_impact</ref> *</type>
          <declname>new_impact_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_impact_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="494" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="494" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga64098a13bb9b28ba9065c4c38dadda2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_bat_buffer</definition>
        <argsstring>(struct cloud_data_battery *bat_buffer, struct cloud_data_battery *new_bat_data, int *head_bat_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_bat_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__battery" kindref="compound">cloud_data_battery</ref> *</type>
          <declname>bat_buffer</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__battery" kindref="compound">cloud_data_battery</ref> *</type>
          <declname>new_bat_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_bat_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="500" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="500" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1ga628126d6ee0693da98cc96127f61b518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_gnss_buffer</definition>
        <argsstring>(struct cloud_data_gnss *gnss_buffer, struct cloud_data_gnss *new_gnss_data, int *head_gnss_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_gnss_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__gnss" kindref="compound">cloud_data_gnss</ref> *</type>
          <declname>gnss_buffer</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__gnss" kindref="compound">cloud_data_gnss</ref> *</type>
          <declname>new_gnss_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_gnss_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="505" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="505" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cloud__codec_1gac04976b461ccc1008151878c6af7e3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloud_codec_populate_modem_dynamic_buffer</definition>
        <argsstring>(struct cloud_data_modem_dynamic *modem_buffer, struct cloud_data_modem_dynamic *new_modem_data, int *head_modem_buf, size_t buffer_count)</argsstring>
        <name>cloud_codec_populate_modem_dynamic_buffer</name>
        <param>
          <type>struct <ref refid="structcloud__data__modem__dynamic" kindref="compound">cloud_data_modem_dynamic</ref> *</type>
          <declname>modem_buffer</declname>
        </param>
        <param>
          <type>struct <ref refid="structcloud__data__modem__dynamic" kindref="compound">cloud_data_modem_dynamic</ref> *</type>
          <declname>new_modem_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>head_modem_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" line="510" column="6" declfile="applications/asset_tracker_v2/src/cloud/cloud_codec/cloud_codec.h" declline="510" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module that encodes and decodes cloud communication. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
