<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dfu__target_8h" kind="file" language="C++">
    <compoundname>dfu_target.h</compoundname>
    <includes local="no">zephyr/types.h</includes>
    <includedby refid="dfu__target__nrf52_8h" local="no">applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h</includedby>
    <includedby refid="dfu__target__full__modem_8h" local="no">include/dfu/dfu_target_full_modem.h</includedby>
    <includedby refid="dfu__target__mcuboot_8h" local="no">include/dfu/dfu_target_mcuboot.h</includedby>
    <includedby refid="fota__download_8h" local="no">include/net/fota_download.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/dfu/dfu_target.h</label>
        <link refid="dfu__target_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>include/dfu/dfu_target_mcuboot.h</label>
        <link refid="dfu__target__mcuboot_8h"/>
      </node>
      <node id="2">
        <label>applications/serial_lte_modem/src/dfu/dfu_target_nrf52.h</label>
        <link refid="dfu__target__nrf52_8h"/>
      </node>
      <node id="6">
        <label>include/net/nrf_cloud_location.h</label>
        <link refid="nrf__cloud__location_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/net/nrf_cloud_agps.h</label>
        <link refid="nrf__cloud__agps_8h"/>
      </node>
      <node id="7">
        <label>include/net/nrf_cloud_rest.h</label>
        <link refid="nrf__cloud__rest_8h"/>
      </node>
      <node id="1">
        <label>include/dfu/dfu_target.h</label>
        <link refid="dfu__target_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/net/nrf_cloud.h</label>
        <link refid="nrf__cloud_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/dfu/dfu_target_full_modem.h</label>
        <link refid="dfu__target__full__modem_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/net/fota_download.h</label>
        <link refid="fota__download_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structdfu__target" prot="public">dfu_target</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1gad3de6472dd7ff6c41abd911a16b67a79" prot="public" static="no" strong="no">
        <type></type>
        <name>dfu_target_image_type</name>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a0606e296febdc61b15eba9510db52526" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not a DFU image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a971e80b0ea81a9d208e46aef4dd4d5f2" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_MCUBOOT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Application image in MCUBoot format </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79aa7f0de8d6936c577ba3c983d9edf38fd" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_MODEM_DELTA</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Modem delta-update image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a62e2ebd66c771dca682dd941b0b0dd35" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_FULL_MODEM</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Full update image for modem </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a1c9c99be3dc7a3f569bb47ec2e03ddb7" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_ANY_APPLICATION</name>
          <initializer>= DFU_TARGET_IMAGE_TYPE_MCUBOOT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Any application image type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a301c54768dfa8860c789528931353a99" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_ANY_MODEM</name>
          <initializer>=
		(DFU_TARGET_IMAGE_TYPE_MODEM_DELTA | DFU_TARGET_IMAGE_TYPE_FULL_MODEM)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Any modem image </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a29662e95b0547c1870d583d441c4aa9d" prot="public">
          <name>DFU_TARGET_IMAGE_TYPE_ANY</name>
          <initializer>=
		(DFU_TARGET_IMAGE_TYPE_MCUBOOT | DFU_TARGET_IMAGE_TYPE_MODEM_DELTA |
		 DFU_TARGET_IMAGE_TYPE_FULL_MODEM)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Any DFU image type </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>DFU image type. </para>
        </briefdescription>
        <detaileddescription>
<para>Bitmasks of different image types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="27" column="1" bodyfile="include/dfu/dfu_target.h" bodystart="27" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1ga9206912ee74cd457d34f3d717793a709" prot="public" static="no" strong="no">
        <type></type>
        <name>dfu_target_evt_id</name>
        <enumvalue id="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a9f71f6924ab2990963b50dd6f7da831e" prot="public">
          <name>DFU_TARGET_EVT_TIMEOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a30ecc081254e15d567a5e831264e2b2a" prot="public">
          <name>DFU_TARGET_EVT_ERASE_DONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="47" column="1" bodyfile="include/dfu/dfu_target.h" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dfu_target_callback_t) (enum dfu_target_evt_id evt_id)</definition>
        <argsstring>)(enum dfu_target_evt_id evt_id)</argsstring>
        <name>dfu_target_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="52" column="9" bodyfile="include/dfu/dfu_target.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target_gaa93e6e95392abe0cce100c9098e00ac1_1gaa93e6e95392abe0cce100c9098e00ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1gad3de6472dd7ff6c41abd911a16b67a79" kindref="member">dfu_target_image_type</ref></type>
        <definition>enum dfu_target_image_type dfu_target_img_type</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_img_type</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Find the image type for the buffer of bytes received. Used to determine what DFU target to initialize. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer of bytes which are the start of a binary firmware image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the provided buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Identifier for a supported image type or DFU_TARGET_IMAGE_TYPE_NONE if image type is not recognized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="52" column="9" declfile="include/dfu/dfu_target.h" declline="52" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_ga3e2f3839f898cb6866467210fed33e32_1ga3e2f3839f898cb6866467210fed33e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_init</definition>
        <argsstring>(int img_type, int img_num, size_t file_size, dfu_target_callback_t cb)</argsstring>
        <name>dfu_target_init</name>
        <param>
          <type>int</type>
          <declname>img_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>file_size</declname>
        </param>
        <param>
          <type><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Initialize the resources needed for the specific image type DFU target. </para>
        </briefdescription>
        <detaileddescription>
<para>If a target update is in progress, and the same target is given as input, then calling the &apos;init()&apos; function of that target is skipped.</para>
<para>To allow continuation of an aborted DFU procedure, call the &apos;dfu_target_offset_get&apos; function after invoking this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">img_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Image type identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Image pair index. Value different than 0 are supported only for DFU_TARGET_IMAGE_TYPE_MCUBOOT image type currently. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the current file being downloaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function in case the DFU operation requires additional procedures to be called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for a supported image type or a negative error code indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="101" column="5" declfile="include/dfu/dfu_target.h" declline="101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_gab4b88b8b9da5954ea84bda8c48ab5f7c_1gab4b88b8b9da5954ea84bda8c48ab5f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get offset of the firmware upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="110" column="5" declfile="include/dfu/dfu_target.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_gaa03afef7cf2545969f6e1ef55cd211f7_1gaa03afef7cf2545969f6e1ef55cd211f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_write</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_write</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write the given buffer to the initialized DFU target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer of bytes which contains part of a binary firmware image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the provided buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Positive identifier for a supported image type or a negative error code indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="122" column="5" declfile="include/dfu/dfu_target.h" declline="122" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_ga0017dc97c4e8e9a00be3c2a06977cbef_1ga0017dc97c4e8e9a00be3c2a06977cbef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>Release the resources that were needed for the current DFU target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the process completed successfully or was aborted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for a successful deinitialization or a negative error code indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="134" column="5" declfile="include/dfu/dfu_target.h" declline="134" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_ga41a02c7f06085a9cbade90d76672a6ac_1ga41a02c7f06085a9cbade90d76672a6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_reset</definition>
        <argsstring>(void)</argsstring>
        <name>dfu_target_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release the resources that were needed for the current DFU target if any and resets the current DFU target. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 for a successful deinitialization and reset or a negative error code indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="143" column="5" declfile="include/dfu/dfu_target.h" declline="143" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target_gaa586822fd1a282263cfd0c4d40d4b269_1gaa586822fd1a282263cfd0c4d40d4b269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_schedule_update</definition>
        <argsstring>(int img_num)</argsstring>
        <name>dfu_target_schedule_update</name>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <briefdescription>
<para>Schedule update of one or more images. </para>
        </briefdescription>
        <detaileddescription>
<para>This call requests images update. Time of update depends on image type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>For DFU_TARGET_IMAGE_TYPE_MCUBOOT image type: given image pair index or -1 for all of image pair indexes. Disregard otherwise.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for a successful request or a negative error code indicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target.h" line="157" column="5" declfile="include/dfu/dfu_target.h" declline="157" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DFU_TARGET_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFU_TARGET_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1gad3de6472dd7ff6c41abd911a16b67a79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1gad3de6472dd7ff6c41abd911a16b67a79" kindref="member">dfu_target_image_type</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a0606e296febdc61b15eba9510db52526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a0606e296febdc61b15eba9510db52526" kindref="member">DFU_TARGET_IMAGE_TYPE_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="31" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a971e80b0ea81a9d208e46aef4dd4d5f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a971e80b0ea81a9d208e46aef4dd4d5f2" kindref="member">DFU_TARGET_IMAGE_TYPE_MCUBOOT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="33" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79aa7f0de8d6936c577ba3c983d9edf38fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79aa7f0de8d6936c577ba3c983d9edf38fd" kindref="member">DFU_TARGET_IMAGE_TYPE_MODEM_DELTA</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="35" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a62e2ebd66c771dca682dd941b0b0dd35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a62e2ebd66c771dca682dd941b0b0dd35" kindref="member">DFU_TARGET_IMAGE_TYPE_FULL_MODEM</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="37" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a1c9c99be3dc7a3f569bb47ec2e03ddb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a1c9c99be3dc7a3f569bb47ec2e03ddb7" kindref="member">DFU_TARGET_IMAGE_TYPE_ANY_APPLICATION</ref><sp/>=<sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a971e80b0ea81a9d208e46aef4dd4d5f2" kindref="member">DFU_TARGET_IMAGE_TYPE_MCUBOOT</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a301c54768dfa8860c789528931353a99" kindref="member">DFU_TARGET_IMAGE_TYPE_ANY_MODEM</ref><sp/>=</highlight></codeline>
<codeline lineno="40" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a301c54768dfa8860c789528931353a99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79aa7f0de8d6936c577ba3c983d9edf38fd" kindref="member">DFU_TARGET_IMAGE_TYPE_MODEM_DELTA</ref><sp/>|<sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a62e2ebd66c771dca682dd941b0b0dd35" kindref="member">DFU_TARGET_IMAGE_TYPE_FULL_MODEM</ref>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a29662e95b0547c1870d583d441c4aa9d" kindref="member">DFU_TARGET_IMAGE_TYPE_ANY</ref><sp/>=</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a971e80b0ea81a9d208e46aef4dd4d5f2" kindref="member">DFU_TARGET_IMAGE_TYPE_MCUBOOT</ref><sp/>|<sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79aa7f0de8d6936c577ba3c983d9edf38fd" kindref="member">DFU_TARGET_IMAGE_TYPE_MODEM_DELTA</ref><sp/>|</highlight></codeline>
<codeline lineno="44" refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a29662e95b0547c1870d583d441c4aa9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1ggad3de6472dd7ff6c41abd911a16b67a79a62e2ebd66c771dca682dd941b0b0dd35" kindref="member">DFU_TARGET_IMAGE_TYPE_FULL_MODEM</ref>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1ga9206912ee74cd457d34f3d717793a709" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1ga9206912ee74cd457d34f3d717793a709" kindref="member">dfu_target_evt_id</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a9f71f6924ab2990963b50dd6f7da831e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a9f71f6924ab2990963b50dd6f7da831e" kindref="member">DFU_TARGET_EVT_TIMEOUT</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a30ecc081254e15d567a5e831264e2b2a" kindref="member">DFU_TARGET_EVT_ERASE_DONE</ref></highlight></codeline>
<codeline lineno="50" refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1gga9206912ee74cd457d34f3d717793a709a30ecc081254e15d567a5e831264e2b2a" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref>)(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_ga9206912ee74cd457d34f3d717793a709_1ga9206912ee74cd457d34f3d717793a709" kindref="member">dfu_target_evt_id</ref><sp/>evt_id);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structdfu__target" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdfu__target" kindref="compound">dfu_target</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="structdfu__target_a27a59bab55c12c649ed5c6eaa0cb3615_1a27a59bab55c12c649ed5c6eaa0cb3615" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_a27a59bab55c12c649ed5c6eaa0cb3615_1a27a59bab55c12c649ed5c6eaa0cb3615" kindref="member">init</ref>)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num,<sp/><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="58" refid="structdfu__target_ad48ea0c23a032d13739d4a1e46188b16_1ad48ea0c23a032d13739d4a1e46188b16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_ad48ea0c23a032d13739d4a1e46188b16_1ad48ea0c23a032d13739d4a1e46188b16" kindref="member">offset_get</ref>)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="59" refid="structdfu__target_a733cd92a8b6c3375cc1453c80a00b3c3_1a733cd92a8b6c3375cc1453c80a00b3c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_a733cd92a8b6c3375cc1453c80a00b3c3_1a733cd92a8b6c3375cc1453c80a00b3c3" kindref="member">write</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="60" refid="structdfu__target_a68ecdbb7596a2ef382721ff1b6d56f59_1a68ecdbb7596a2ef382721ff1b6d56f59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_a68ecdbb7596a2ef382721ff1b6d56f59_1a68ecdbb7596a2ef382721ff1b6d56f59" kindref="member">done</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successful);</highlight></codeline>
<codeline lineno="61" refid="structdfu__target_ae41a6074ce15fa17ac887bdabc2c2f44_1ae41a6074ce15fa17ac887bdabc2c2f44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_ae41a6074ce15fa17ac887bdabc2c2f44_1ae41a6074ce15fa17ac887bdabc2c2f44" kindref="member">schedule_update</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num);</highlight></codeline>
<codeline lineno="62" refid="structdfu__target_adfa79e9cf5d7a0fd55ddf6c4c8e6bcef_1adfa79e9cf5d7a0fd55ddf6c4c8e6bcef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structdfu__target_adfa79e9cf5d7a0fd55ddf6c4c8e6bcef_1adfa79e9cf5d7a0fd55ddf6c4c8e6bcef" kindref="member">reset</ref>)();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_gad3de6472dd7ff6c41abd911a16b67a79_1gad3de6472dd7ff6c41abd911a16b67a79" kindref="member">dfu_target_image_type</ref><sp/><ref refid="group__dfu__target_gaa93e6e95392abe0cce100c9098e00ac1_1gaa93e6e95392abe0cce100c9098e00ac1" kindref="member">dfu_target_img_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__dfu__target_ga3e2f3839f898cb6866467210fed33e32_1ga3e2f3839f898cb6866467210fed33e32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_ga3e2f3839f898cb6866467210fed33e32_1ga3e2f3839f898cb6866467210fed33e32" kindref="member">dfu_target_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_size,<sp/><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__dfu__target_gab4b88b8b9da5954ea84bda8c48ab5f7c_1gab4b88b8b9da5954ea84bda8c48ab5f7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_gab4b88b8b9da5954ea84bda8c48ab5f7c_1gab4b88b8b9da5954ea84bda8c48ab5f7c" kindref="member">dfu_target_offset_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__dfu__target_gaa03afef7cf2545969f6e1ef55cd211f7_1gaa03afef7cf2545969f6e1ef55cd211f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_gaa03afef7cf2545969f6e1ef55cd211f7_1gaa03afef7cf2545969f6e1ef55cd211f7" kindref="member">dfu_target_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="group__dfu__target_ga0017dc97c4e8e9a00be3c2a06977cbef_1ga0017dc97c4e8e9a00be3c2a06977cbef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_ga0017dc97c4e8e9a00be3c2a06977cbef_1ga0017dc97c4e8e9a00be3c2a06977cbef" kindref="member">dfu_target_done</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successful);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="group__dfu__target_ga41a02c7f06085a9cbade90d76672a6ac_1ga41a02c7f06085a9cbade90d76672a6ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_ga41a02c7f06085a9cbade90d76672a6ac_1ga41a02c7f06085a9cbade90d76672a6ac" kindref="member">dfu_target_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__dfu__target_gaa586822fd1a282263cfd0c4d40d4b269_1gaa586822fd1a282263cfd0c4d40d4b269" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target_gaa586822fd1a282263cfd0c4d40d4b269_1gaa586822fd1a282263cfd0c4d40d4b269" kindref="member">dfu_target_schedule_update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DFU_TARGET_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/dfu/dfu_target.h"/>
  </compounddef>
</doxygen>
