<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cloud__service__utils_8h" kind="file" language="C++">
    <compoundname>cloud_service_utils.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="cloud__service__utils_8h_a75cad62a2090d72ae1ae8afeb30e9e0c_1a75cad62a2090d72ae1ae8afeb30e9e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cloud_service_utils_provision_ca_certificates</definition>
        <argsstring>(void)</argsstring>
        <name>cloud_service_utils_provision_ca_certificates</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Provision TLS certificate that the selected location service requires for HTTPS connections. The certificate must be provisioned before location requests can be executed successfully, either using this API or some other method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The certificate must be provisioned when LTE is not active in the modem. Call this API before setting up the LTE link in an application, or set the modem in offline mode before provisioning.</para>
</simplesect>
<simplesect kind="return"><para>0 on success, or negative error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/location/cloud_service/cloud_service_utils.h" line="23" column="5" declfile="lib/location/cloud_service/cloud_service_utils.h" declline="23" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CLOUD_SERVICE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUD_SERVICE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="cloud__service__utils_8h_a75cad62a2090d72ae1ae8afeb30e9e0c_1a75cad62a2090d72ae1ae8afeb30e9e0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cloud__service__utils_8h_a75cad62a2090d72ae1ae8afeb30e9e0c_1a75cad62a2090d72ae1ae8afeb30e9e0c" kindref="member">cloud_service_utils_provision_ca_certificates</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CLOUD_SERVICE_UTILS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/location/cloud_service/cloud_service_utils.h"/>
  </compounddef>
</doxygen>
