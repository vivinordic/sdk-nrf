<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="caf__sensor__common_8h" kind="file" language="C++">
    <compoundname>caf_sensor_common.h</compoundname>
    <includes local="no">zephyr/drivers/sensor.h</includes>
    <includedby refid="sensor__manager_8h" local="no">include/caf/sensor_manager.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/caf/caf_sensor_common.h</label>
        <link refid="caf__sensor__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/drivers/sensor.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/caf/sensor_manager.h</label>
        <link refid="sensor__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/caf/caf_sensor_common.h</label>
        <link refid="caf__sensor__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>applications/machine_learning/configuration/nrf5340dk_nrf5340_cpuapp/sensor_manager_def.h</label>
        <link refid="nrf5340dk__nrf5340__cpuapp_2sensor__manager__def_8h"/>
      </node>
      <node id="5">
        <label>applications/machine_learning/configuration/thingy53_nrf5340_cpuapp/sensor_manager_def.h</label>
        <link refid="thingy53__nrf5340__cpuapp_2sensor__manager__def_8h"/>
      </node>
      <node id="3">
        <label>applications/machine_learning/configuration/nrf52840dk_nrf52840/sensor_manager_def.h</label>
        <link refid="nrf52840dk__nrf52840_2sensor__manager__def_8h"/>
      </node>
      <node id="6">
        <label>applications/machine_learning/configuration/thingy53_nrf5340_cpuapp_ns/sensor_manager_def.h</label>
        <link refid="thingy53__nrf5340__cpuapp__ns_2sensor__manager__def_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcaf__sampled__channel" prot="public">caf_sampled_channel</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" prot="public" static="no">
        <name>FLOAT_TO_SENSOR_VAL_CONST</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="25" column="9" bodyfile="include/caf/caf_sensor_common.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__caf__sensor__common_ga08b38a9cb4f90df0bbb1ac66b33c43f3_1ga08b38a9cb4f90df0bbb1ac66b33c43f3" prot="public" static="no">
        <name>FLOAT_TO_SENSOR_VALUE</name>
        <param><defname>float_val</defname></param>
        <initializer>	{											\
		.val1 = (int32_t)(float_val),							\
		.val2 = (int32_t)(((float_val) - (int32_t)(float_val)) *			\
						<ref refid="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" kindref="member">FLOAT_TO_SENSOR_VAL_CONST</ref>),			\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="27" column="9" bodyfile="include/caf/caf_sensor_common.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__caf__sensor__common_ga44ecccf37618584aed8fe6070a343470_1ga44ecccf37618584aed8fe6070a343470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sensor_value_greater_then</definition>
        <argsstring>(struct sensor_value sensor_val1, struct sensor_value sensor_val2)</argsstring>
        <name>sensor_value_greater_then</name>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val1</declname>
        </param>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val2</declname>
        </param>
        <briefdescription>
<para>Helper function for checking if one sensor_value is greater than the other. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_val1</parametername>
</parameternamelist>
<parameterdescription>
<para>First compered sensor value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensor_val2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second compered sensor value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sensor_val1 is greater than sensor_val2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="53" column="20" bodyfile="include/caf/caf_sensor_common.h" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__caf__sensor__common_ga02c84e6bd0fb041fc2af8af43a5e953e_1ga02c84e6bd0fb041fc2af8af43a5e953e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct sensor_value</type>
        <definition>static struct sensor_value sensor_value_abs_difference</definition>
        <argsstring>(struct sensor_value sensor_val1, struct sensor_value sensor_val2)</argsstring>
        <name>sensor_value_abs_difference</name>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val1</declname>
        </param>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val2</declname>
        </param>
        <briefdescription>
<para>Helper function for calculating absolute value of difference of two sensor_values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_val1</parametername>
</parameternamelist>
<parameterdescription>
<para>First sensor value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensor_val2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second sensor value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Absolute value of difference between sensor_val1 and sensor_val2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="53" column="20" bodyfile="include/caf/caf_sensor_common.h" bodystart="67" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CAF_SENSOR_COMMON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CAF_SENSOR_COMMON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/drivers/sensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>value<sp/>has<sp/>to<sp/>be<sp/>equal<sp/>to<sp/>fractional<sp/>part<sp/>of<sp/>the<sp/>sensor_value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOAT_TO_SENSOR_VAL_CONST<sp/>1000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__caf__sensor__common_ga08b38a9cb4f90df0bbb1ac66b33c43f3_1ga08b38a9cb4f90df0bbb1ac66b33c43f3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOAT_TO_SENSOR_VALUE(float_val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.val1<sp/>=<sp/>(int32_t)(float_val),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.val2<sp/>=<sp/>(int32_t)(((float_val)<sp/>-<sp/>(int32_t)(float_val))<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOAT_TO_SENSOR_VAL_CONST),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structcaf__sampled__channel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcaf__sampled__channel" kindref="compound">caf_sampled_channel</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>sensor_channel<sp/><ref refid="structcaf__sampled__channel_af5c6b8ed10283c2dfb9abc450bfbd577_1af5c6b8ed10283c2dfb9abc450bfbd577" kindref="member">chan</ref>;</highlight></codeline>
<codeline lineno="43" refid="structcaf__sampled__channel_afbc4cb4ee1c086a33ceffd164e34a018_1afbc4cb4ee1c086a33ceffd164e34a018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcaf__sampled__channel_afbc4cb4ee1c086a33ceffd164e34a018_1afbc4cb4ee1c086a33ceffd164e34a018" kindref="member">data_cnt</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structcaf__sampled__channel_af5c6b8ed10283c2dfb9abc450bfbd577_1af5c6b8ed10283c2dfb9abc450bfbd577" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__caf__sensor__common_ga44ecccf37618584aed8fe6070a343470_1ga44ecccf37618584aed8fe6070a343470" kindref="member">sensor_value_greater_then</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sensor_value<sp/>sensor_val1,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sensor_value<sp/>sensor_val2)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((sensor_val1.val1<sp/>&gt;<sp/>sensor_val2.val1)<sp/>||</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sensor_val1.val1<sp/>==<sp/>sensor_val2.val1)<sp/>&amp;&amp;<sp/>(sensor_val1.val2<sp/>&gt;<sp/>sensor_val2.val2)));</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sensor_value<sp/><ref refid="group__caf__sensor__common_ga02c84e6bd0fb041fc2af8af43a5e953e_1ga02c84e6bd0fb041fc2af8af43a5e953e" kindref="member">sensor_value_abs_difference</ref>(struct<sp/>sensor_value<sp/>sensor_val1,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>sensor_value<sp/>sensor_val2)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sensor_value<sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.val1<sp/>=<sp/>abs(sensor_val1.val1<sp/>-<sp/>sensor_val2.val1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.val2<sp/>=<sp/>abs(sensor_val1.val2<sp/>-<sp/>sensor_val2.val2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.val2<sp/>&gt;<sp/><ref refid="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" kindref="member">FLOAT_TO_SENSOR_VAL_CONST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.val2<sp/>=<sp/>result.val2<sp/>-<sp/><ref refid="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" kindref="member">FLOAT_TO_SENSOR_VAL_CONST</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.val1++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_CAF_SENSOR_COMMON_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/caf/caf_sensor_common.h"/>
  </compounddef>
</doxygen>
