<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="lwm2m__os_8h" kind="file" language="C++">
    <compoundname>lwm2m_os.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>lib/bin/lwm2m_carrier/include/lwm2m_os.h</label>
        <link refid="lwm2m__os_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structlwm2m__os__sms__deliver__address" prot="public">lwm2m_os_sms_deliver_address</innerclass>
    <innerclass refid="structlwm2m__os__sms__udh__app__port" prot="public">lwm2m_os_sms_udh_app_port</innerclass>
    <innerclass refid="structlwm2m__os__sms__deliver__header" prot="public">lwm2m_os_sms_deliver_header</innerclass>
    <innerclass refid="unionlwm2m__os__sms__header" prot="public">lwm2m_os_sms_header</innerclass>
    <innerclass refid="structlwm2m__os__sms__data" prot="public">lwm2m_os_sms_data</innerclass>
    <innerclass refid="structlwm2m__os__download__evt" prot="public">lwm2m_os_download_evt</innerclass>
    <innerclass refid="structlwm2m__os__download__cfg" prot="public">lwm2m_os_download_cfg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" prot="public" static="no">
        <name>LWM2M_OS_MAX_WORK_QS</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Maximum number of work queues that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="28" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga31a183e2f8a60106bea52d3a7ce8d019_1ga31a183e2f8a60106bea52d3a7ce8d019" prot="public" static="no">
        <name>LWM2M_OS_MAX_TIMER_COUNT</name>
        <initializer>(5 + (<ref refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" kindref="member">LWM2M_OS_MAX_WORK_QS</ref> * 4))</initializer>
        <briefdescription>
<para>Maximum number of timers that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="33" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga6f6ca343b703c92a803511f1f02f5581_1ga6f6ca343b703c92a803511f1f02f5581" prot="public" static="no">
        <name>LWM2M_OS_MAX_THREAD_COUNT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Maximum number of threads that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="41" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gad02f59f74cf392d91b77c764d797e9f2_1gad02f59f74cf392d91b77c764d797e9f2" prot="public" static="no">
        <name>LWM2M_OS_MAX_SEM_COUNT</name>
        <initializer>(4 + (<ref refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" kindref="member">LWM2M_OS_MAX_WORK_QS</ref> * 2))</initializer>
        <briefdescription>
<para>Maximum number of semaphores that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="48" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga15a565289566c52a173855b882718921_1ga15a565289566c52a173855b882718921" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_NONE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="52" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga844dee1fd1d1de347853a361c4cbfc5d_1ga844dee1fd1d1de347853a361c4cbfc5d" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_CAT_M1</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="54" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gaf7c30e87088c8dad05406f38feb6d376_1gaf7c30e87088c8dad05406f38feb6d376" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_CAT_NB1</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="56" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga90475cdcc2d05117c7cd61cd5bd46087_1ga90475cdcc2d05117c7cd61cd5bd46087" prot="public" static="no">
        <name>LWM2M_OS_STORAGE_BASE</name>
        <initializer>0xCA00</initializer>
        <briefdescription>
<para>Range of the non-volatile storage identifiers used by the library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="61" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gae023ade9b167e4cb1a930d782de1aea5_1gae023ade9b167e4cb1a930d782de1aea5" prot="public" static="no">
        <name>LWM2M_OS_STORAGE_END</name>
        <initializer>0xCAFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="62" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_gad1e334a9ae446b40801f07444357140b_1gad1e334a9ae446b40801f07444357140b" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_FRAGMENT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="113" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_ga3453d087b5fed79fabb5a1332cfa1087_1ga3453d087b5fed79fabb5a1332cfa1087" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_ERROR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="114" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_gac0fd78b88e3d0f3dd23bec9b118121bc_1gac0fd78b88e3d0f3dd23bec9b118121bc" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_DONE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="115" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga1050626db09df1d8885dfb5e924bc234_1ga1050626db09df1d8885dfb5e924bc234" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_SEC_TAG_NONE</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>Download client configuration values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="136" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_os_pdn_fam</name>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV4V6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa6589570972507d1cfe75a767293884a5" prot="public">
          <name>LWM2M_OS_PDN_FAM_NONIP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDN family. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="154" column="1" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="enum" id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_os_pdn_event</name>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" prot="public">
          <name>LWM2M_OS_PDN_EVENT_CNEC_ESM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" prot="public">
          <name>LWM2M_OS_PDN_EVENT_ACTIVATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" prot="public">
          <name>LWM2M_OS_PDN_EVENT_DEACTIVATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" prot="public">
          <name>LWM2M_OS_PDN_EVENT_IPV6_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" prot="public">
          <name>LWM2M_OS_PDN_EVENT_IPV6_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDN event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="162" column="1" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="162" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" prot="public" static="no">
        <type>int</type>
        <definition>typedef int lwm2m_os_work_q_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_work_q_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="35" column="13" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" prot="public" static="no">
        <type>int</type>
        <definition>typedef int lwm2m_os_timer_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_timer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="36" column="13" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga367a3f87cdfceaf36759f2d63b08cbad_1ga367a3f87cdfceaf36759f2d63b08cbad" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_thread_entry_t) (void *p1, void *p2, void *p3)</definition>
        <argsstring>)(void *p1, void *p2, void *p3)</argsstring>
        <name>lwm2m_os_thread_entry_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="43" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" prot="public" static="no">
        <type>int</type>
        <definition>typedef int lwm2m_os_sem_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_sem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="50" column="13" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga38fb40d133bc63c2d572edcadcfcb216_1ga38fb40d133bc63c2d572edcadcfcb216" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_at_handler_callback_t) (const char *notif)</definition>
        <argsstring>)(const char *notif)</argsstring>
        <name>lwm2m_os_at_handler_callback_t</name>
        <briefdescription>
<para>AT command error handler callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="67" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga39c26d1f3a5e49c360f5223e3fed67cb_1ga39c26d1f3a5e49c360f5223e3fed67cb" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_timer_handler_t) (lwm2m_os_timer_t *timer)</definition>
        <argsstring>)(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_handler_t</name>
        <briefdescription>
<para>Timer callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="72" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_sms_callback_t) (struct lwm2m_os_sms_data *const data, void *context)</definition>
        <argsstring>)(struct lwm2m_os_sms_data *const data, void *context)</argsstring>
        <name>lwm2m_os_sms_callback_t</name>
        <briefdescription>
<para>SMS subscriber callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="107" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* lwm2m_os_download_callback_t) (const struct lwm2m_os_download_evt *event)</definition>
        <argsstring>)(const struct lwm2m_os_download_evt *event)</argsstring>
        <name>lwm2m_os_download_callback_t</name>
        <briefdescription>
<para>Download client asynchronous event handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="151" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_pdn_event_handler_t) (uint8_t cid, enum lwm2m_os_pdn_event event, int reason)</definition>
        <argsstring>)(uint8_t cid, enum lwm2m_os_pdn_event event, int reason)</argsstring>
        <name>lwm2m_os_pdn_event_handler_t</name>
        <briefdescription>
<para>PDN event handler. </para>
        </briefdescription>
        <detaileddescription>
<para>If assigned during PDP context creation, the event handler will receive status information relative to the Packet Data Network connection, as reported by the AT notifications CNEC and GGEV.</para>
<para>This handler is executed by the same context that dispatches AT notifications. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="179" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_pdn_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the PDN functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="187" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="187" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_create</definition>
        <argsstring>(uint8_t *cid, lwm2m_os_pdn_event_handler_t cb)</argsstring>
        <name>lwm2m_os_pdn_ctx_create</name>
        <param>
          <type>uint8_t *</type>
          <declname>cid</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Create a Packet Data Protocol (PDP) context. </para>
        </briefdescription>
        <detaileddescription>
<para>If a callback is provided via the <computeroutput>cb</computeroutput> parameter, generate events from the CNEC and GGEV AT notifications to report state of the Packet Data Network (PDN) connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the new PDP context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional event handler.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="201" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="201" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_configure</definition>
        <argsstring>(uint8_t cid, const char *apn, enum lwm2m_os_pdn_fam family)</argsstring>
        <name>lwm2m_os_pdn_ctx_configure</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>apn</declname>
        </param>
        <param>
          <type>enum <ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref></type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Configure a Packet Data Protocol context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apn</parametername>
</parameternamelist>
<parameterdescription>
<para>The Access Point Name to configure the PDP context with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>The family to configure the PDN context for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="212" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="212" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_destroy</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_ctx_destroy</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Destroy a Packet Data Protocol context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context to destroy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="221" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="221" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafae9dcfc60a7e3d1389d4c90eab34aa4_1gafae9dcfc60a7e3d1389d4c90eab34aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_activate</definition>
        <argsstring>(uint8_t cid, int *esm, enum lwm2m_os_pdn_fam *family)</argsstring>
        <name>lwm2m_os_pdn_activate</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>esm</declname>
        </param>
        <param>
          <type>enum <ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref> *</type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Activate a Packet Data Network (PDN) connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context ID to activate a connection for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">esm</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, the function will block to return the ESM error reason. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">family</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, the function will block to return PDN_FAM_IPV4 if only IPv4 is supported, or PDN_FAM_IPV6 if only IPv6 is supported. Otherwise, this value will remain unchanged.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="234" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="234" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_deactivate</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_deactivate</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Deactivate a Packet Data Network (PDN) connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="243" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="243" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_id_get</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_id_get</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Retrieve the PDN ID for a given PDP Context. </para>
        </briefdescription>
        <detaileddescription>
<para>The PDN ID can be used to route traffic through a Packet Data Network.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The context ID of the PDN connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="254" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="254" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_default_apn_get</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>lwm2m_os_pdn_default_apn_get</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Retrieve the default Access Point Name (APN). </para>
        </briefdescription>
        <detaileddescription>
<para>The default APN is the APN of the default PDP context (zero).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to copy the APN into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the output buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="266" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="266" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_default_callback_set</definition>
        <argsstring>(lwm2m_os_pdn_event_handler_t cb)</argsstring>
        <name>lwm2m_os_pdn_default_callback_set</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set a callback for events pertaining to the default PDP context (zero). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDN event handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="273" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="273" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the LWM2M OS layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="278" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="278" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga25c176d6c261191289acd565533738c9_1ga25c176d6c261191289acd565533738c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* lwm2m_os_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>lwm2m_os_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="283" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="283" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>lwm2m_os_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Free memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="288" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="288" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sem_init</definition>
        <argsstring>(lwm2m_os_sem_t **sem, unsigned int initial_count, unsigned int limit)</argsstring>
        <name>lwm2m_os_sem_init</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref> **</type>
          <declname>sem</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>initial_count</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Initialize a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the pointer to the semaphore. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial semaphore count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum permitted semaphore count.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore created successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="300" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="300" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sem_take</definition>
        <argsstring>(lwm2m_os_sem_t *sem, int timeout)</argsstring>
        <name>lwm2m_os_sem_take</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Take a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in ms or -1 for forever.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore taken. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EBUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned without waiting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period timed out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="312" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="312" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sem_give</definition>
        <argsstring>(lwm2m_os_sem_t *sem)</argsstring>
        <name>lwm2m_os_sem_give</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Give a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="319" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="319" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sem_reset</definition>
        <argsstring>(lwm2m_os_sem_t *sem)</argsstring>
        <name>lwm2m_os_sem_reset</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Reset a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="326" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="326" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_uptime_get</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_uptime_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get uptime, in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="331" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="331" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_uptime_delta</definition>
        <argsstring>(int64_t *ref)</argsstring>
        <name>lwm2m_os_uptime_delta</name>
        <param>
          <type>int64_t *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Get uptime delta, in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="336" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="336" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sleep</definition>
        <argsstring>(int ms)</argsstring>
        <name>lwm2m_os_sleep</name>
        <param>
          <type>int</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Put a thread to a sleep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="341" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="341" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sys_reset</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sys_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reboot system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="346" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="346" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lwm2m_os_rand_get</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_rand_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a random value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="351" column="10" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="351" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_delete</definition>
        <argsstring>(uint16_t id)</argsstring>
        <name>lwm2m_os_storage_delete</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Delete a non-volatile storage entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="356" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="356" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_read</definition>
        <argsstring>(uint16_t id, void *data, size_t len)</argsstring>
        <name>lwm2m_os_storage_read</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read an entry from non-volatile storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="361" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="361" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_write</definition>
        <argsstring>(uint16_t id, const void *data, size_t len)</argsstring>
        <name>lwm2m_os_storage_write</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write an entry to non-volatile storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="366" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="366" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga5d77e8f44fa245f4ce982224a0616b0e_1ga5d77e8f44fa245f4ce982224a0616b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" kindref="member">lwm2m_os_work_q_t</ref> *</type>
        <definition>lwm2m_os_work_q_t* lwm2m_os_work_q_start</definition>
        <argsstring>(int index, const char *name)</argsstring>
        <name>lwm2m_os_work_q_start</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Start a workqueue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the queue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Workqueue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="376" column="19" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="376" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac9eca883d3ccb0163b406350280f0125_1gac9eca883d3ccb0163b406350280f0125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
        <definition>lwm2m_os_timer_t* lwm2m_os_timer_get</definition>
        <argsstring>(lwm2m_os_timer_handler_t handler)</argsstring>
        <name>lwm2m_os_timer_get</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga39c26d1f3a5e49c360f5223e3fed67cb_1ga39c26d1f3a5e49c360f5223e3fed67cb" kindref="member">lwm2m_os_timer_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Reserve a timer task from the OS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to run for this task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timer task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="385" column="18" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="385" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_timer_release</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_release</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Release a timer task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="390" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="390" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga2a5362bcc8c3c0eadc0616f354e3f3cd_1ga2a5362bcc8c3c0eadc0616f354e3f3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_timer_start</definition>
        <argsstring>(lwm2m_os_timer_t *timer, int64_t delay)</argsstring>
        <name>lwm2m_os_timer_start</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Start a timer on system work queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay before submitting the task in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Work placed on queue, already on queue or already running. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer not found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="401" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="401" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga2edb1b5749f11f9a3a24c2be19f5a931_1ga2edb1b5749f11f9a3a24c2be19f5a931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_timer_start_on_q</definition>
        <argsstring>(lwm2m_os_work_q_t *work_q, lwm2m_os_timer_t *timer, int64_t delay)</argsstring>
        <name>lwm2m_os_timer_start_on_q</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" kindref="member">lwm2m_os_work_q_t</ref> *</type>
          <declname>work_q</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Start a timer on a specific queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>work_q</parametername>
</parameternamelist>
<parameterdescription>
<para>Workqueue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay before submitting the task in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Work placed on queue, already on queue or already running. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer or work_q not found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="413" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="413" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_timer_cancel</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_cancel</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Cancel a timer run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="420" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="420" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_timer_remaining</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_remaining</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Obtain the time remaining on a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Time remaining in ms. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="429" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="429" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lwm2m_os_timer_is_pending</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_is_pending</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Check if a timer task is pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If a timer task is pending. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="438" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="438" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga001dc55399887e4bda6cf0a31d70d2df_1ga001dc55399887e4bda6cf0a31d70d2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_thread_start</definition>
        <argsstring>(int index, lwm2m_os_thread_entry_t entry, const char *name)</argsstring>
        <name>lwm2m_os_thread_start</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga367a3f87cdfceaf36759f2d63b08cbad_1ga367a3f87cdfceaf36759f2d63b08cbad" kindref="member">lwm2m_os_thread_entry_t</ref></type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create and start a new thread. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the thread. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread entry function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the thread.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread created and started. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread index not valid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="450" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="450" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_nrf_modem_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_nrf_modem_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize modem library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>If modem initialization failed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive number <emphasis>nrf_modem_dfu</emphasis> in case of modem firmware update. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="459" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="459" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_nrf_modem_shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_nrf_modem_shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shutdown the Modem library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>If modem shutdown failed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="467" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="467" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga24ed1b56060355cb928b6957c89584ec_1ga24ed1b56060355cb928b6957c89584ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_init</definition>
        <argsstring>(lwm2m_os_at_handler_callback_t callback)</argsstring>
        <name>lwm2m_os_at_init</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga38fb40d133bc63c2d572edcadcfcb216_1ga38fb40d133bc63c2d572edcadcfcb216" kindref="member">lwm2m_os_at_handler_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Initialize AT command driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>If AT command driver initialization failed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="475" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="475" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sms_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sms_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize SMS subscriber library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="480" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="480" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sms_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sms_uninit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Uninitialize SMS subscriber library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="485" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="485" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sms_client_register</definition>
        <argsstring>(lwm2m_os_sms_callback_t lib_callback, void *context)</argsstring>
        <name>lwm2m_os_sms_client_register</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref></type>
          <declname>lib_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Register as an SMS client/listener. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>If unable to register as SMS listener. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="493" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="493" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sms_client_deregister</definition>
        <argsstring>(int handle)</argsstring>
        <name>lwm2m_os_sms_client_deregister</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>degister as an SMS client/listener. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="498" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="498" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_connect</definition>
        <argsstring>(const char *host, const struct lwm2m_os_download_cfg *cfg)</argsstring>
        <name>lwm2m_os_download_connect</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const struct <ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Establish a connection with the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="505" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="505" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_disconnect</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_download_disconnect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disconnect from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="512" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="512" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_init</definition>
        <argsstring>(lwm2m_os_download_callback_t lib_callback)</argsstring>
        <name>lwm2m_os_download_init</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref></type>
          <declname>lib_callback</declname>
        </param>
        <briefdescription>
<para>Initialize the download client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="519" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="519" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_start</definition>
        <argsstring>(const char *file, size_t from)</argsstring>
        <name>lwm2m_os_download_start</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Download a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="526" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="526" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_file_size_get</definition>
        <argsstring>(size_t *size)</argsstring>
        <name>lwm2m_os_download_file_size_get</name>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Retrieve size of file being downloaded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the file being downloaded.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="535" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="535" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaff6e6936bc7c9db05c071b718fbee419_1gaff6e6936bc7c9db05c071b718fbee419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lwm2m_os_lte_modes_get</definition>
        <argsstring>(int32_t *modes)</argsstring>
        <name>lwm2m_os_lte_modes_get</name>
        <param>
          <type>int32_t *</type>
          <declname>modes</declname>
        </param>
        <briefdescription>
<para>get enabled system modes from modem. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modes</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to store the enabled modes. LWM2M_OS_LTE_MODE_CAT_M1 Cat-M1 (LTE-FDD) LWM2M_OS_LTE_MODE_CAT_NB1 Cat-NB1 (NB-IoT)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of enabled modes: </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="546" column="8" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="546" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga4da798a787782e0711a87bcf26b2eac4_1ga4da798a787782e0711a87bcf26b2eac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_lte_mode_request</definition>
        <argsstring>(int32_t prefer)</argsstring>
        <name>lwm2m_os_lte_mode_request</name>
        <param>
          <type>int32_t</type>
          <declname>prefer</declname>
        </param>
        <briefdescription>
<para>set preferred bearer in modem. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefer</parametername>
</parameternamelist>
<parameterdescription>
<para>LWM2M_OS_LTE_MODE_NONE for no preference LWM2M_OS_LTE_MODE_CAT_M1 for Cat-M1 (LTE-FDD) LWM2M_OS_LTE_MODE_CAT_NB1 for Cat-NB1 (NB-IoT)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of enabled modes: </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="557" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="557" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga7cf2c532fd4cfc3c595ae5e7e69eb6e0_1ga7cf2c532fd4cfc3c595ae5e7e69eb6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_nrf_errno</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_nrf_errno</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Translate the error number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="562" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="562" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab26a02eda0117f580dc83bac18a6b9f0_1gab26a02eda0117f580dc83bac18a6b9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_app_fota_start</definition>
        <argsstring>(size_t max_file_size)</argsstring>
        <name>lwm2m_os_app_fota_start</name>
        <param>
          <type>size_t</type>
          <declname>max_file_size</declname>
        </param>
        <briefdescription>
<para>Start an application firmware upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Estimate of the new firmware image to be received. May be greater than or equal to the actual image size received by the end.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Ready to start a new firmware upgrade. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A positive number of bytes written so far, if the previous upgrade was not completed. In this case, the upgrade will resume from this offset. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EBUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>Another application firmware upgrade is already ongoing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to store the file of the given size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>This function is not implemented. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="578" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="578" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9ad1dfe156cd18ee3f74cbdca0743aa9_1ga9ad1dfe156cd18ee3f74cbdca0743aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_app_fota_fragment</definition>
        <argsstring>(const char *buf, uint16_t len, uint16_t offset, uint32_t crc32)</argsstring>
        <name>lwm2m_os_app_fota_fragment</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
<para>Receive an application firmware image fragment and validate its CRC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the fragment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the fragment in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset into the buffer, from which to start copying the fragment to flash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crc32</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected IEEE CRC32 value. Must be checked for the whole fragment.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__lwm2m__carrier__os_gab26a02eda0117f580dc83bac18a6b9f0_1gab26a02eda0117f580dc83bac18a6b9f0" kindref="member">lwm2m_os_app_fota_start()</ref> was not called beforehand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to store the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>CRC error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>Firmware image not recognized, or this function is not implemented. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="595" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="595" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga2a8f2f19b439fd55008074518b439de4_1ga2a8f2f19b439fd55008074518b439de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_app_fota_finish</definition>
        <argsstring>(uint32_t crc32)</argsstring>
        <name>lwm2m_os_app_fota_finish</name>
        <param>
          <type>uint32_t</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
<para>Finalize the current application firmware upgrade and CRC-validate the image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">crc32</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected IEEE CRC32 value. Should be checked for the whole file in flash.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__lwm2m__carrier__os_gab26a02eda0117f580dc83bac18a6b9f0_1gab26a02eda0117f580dc83bac18a6b9f0" kindref="member">lwm2m_os_app_fota_start()</ref> was not called beforehand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>CRC error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>This function is not implemented. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="608" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="608" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaceb1fec946cf31c2f8c8379071dbdeb1_1gaceb1fec946cf31c2f8c8379071dbdeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_app_fota_abort</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_app_fota_abort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Abort the current application firmware upgrade. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="613" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="613" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWM2M_OS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_WORK_QS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__lwm2m__carrier__os_ga31a183e2f8a60106bea52d3a7ce8d019_1ga31a183e2f8a60106bea52d3a7ce8d019" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_TIMER_COUNT<sp/>(5<sp/>+<sp/>(LWM2M_OS_MAX_WORK_QS<sp/>*<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" kindref="member">lwm2m_os_work_q_t</ref>;</highlight></codeline>
<codeline lineno="36" refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__lwm2m__carrier__os_ga6f6ca343b703c92a803511f1f02f5581_1ga6f6ca343b703c92a803511f1f02f5581" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_THREAD_COUNT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__lwm2m__carrier__os_ga367a3f87cdfceaf36759f2d63b08cbad_1ga367a3f87cdfceaf36759f2d63b08cbad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga367a3f87cdfceaf36759f2d63b08cbad_1ga367a3f87cdfceaf36759f2d63b08cbad" kindref="member">lwm2m_os_thread_entry_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p2,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p3);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__lwm2m__carrier__os_gad02f59f74cf392d91b77c764d797e9f2_1gad02f59f74cf392d91b77c764d797e9f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_SEM_COUNT<sp/>(4<sp/>+<sp/>(LWM2M_OS_MAX_WORK_QS<sp/>*<sp/>2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__lwm2m__carrier__os_ga15a565289566c52a173855b882718921_1ga15a565289566c52a173855b882718921" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_NONE<sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LTE<sp/>Rel-13<sp/>Cat-M1<sp/>HD-FDD<sp/>==<sp/>E-UTRAN<sp/>==<sp/>LTE-M<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__lwm2m__carrier__os_ga844dee1fd1d1de347853a361c4cbfc5d_1ga844dee1fd1d1de347853a361c4cbfc5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_CAT_M1<sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LTE<sp/>Rel-13<sp/>Cat-NB1<sp/>HD-FDD<sp/>||<sp/>LTE<sp/>Rel-14<sp/>Cat-NB1<sp/>and<sp/>Cat-NB2<sp/>HD-FDD<sp/>==<sp/>E-UTRAN<sp/>NB-S1<sp/>==<sp/>NB-IoT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__lwm2m__carrier__os_gaf7c30e87088c8dad05406f38feb6d376_1gaf7c30e87088c8dad05406f38feb6d376" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_CAT_NB1<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__lwm2m__carrier__os_ga90475cdcc2d05117c7cd61cd5bd46087_1ga90475cdcc2d05117c7cd61cd5bd46087" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_STORAGE_BASE<sp/>0xCA00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__lwm2m__carrier__os_gae023ade9b167e4cb1a930d782de1aea5_1gae023ade9b167e4cb1a930d782de1aea5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_STORAGE_END<sp/><sp/>0xCAFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__lwm2m__carrier__os_ga38fb40d133bc63c2d572edcadcfcb216_1ga38fb40d133bc63c2d572edcadcfcb216" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga38fb40d133bc63c2d572edcadcfcb216_1ga38fb40d133bc63c2d572edcadcfcb216" kindref="member">lwm2m_os_at_handler_callback_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*notif);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__lwm2m__carrier__os_ga39c26d1f3a5e49c360f5223e3fed67cb_1ga39c26d1f3a5e49c360f5223e3fed67cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga39c26d1f3a5e49c360f5223e3fed67cb_1ga39c26d1f3a5e49c360f5223e3fed67cb" kindref="member">lwm2m_os_timer_handler_t</ref>)(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structlwm2m__os__sms__deliver__address" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__address" kindref="compound">lwm2m_os_sms_deliver_address</ref><sp/>{</highlight></codeline>
<codeline lineno="75" refid="structlwm2m__os__sms__deliver__address_a279861aa1f8e9ef8bcbcc6ca38246b9d_1a279861aa1f8e9ef8bcbcc6ca38246b9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*<ref refid="structlwm2m__os__sms__deliver__address_a279861aa1f8e9ef8bcbcc6ca38246b9d_1a279861aa1f8e9ef8bcbcc6ca38246b9d" kindref="member">address_str</ref>;</highlight></codeline>
<codeline lineno="76" refid="structlwm2m__os__sms__deliver__address_a6bef89d88fe5b9b49c5c3fef6dd41875_1a6bef89d88fe5b9b49c5c3fef6dd41875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlwm2m__os__sms__deliver__address_a6bef89d88fe5b9b49c5c3fef6dd41875_1a6bef89d88fe5b9b49c5c3fef6dd41875" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structlwm2m__os__sms__udh__app__port" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__udh__app__port" kindref="compound">lwm2m_os_sms_udh_app_port</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structlwm2m__os__sms__udh__app__port_a2aa1f94dc0999a842b81ed7543e19155_1a2aa1f94dc0999a842b81ed7543e19155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__sms__udh__app__port_a2aa1f94dc0999a842b81ed7543e19155_1a2aa1f94dc0999a842b81ed7543e19155" kindref="member">present</ref>;</highlight></codeline>
<codeline lineno="81" refid="structlwm2m__os__sms__udh__app__port_a36bb43a42e6d2c58b0c1d650e4e3bd0a_1a36bb43a42e6d2c58b0c1d650e4e3bd0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlwm2m__os__sms__udh__app__port_a36bb43a42e6d2c58b0c1d650e4e3bd0a_1a36bb43a42e6d2c58b0c1d650e4e3bd0a" kindref="member">dest_port</ref>;</highlight></codeline>
<codeline lineno="82" refid="structlwm2m__os__sms__deliver__header_a887ad4c4f89934f3a18f89485faaef3a_1a887ad4c4f89934f3a18f89485faaef3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlwm2m__os__sms__udh__app__port_a2af1aa629735db20e73a393304528bd1_1a2af1aa629735db20e73a393304528bd1" kindref="member">src_port</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structlwm2m__os__sms__deliver__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__header" kindref="compound">lwm2m_os_sms_deliver_header</ref><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__address" kindref="compound">lwm2m_os_sms_deliver_address</ref><sp/><ref refid="structlwm2m__os__sms__deliver__header_a71c74673d08d593d85f020801db6ee04_1a71c74673d08d593d85f020801db6ee04" kindref="member">originating_address</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__udh__app__port" kindref="compound">lwm2m_os_sms_udh_app_port</ref><sp/><sp/><sp/><sp/><ref refid="structlwm2m__os__sms__deliver__header_a887ad4c4f89934f3a18f89485faaef3a_1a887ad4c4f89934f3a18f89485faaef3a" kindref="member">app_port</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="unionlwm2m__os__sms__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlwm2m__os__sms__header" kindref="compound">lwm2m_os_sms_header</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__header" kindref="compound">lwm2m_os_sms_deliver_header</ref><sp/><ref refid="unionlwm2m__os__sms__header_a844be90bfe04efe1b01c1d4dd2584fd6_1a844be90bfe04efe1b01c1d4dd2584fd6" kindref="member">deliver</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structlwm2m__os__sms__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__data" kindref="compound">lwm2m_os_sms_data</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlwm2m__os__sms__header" kindref="compound">lwm2m_os_sms_header</ref><sp/><ref refid="structlwm2m__os__sms__data_a4c4fccaa8324a9e698b31af993e9b174_1a4c4fccaa8324a9e698b31af993e9b174" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="99" refid="structlwm2m__os__sms__data_aae87de711b13be175ec1152f46ab3d26_1aae87de711b13be175ec1152f46ab3d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__sms__data_aae87de711b13be175ec1152f46ab3d26_1aae87de711b13be175ec1152f46ab3d26" kindref="member">payload_len</ref>;</highlight></codeline>
<codeline lineno="101" refid="structlwm2m__os__sms__data_ac7d4f4c566c7b84e89a1ca84ddf9b9d8_1ac7d4f4c566c7b84e89a1ca84ddf9b9d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__sms__data_ac7d4f4c566c7b84e89a1ca84ddf9b9d8_1ac7d4f4c566c7b84e89a1ca84ddf9b9d8" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__data" kindref="compound">lwm2m_os_sms_data</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__lwm2m__os__download__evt__id_gad1e334a9ae446b40801f07444357140b_1gad1e334a9ae446b40801f07444357140b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_FRAGMENT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__lwm2m__os__download__evt__id_ga3453d087b5fed79fabb5a1332cfa1087_1ga3453d087b5fed79fabb5a1332cfa1087" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_ERROR<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="group__lwm2m__os__download__evt__id_gac0fd78b88e3d0f3dd23bec9b118121bc_1gac0fd78b88e3d0f3dd23bec9b118121bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_DONE<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structlwm2m__os__download__evt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__evt" kindref="compound">lwm2m_os_download_evt</ref><sp/>{</highlight></codeline>
<codeline lineno="123" refid="structlwm2m__os__download__evt_a032f8fafadeb31835e4a4eec588b1fae_1a032f8fafadeb31835e4a4eec588b1fae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_a032f8fafadeb31835e4a4eec588b1fae_1a032f8fafadeb31835e4a4eec588b1fae" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126" refid="structlwm2m__os__download__evt_a5f594f7c733a3e1a34af6cd46d254f1e_1a5f594f7c733a3e1a34af6cd46d254f1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_a5f594f7c733a3e1a34af6cd46d254f1e_1a5f594f7c733a3e1a34af6cd46d254f1e" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lwm2m_os_fragment<sp/>{</highlight></codeline>
<codeline lineno="129" refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="130" refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="131" refid="structlwm2m__os__download__evt_af6bfe4b3d60f2a09fb8f5319dee5a7a1_1af6bfe4b3d60f2a09fb8f5319dee5a7a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlwm2m__os__download__evt_af6bfe4b3d60f2a09fb8f5319dee5a7a1_1af6bfe4b3d60f2a09fb8f5319dee5a7a1" kindref="member">fragment</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__lwm2m__carrier__os_ga1050626db09df1d8885dfb5e924bc234_1ga1050626db09df1d8885dfb5e924bc234" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_SEC_TAG_NONE<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structlwm2m__os__download__cfg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref><sp/>{</highlight></codeline>
<codeline lineno="143" refid="structlwm2m__os__download__cfg_a755ea9bd366e3d771db8e66b584ac903_1a755ea9bd366e3d771db8e66b584ac903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg_a755ea9bd366e3d771db8e66b584ac903_1a755ea9bd366e3d771db8e66b584ac903" kindref="member">sec_tag</ref>;</highlight></codeline>
<codeline lineno="145" refid="structlwm2m__os__download__cfg_aa50e8dd59547dc8baff44b7265431f97_1aa50e8dd59547dc8baff44b7265431f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg_aa50e8dd59547dc8baff44b7265431f97_1aa50e8dd59547dc8baff44b7265431f97" kindref="member">pdn_id</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__evt" kindref="compound">lwm2m_os_download_evt</ref><sp/>*event);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref><sp/>{</highlight></codeline>
<codeline lineno="155" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" kindref="member">LWM2M_OS_PDN_FAM_IPV4</ref>,</highlight></codeline>
<codeline lineno="156" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" kindref="member">LWM2M_OS_PDN_FAM_IPV6</ref>,</highlight></codeline>
<codeline lineno="157" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" kindref="member">LWM2M_OS_PDN_FAM_IPV4V6</ref>,</highlight></codeline>
<codeline lineno="158" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa6589570972507d1cfe75a767293884a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa6589570972507d1cfe75a767293884a5" kindref="member">LWM2M_OS_PDN_FAM_NONIP</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" kindref="member">lwm2m_os_pdn_event</ref><sp/>{</highlight></codeline>
<codeline lineno="163" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" kindref="member">LWM2M_OS_PDN_EVENT_CNEC_ESM</ref>,</highlight></codeline>
<codeline lineno="164" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" kindref="member">LWM2M_OS_PDN_EVENT_ACTIVATED</ref>,</highlight></codeline>
<codeline lineno="165" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" kindref="member">LWM2M_OS_PDN_EVENT_DEACTIVATED</ref>,</highlight></codeline>
<codeline lineno="166" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" kindref="member">LWM2M_OS_PDN_EVENT_IPV6_UP</ref>,</highlight></codeline>
<codeline lineno="167" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" kindref="member">LWM2M_OS_PDN_EVENT_IPV6_DOWN</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" kindref="member">lwm2m_os_pdn_event</ref><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reason);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" kindref="member">lwm2m_os_pdn_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" kindref="member">lwm2m_os_pdn_ctx_create</ref>(uint8_t<sp/>*cid,<sp/><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" kindref="member">lwm2m_os_pdn_ctx_configure</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*apn,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref><sp/>family);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" kindref="member">lwm2m_os_pdn_ctx_destroy</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__lwm2m__carrier__os_gafae9dcfc60a7e3d1389d4c90eab34aa4_1gafae9dcfc60a7e3d1389d4c90eab34aa4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafae9dcfc60a7e3d1389d4c90eab34aa4_1gafae9dcfc60a7e3d1389d4c90eab34aa4" kindref="member">lwm2m_os_pdn_activate</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*esm,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref><sp/>*family);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" kindref="member">lwm2m_os_pdn_deactivate</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" kindref="member">lwm2m_os_pdn_id_get</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" kindref="member">lwm2m_os_pdn_default_apn_get</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" kindref="member">lwm2m_os_pdn_default_callback_set</ref>(<ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" kindref="member">lwm2m_os_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__lwm2m__carrier__os_ga25c176d6c261191289acd565533738c9_1ga25c176d6c261191289acd565533738c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__lwm2m__carrier__os_ga25c176d6c261191289acd565533738c9_1ga25c176d6c261191289acd565533738c9" kindref="member">lwm2m_os_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" kindref="member">lwm2m_os_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" kindref="member">lwm2m_os_sem_init</ref>(<ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref><sp/>**sem,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_count,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" kindref="member">lwm2m_os_sem_take</ref>(<ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" kindref="member">lwm2m_os_sem_give</ref>(<ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" kindref="member">lwm2m_os_sem_reset</ref>(<ref refid="group__lwm2m__carrier__os_ga3c754c608d94f5669befc58d2fa134a6_1ga3c754c608d94f5669befc58d2fa134a6" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" kindref="member">lwm2m_os_uptime_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" kindref="member">lwm2m_os_uptime_delta</ref>(int64_t<sp/>*ref);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" kindref="member">lwm2m_os_sleep</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" kindref="member">lwm2m_os_sys_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" kindref="member">lwm2m_os_rand_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" kindref="member">lwm2m_os_storage_delete</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" kindref="member">lwm2m_os_storage_read</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" kindref="member">lwm2m_os_storage_write</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="group__lwm2m__carrier__os_ga5d77e8f44fa245f4ce982224a0616b0e_1ga5d77e8f44fa245f4ce982224a0616b0e" refkind="member"><highlight class="normal"><ref refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" kindref="member">lwm2m_os_work_q_t</ref><sp/>*<ref refid="group__lwm2m__carrier__os_ga5d77e8f44fa245f4ce982224a0616b0e_1ga5d77e8f44fa245f4ce982224a0616b0e" kindref="member">lwm2m_os_work_q_start</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group__lwm2m__carrier__os_gac9eca883d3ccb0163b406350280f0125_1gac9eca883d3ccb0163b406350280f0125" refkind="member"><highlight class="normal"><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*<ref refid="group__lwm2m__carrier__os_gac9eca883d3ccb0163b406350280f0125_1gac9eca883d3ccb0163b406350280f0125" kindref="member">lwm2m_os_timer_get</ref>(<ref refid="group__lwm2m__carrier__os_ga39c26d1f3a5e49c360f5223e3fed67cb_1ga39c26d1f3a5e49c360f5223e3fed67cb" kindref="member">lwm2m_os_timer_handler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" kindref="member">lwm2m_os_timer_release</ref>(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="group__lwm2m__carrier__os_ga2a5362bcc8c3c0eadc0616f354e3f3cd_1ga2a5362bcc8c3c0eadc0616f354e3f3cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga2a5362bcc8c3c0eadc0616f354e3f3cd_1ga2a5362bcc8c3c0eadc0616f354e3f3cd" kindref="member">lwm2m_os_timer_start</ref>(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer,<sp/>int64_t<sp/>delay);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group__lwm2m__carrier__os_ga2edb1b5749f11f9a3a24c2be19f5a931_1ga2edb1b5749f11f9a3a24c2be19f5a931" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga2edb1b5749f11f9a3a24c2be19f5a931_1ga2edb1b5749f11f9a3a24c2be19f5a931" kindref="member">lwm2m_os_timer_start_on_q</ref>(<ref refid="group__lwm2m__carrier__os_ga121d17cb0b61370be82654d8e63c849e_1ga121d17cb0b61370be82654d8e63c849e" kindref="member">lwm2m_os_work_q_t</ref><sp/>*work_q,<sp/><ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer,<sp/>int64_t<sp/>delay);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" kindref="member">lwm2m_os_timer_cancel</ref>(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" kindref="member">lwm2m_os_timer_remaining</ref>(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" kindref="member">lwm2m_os_timer_is_pending</ref>(<ref refid="group__lwm2m__carrier__os_gab9c6087bfba0631b601efcb46ca6f53d_1gab9c6087bfba0631b601efcb46ca6f53d" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="group__lwm2m__carrier__os_ga001dc55399887e4bda6cf0a31d70d2df_1ga001dc55399887e4bda6cf0a31d70d2df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga001dc55399887e4bda6cf0a31d70d2df_1ga001dc55399887e4bda6cf0a31d70d2df" kindref="member">lwm2m_os_thread_start</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="group__lwm2m__carrier__os_ga367a3f87cdfceaf36759f2d63b08cbad_1ga367a3f87cdfceaf36759f2d63b08cbad" kindref="member">lwm2m_os_thread_entry_t</ref><sp/>entry,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" kindref="member">lwm2m_os_nrf_modem_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" kindref="member">lwm2m_os_nrf_modem_shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="group__lwm2m__carrier__os_ga24ed1b56060355cb928b6957c89584ec_1ga24ed1b56060355cb928b6957c89584ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga24ed1b56060355cb928b6957c89584ec_1ga24ed1b56060355cb928b6957c89584ec" kindref="member">lwm2m_os_at_init</ref>(<ref refid="group__lwm2m__carrier__os_ga38fb40d133bc63c2d572edcadcfcb216_1ga38fb40d133bc63c2d572edcadcfcb216" kindref="member">lwm2m_os_at_handler_callback_t</ref><sp/>callback);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" kindref="member">lwm2m_os_sms_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" kindref="member">lwm2m_os_sms_uninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" kindref="member">lwm2m_os_sms_client_register</ref>(<ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref><sp/>lib_callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" kindref="member">lwm2m_os_sms_client_deregister</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handle);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" kindref="member">lwm2m_os_download_connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" kindref="member">lwm2m_os_download_disconnect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" kindref="member">lwm2m_os_download_init</ref>(<ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref><sp/>lib_callback);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" kindref="member">lwm2m_os_download_start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>from);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" kindref="member">lwm2m_os_download_file_size_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="group__lwm2m__carrier__os_gaff6e6936bc7c9db05c071b718fbee419_1gaff6e6936bc7c9db05c071b718fbee419" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaff6e6936bc7c9db05c071b718fbee419_1gaff6e6936bc7c9db05c071b718fbee419" kindref="member">lwm2m_os_lte_modes_get</ref>(int32_t<sp/>*modes);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="group__lwm2m__carrier__os_ga4da798a787782e0711a87bcf26b2eac4_1ga4da798a787782e0711a87bcf26b2eac4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga4da798a787782e0711a87bcf26b2eac4_1ga4da798a787782e0711a87bcf26b2eac4" kindref="member">lwm2m_os_lte_mode_request</ref>(int32_t<sp/>prefer);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="group__lwm2m__carrier__os_ga7cf2c532fd4cfc3c595ae5e7e69eb6e0_1ga7cf2c532fd4cfc3c595ae5e7e69eb6e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga7cf2c532fd4cfc3c595ae5e7e69eb6e0_1ga7cf2c532fd4cfc3c595ae5e7e69eb6e0" kindref="member">lwm2m_os_nrf_errno</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="group__lwm2m__carrier__os_gab26a02eda0117f580dc83bac18a6b9f0_1gab26a02eda0117f580dc83bac18a6b9f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab26a02eda0117f580dc83bac18a6b9f0_1gab26a02eda0117f580dc83bac18a6b9f0" kindref="member">lwm2m_os_app_fota_start</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_file_size);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="group__lwm2m__carrier__os_ga9ad1dfe156cd18ee3f74cbdca0743aa9_1ga9ad1dfe156cd18ee3f74cbdca0743aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga9ad1dfe156cd18ee3f74cbdca0743aa9_1ga9ad1dfe156cd18ee3f74cbdca0743aa9" kindref="member">lwm2m_os_app_fota_fragment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/>uint16_t<sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>,<sp/>uint16_t<sp/>offset,<sp/>uint32_t<sp/>crc32);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="group__lwm2m__carrier__os_ga2a8f2f19b439fd55008074518b439de4_1ga2a8f2f19b439fd55008074518b439de4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga2a8f2f19b439fd55008074518b439de4_1ga2a8f2f19b439fd55008074518b439de4" kindref="member">lwm2m_os_app_fota_finish</ref>(uint32_t<sp/>crc32);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="group__lwm2m__carrier__os_gaceb1fec946cf31c2f8c8379071dbdeb1_1gaceb1fec946cf31c2f8c8379071dbdeb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaceb1fec946cf31c2f8c8379071dbdeb1_1gaceb1fec946cf31c2f8c8379071dbdeb1" kindref="member">lwm2m_os_app_fota_abort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWM2M_OS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h"/>
  </compounddef>
</doxygen>
