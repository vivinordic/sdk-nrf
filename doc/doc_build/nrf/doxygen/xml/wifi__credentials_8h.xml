<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="wifi__credentials_8h" kind="file" language="C++">
    <compoundname>wifi_credentials.h</compoundname>
    <includes local="no">zephyr/types.h</includes>
    <includes local="no">zephyr/net/wifi.h</includes>
    <includes local="no">zephyr/kernel.h</includes>
    <incdepgraph>
      <node id="3">
        <label>zephyr/net/wifi.h</label>
      </node>
      <node id="1">
        <label>include/net/wifi_credentials.h</label>
        <link refid="wifi__credentials_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
      </node>
      <node id="4">
        <label>zephyr/kernel.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwifi__credentials__header" prot="public">wifi_credentials_header</innerclass>
    <innerclass refid="structwifi__credentials__personal" prot="public">wifi_credentials_personal</innerclass>
    <innerclass refid="structwifi__credentials__enterprise" prot="public">wifi_credentials_enterprise</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wifi__credentials_ga656bc737cf1bceffc1cf85d06419cec9_1ga656bc737cf1bceffc1cf85d06419cec9" prot="public" static="no">
        <name>WIFI_CREDENTIALS_FLAG_BSSID</name>
        <initializer>BIT(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="25" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wifi__credentials_ga34c10ac642daf7ee05c1b940c01f8932_1ga34c10ac642daf7ee05c1b940c01f8932" prot="public" static="no">
        <name>WIFI_CREDENTIALS_FLAG_FAVORITE</name>
        <initializer>BIT(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="27" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wifi__credentials_ga179a3abf6a1a44b0bee0d2a9736ece0c_1ga179a3abf6a1a44b0bee0d2a9736ece0c" prot="public" static="no">
        <name>WIFI_CREDENTIALS_FLAG_2_4GHz</name>
        <initializer>BIT(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="29" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wifi__credentials_ga22d0707e4e4d2fd082563f7c1ebf5308_1ga22d0707e4e4d2fd082563f7c1ebf5308" prot="public" static="no">
        <name>WIFI_CREDENTIALS_FLAG_5GHz</name>
        <initializer>BIT(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="31" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wifi__credentials_gaf9d3ffe6c9120a7fbc248c3ee66f42fa_1gaf9d3ffe6c9120a7fbc248c3ee66f42fa" prot="public" static="no">
        <name>WIFI_CREDENTIALS_MAX_PASSWORD_LEN</name>
        <initializer>	MAX(WIFI_PSK_MAX_LEN, CONFIG_WIFI_CREDENTIALS_SAE_PASSWORD_LENGTH)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="34" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__wifi__credentials_ga30c9333f10e8e8d03f268fb5c9a69562_1ga30c9333f10e8e8d03f268fb5c9a69562" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wifi_credentials_ssid_cb) (void *cb_arg, const char *ssid, size_t ssid_len)</definition>
        <argsstring>)(void *cb_arg, const char *ssid, size_t ssid_len)</argsstring>
        <name>wifi_credentials_ssid_cb</name>
        <briefdescription>
<para>Callback type for wifi_credentials_for_each_ssid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments for the callback function. Appropriate cb_arg is transferred by wifi_credentials_for_each_ssid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="185" column="9" bodyfile="include/net/wifi_credentials.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wifi__credentials_ga4de48b2d5dd676d9b4da1e93ec1a800b_1ga4de48b2d5dd676d9b4da1e93ec1a800b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wifi_credentials_get_by_ssid_personal</definition>
        <argsstring>(const char *ssid, size_t ssid_len, enum wifi_security_type *type, uint8_t *bssid_buf, size_t bssid_buf_len, char *password_buf, size_t password_buf_len, size_t *password_len, uint32_t *flags)</argsstring>
        <name>wifi_credentials_get_by_ssid_personal</name>
        <param>
          <type>const char *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ssid_len</declname>
        </param>
        <param>
          <type>enum wifi_security_type *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bssid_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bssid_buf_len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>password_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>password_buf_len</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>password_len</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Get credentials for given SSID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID to look for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Wi-Fi security type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bssid_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store BSSID if it was fixed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bssid_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of bssid_buf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">password_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store password </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">password_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password_buf </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">password_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Success. </para>
</simplesect>
<simplesect kind="return"><para>-ENOENT No network with this SSID was found. </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL A required buffer was NULL or invalid SSID length. </para>
</simplesect>
<simplesect kind="return"><para>-EPROTO The network with this SSID is not a personal network. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="100" column="5" declfile="include/net/wifi_credentials.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__wifi__credentials_ga2b4ea2c428c80b7354319aa5bc6e787d_1ga2b4ea2c428c80b7354319aa5bc6e787d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wifi_credentials_set_personal</definition>
        <argsstring>(const char *ssid, size_t ssid_len, enum wifi_security_type type, const uint8_t *bssid, size_t bssid_len, const char *password, size_t password_len, uint32_t flags)</argsstring>
        <name>wifi_credentials_set_personal</name>
        <param>
          <type>const char *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ssid_len</declname>
        </param>
        <param>
          <type>enum wifi_security_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>bssid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bssid_len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>password_len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set credentials for given SSID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID to look for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Wi-Fi security type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bssid</parametername>
</parameternamelist>
<parameterdescription>
<para>BSSID (may be NULL) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of BSSID buffer (either 0 or WIFI_MAC_ADDR_LEN) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">password</parametername>
</parameternamelist>
<parameterdescription>
<para>password </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">password_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Success. Credentials are stored in persistent storage. </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL A required buffer was NULL or security type is not supported. </para>
</simplesect>
<simplesect kind="return"><para>-ENOTSUP Security type is not supported. </para>
</simplesect>
<simplesect kind="return"><para>-ENOBUFS All slots are already taken. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="129" column="5" declfile="include/net/wifi_credentials.h" declline="129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__wifi__credentials_ga3d83001e713206ec07f94996137537d5_1ga3d83001e713206ec07f94996137537d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wifi_credentials_get_by_ssid_personal_struct</definition>
        <argsstring>(const char *ssid, size_t ssid_len, struct wifi_credentials_personal *buf)</argsstring>
        <name>wifi_credentials_get_by_ssid_personal_struct</name>
        <param>
          <type>const char *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ssid_len</declname>
        </param>
        <param>
          <type>struct <ref refid="structwifi__credentials__personal" kindref="compound">wifi_credentials_personal</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Get credentials for given SSID by struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID to look for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials Pointer to struct where credentials are stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Success. </para>
</simplesect>
<simplesect kind="return"><para>-ENOENT No network with this SSID was found. </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL A required buffer was NULL or too small. </para>
</simplesect>
<simplesect kind="return"><para>-EPROTO The network with this SSID is not a personal network. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="152" column="5" declfile="include/net/wifi_credentials.h" declline="152" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__wifi__credentials_ga1b5525c7a6a7ca312236a2c674d94055_1ga1b5525c7a6a7ca312236a2c674d94055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wifi_credentials_set_personal_struct</definition>
        <argsstring>(const struct wifi_credentials_personal *creds)</argsstring>
        <name>wifi_credentials_set_personal_struct</name>
        <param>
          <type>const struct <ref refid="structwifi__credentials__personal" kindref="compound">wifi_credentials_personal</ref> *</type>
          <declname>creds</declname>
        </param>
        <briefdescription>
<para>Set credentials for given SSID by struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">creds</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials Pointer to struct from which credentials are loaded</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Success. </para>
</simplesect>
<simplesect kind="return"><para>-ENOENT No network with this SSID was found. </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL A required buffer was NULL or incorrect size. </para>
</simplesect>
<simplesect kind="return"><para>-ENOBUFS All slots are already taken. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="165" column="5" declfile="include/net/wifi_credentials.h" declline="165" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__wifi__credentials_ga644d29db8091512a977f8e27b245975e_1ga644d29db8091512a977f8e27b245975e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wifi_credentials_delete_by_ssid</definition>
        <argsstring>(const char *ssid, size_t ssid_len)</argsstring>
        <name>wifi_credentials_delete_by_ssid</name>
        <param>
          <type>const char *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ssid_len</declname>
        </param>
        <briefdescription>
<para>Delete credentials for given SSID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID to look for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-ENOENT if No network with this SSID was found. </para>
</simplesect>
<simplesect kind="return"><para>0 on success, otherwise a negative error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="176" column="5" declfile="include/net/wifi_credentials.h" declline="176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__wifi__credentials_ga3a5b20d07afc52cc452a9c55998ebcf7_1ga3a5b20d07afc52cc452a9c55998ebcf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wifi_credentials_for_each_ssid</definition>
        <argsstring>(wifi_credentials_ssid_cb cb, void *cb_arg)</argsstring>
        <name>wifi_credentials_for_each_ssid</name>
        <param>
          <type><ref refid="group__wifi__credentials_ga30c9333f10e8e8d03f268fb5c9a69562_1ga30c9333f10e8e8d03f268fb5c9a69562" kindref="member">wifi_credentials_ssid_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cb_arg</declname>
        </param>
        <briefdescription>
<para>Call callback for each registered SSID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>argument for callback function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/wifi_credentials.h" line="193" column="6" declfile="include/net/wifi_credentials.h" declline="193" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIFI_CREDENTIALS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/net/wifi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>entry<sp/>contains<sp/>a<sp/>BSSID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__wifi__credentials_ga656bc737cf1bceffc1cf85d06419cec9_1ga656bc737cf1bceffc1cf85d06419cec9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_FLAG_BSSID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>entry<sp/>is<sp/>to<sp/>be<sp/>preferred<sp/>over<sp/>others<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__wifi__credentials_ga34c10ac642daf7ee05c1b940c01f8932_1ga34c10ac642daf7ee05c1b940c01f8932" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_FLAG_FAVORITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>entry<sp/>can<sp/>use<sp/>the<sp/>2.4<sp/>GHz<sp/>band<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__wifi__credentials_ga179a3abf6a1a44b0bee0d2a9736ece0c_1ga179a3abf6a1a44b0bee0d2a9736ece0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_FLAG_2_4GHz<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>entry<sp/>can<sp/>use<sp/>the<sp/>5<sp/>GHz<sp/>band<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__wifi__credentials_ga22d0707e4e4d2fd082563f7c1ebf5308_1ga22d0707e4e4d2fd082563f7c1ebf5308" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_FLAG_5GHz<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__wifi__credentials_gaf9d3ffe6c9120a7fbc248c3ee66f42fa_1gaf9d3ffe6c9120a7fbc248c3ee66f42fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFI_CREDENTIALS_MAX_PASSWORD_LEN\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX(WIFI_PSK_MAX_LEN,<sp/>CONFIG_WIFI_CREDENTIALS_SAE_PASSWORD_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structwifi__credentials__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__credentials__header" kindref="compound">wifi_credentials_header</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wifi_security_type<sp/><ref refid="structwifi__credentials__header_a5b873555b2154e22367644c2805c0494_1a5b873555b2154e22367644c2805c0494" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="47" refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>[WIFI_SSID_MAX_LEN];</highlight></codeline>
<codeline lineno="48" refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>;</highlight></codeline>
<codeline lineno="49" refid="structwifi__credentials__header_a28d311d5535c7569bda860dca7fd08f6_1a28d311d5535c7569bda860dca7fd08f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structwifi__credentials__header_a28d311d5535c7569bda860dca7fd08f6_1a28d311d5535c7569bda860dca7fd08f6" kindref="member">bssid</ref>[WIFI_MAC_ADDR_LEN];</highlight></codeline>
<codeline lineno="50" refid="structwifi__credentials__header_a59b8b99ad309c0cc2cb6c5438554fefe_1a59b8b99ad309c0cc2cb6c5438554fefe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwifi__credentials__header_a59b8b99ad309c0cc2cb6c5438554fefe_1a59b8b99ad309c0cc2cb6c5438554fefe" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structwifi__credentials__personal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__credentials__personal" kindref="compound">wifi_credentials_personal</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__credentials__header" kindref="compound">wifi_credentials_header</ref><sp/><ref refid="structwifi__credentials__personal_a40f13f70ee0dd797d31b643cc754440c_1a40f13f70ee0dd797d31b643cc754440c" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="63" refid="structwifi__credentials__personal_a4a8201ecec087203b69ade5d7547538c_1a4a8201ecec087203b69ade5d7547538c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__personal_a4a8201ecec087203b69ade5d7547538c_1a4a8201ecec087203b69ade5d7547538c" kindref="member">password</ref>[<ref refid="group__wifi__credentials_gaf9d3ffe6c9120a7fbc248c3ee66f42fa_1gaf9d3ffe6c9120a7fbc248c3ee66f42fa" kindref="member">WIFI_CREDENTIALS_MAX_PASSWORD_LEN</ref>];</highlight></codeline>
<codeline lineno="64" refid="structwifi__credentials__enterprise_a58ba430cb51a80009639263ebe412895_1a58ba430cb51a80009639263ebe412895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__personal_a627104585a2f6d58e2f899563c2993ad_1a627104585a2f6d58e2f899563c2993ad" kindref="member">password_len</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structwifi__credentials__enterprise" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__credentials__enterprise" kindref="compound">wifi_credentials_enterprise</ref><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwifi__credentials__header" kindref="compound">wifi_credentials_header</ref><sp/><ref refid="structwifi__credentials__enterprise_a58ba430cb51a80009639263ebe412895_1a58ba430cb51a80009639263ebe412895" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="73" refid="structwifi__credentials__enterprise_aadd1fe1f5d3f3983a5cd82d5d33a4ff4_1aadd1fe1f5d3f3983a5cd82d5d33a4ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_aadd1fe1f5d3f3983a5cd82d5d33a4ff4_1aadd1fe1f5d3f3983a5cd82d5d33a4ff4" kindref="member">identity_len</ref>;</highlight></codeline>
<codeline lineno="74" refid="structwifi__credentials__enterprise_a8871721054c824b056fcbb9492bf96aa_1a8871721054c824b056fcbb9492bf96aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_a8871721054c824b056fcbb9492bf96aa_1a8871721054c824b056fcbb9492bf96aa" kindref="member">anonymous_identity_len</ref>;</highlight></codeline>
<codeline lineno="75" refid="structwifi__credentials__enterprise_aeb480da7b9b4c7e0f4ab3b86977032f9_1aeb480da7b9b4c7e0f4ab3b86977032f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_aeb480da7b9b4c7e0f4ab3b86977032f9_1aeb480da7b9b4c7e0f4ab3b86977032f9" kindref="member">password_len</ref>;</highlight></codeline>
<codeline lineno="76" refid="structwifi__credentials__enterprise_a74d046dbfdc2f1208848c564c8d98843_1a74d046dbfdc2f1208848c564c8d98843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_a74d046dbfdc2f1208848c564c8d98843_1a74d046dbfdc2f1208848c564c8d98843" kindref="member">ca_cert_len</ref>;</highlight></codeline>
<codeline lineno="77" refid="structwifi__credentials__enterprise_a33525f5af6db7813b8f19554fd5c04f0_1a33525f5af6db7813b8f19554fd5c04f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_a33525f5af6db7813b8f19554fd5c04f0_1a33525f5af6db7813b8f19554fd5c04f0" kindref="member">client_cert_len</ref>;</highlight></codeline>
<codeline lineno="78" refid="structwifi__credentials__enterprise_a757f7cfbaf1874be1300f68bf42ebc9d_1a757f7cfbaf1874be1300f68bf42ebc9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_a757f7cfbaf1874be1300f68bf42ebc9d_1a757f7cfbaf1874be1300f68bf42ebc9d" kindref="member">private_key_len</ref>;</highlight></codeline>
<codeline lineno="79" refid="structwifi__credentials__enterprise_ab532c721b2e10c44bf660d67ca63f994_1ab532c721b2e10c44bf660d67ca63f994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__enterprise_ab532c721b2e10c44bf660d67ca63f994_1ab532c721b2e10c44bf660d67ca63f994" kindref="member">private_key_pw_len</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__wifi__credentials_ga4de48b2d5dd676d9b4da1e93ec1a800b_1ga4de48b2d5dd676d9b4da1e93ec1a800b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga4de48b2d5dd676d9b4da1e93ec1a800b_1ga4de48b2d5dd676d9b4da1e93ec1a800b" kindref="member">wifi_credentials_get_by_ssid_personal</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wifi_security_type<sp/>*<ref refid="structwifi__credentials__header_a5b873555b2154e22367644c2805c0494_1a5b873555b2154e22367644c2805c0494" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bssid_buf,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bssid_buf_len,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password_buf,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>password_buf_len,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*password_len,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<ref refid="structwifi__credentials__header_a59b8b99ad309c0cc2cb6c5438554fefe_1a59b8b99ad309c0cc2cb6c5438554fefe" kindref="member">flags</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group__wifi__credentials_ga2b4ea2c428c80b7354319aa5bc6e787d_1ga2b4ea2c428c80b7354319aa5bc6e787d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga2b4ea2c428c80b7354319aa5bc6e787d_1ga2b4ea2c428c80b7354319aa5bc6e787d" kindref="member">wifi_credentials_set_personal</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>wifi_security_type<sp/><ref refid="structwifi__credentials__header_a5b873555b2154e22367644c2805c0494_1a5b873555b2154e22367644c2805c0494" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="structwifi__credentials__header_a28d311d5535c7569bda860dca7fd08f6_1a28d311d5535c7569bda860dca7fd08f6" kindref="member">bssid</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bssid_len,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>password_len,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structwifi__credentials__header_a59b8b99ad309c0cc2cb6c5438554fefe_1a59b8b99ad309c0cc2cb6c5438554fefe" kindref="member">flags</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__wifi__credentials_ga3d83001e713206ec07f94996137537d5_1ga3d83001e713206ec07f94996137537d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga3d83001e713206ec07f94996137537d5_1ga3d83001e713206ec07f94996137537d5" kindref="member">wifi_credentials_get_by_ssid_personal_struct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__personal" kindref="compound">wifi_credentials_personal</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__wifi__credentials_ga1b5525c7a6a7ca312236a2c674d94055_1ga1b5525c7a6a7ca312236a2c674d94055" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga1b5525c7a6a7ca312236a2c674d94055_1ga1b5525c7a6a7ca312236a2c674d94055" kindref="member">wifi_credentials_set_personal_struct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__personal" kindref="compound">wifi_credentials_personal</ref><sp/>*creds);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group__wifi__credentials_ga644d29db8091512a977f8e27b245975e_1ga644d29db8091512a977f8e27b245975e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga644d29db8091512a977f8e27b245975e_1ga644d29db8091512a977f8e27b245975e" kindref="member">wifi_credentials_delete_by_ssid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__wifi__credentials_ga30c9333f10e8e8d03f268fb5c9a69562_1ga30c9333f10e8e8d03f268fb5c9a69562" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__wifi__credentials_ga30c9333f10e8e8d03f268fb5c9a69562_1ga30c9333f10e8e8d03f268fb5c9a69562" kindref="member">wifi_credentials_ssid_cb</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structwifi__credentials__header_a52cd2e481d3ebf141c671e9a67f5a224_1a52cd2e481d3ebf141c671e9a67f5a224" kindref="member">ssid</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwifi__credentials__header_ab5bfa4ac972a8ad1ba4b395fad48a923_1ab5bfa4ac972a8ad1ba4b395fad48a923" kindref="member">ssid_len</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structwifi__credentials__header_a5b873555b2154e22367644c2805c0494_1a5b873555b2154e22367644c2805c0494" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wifi__credentials_ga3a5b20d07afc52cc452a9c55998ebcf7_1ga3a5b20d07afc52cc452a9c55998ebcf7" kindref="member">wifi_credentials_for_each_ssid</ref>(<ref refid="group__wifi__credentials_ga30c9333f10e8e8d03f268fb5c9a69562_1ga30c9333f10e8e8d03f268fb5c9a69562" kindref="member">wifi_credentials_ssid_cb</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cb_arg);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>WIFI_CREDENTIALS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/net/wifi_credentials.h"/>
  </compounddef>
</doxygen>
