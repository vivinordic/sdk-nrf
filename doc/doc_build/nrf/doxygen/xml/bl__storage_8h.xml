<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bl__storage_8h" kind="file" language="C++">
    <compoundname>bl_storage.h</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">zephyr/types.h</includes>
    <includes local="no">drivers/nrfx_common.h</includes>
    <includes local="no">nrfx_nvmc.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">pm_config.h</includes>
    <incdepgraph>
      <node id="6">
        <label>errno.h</label>
      </node>
      <node id="4">
        <label>drivers/nrfx_common.h</label>
      </node>
      <node id="5">
        <label>nrfx_nvmc.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>pm_config.h</label>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
      </node>
      <node id="1">
        <label>include/bl_storage.h</label>
        <link refid="bl__storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structlife__cycle__state__data" prot="public">life_cycle_state_data</innerclass>
    <innerclass refid="structbl__storage__data" prot="public">bl_storage_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bl__storage_8h_af37c2c280f1acebb2ee67f2f7fac216b_1af37c2c280f1acebb2ee67f2f7fac216b" prot="public" static="no">
        <name>PM_PROVISION_ADDRESS</name>
        <initializer>(&amp;NRF_UICR-&gt;OTP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="21" column="9" bodyfile="include/bl_storage.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_a34ef2e6892c01fa1d2a82571c2627db9_1a34ef2e6892c01fa1d2a82571c2627db9" prot="public" static="no">
        <name>EHASHFF</name>
        <initializer>113 /* A hash contains too many 0xFs. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="29" column="9" bodyfile="include/bl_storage.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_a899d7f29da6a5c9895a26036c946fab4_1a899d7f29da6a5c9895a26036c946fab4" prot="public" static="no">
        <name>EREADLCS</name>
        <initializer>114 /* LCS field of OTP is in an invalid <ref refid="vars__internal_8h_a26b2a0469c474a0b173b3791e5c4eb80_1a26b2a0469c474a0b173b3791e5c4eb80" kindref="member">state</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="30" column="9" bodyfile="include/bl_storage.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_ac79f90b90fcc6bd1512046af6a3aa5e9_1ac79f90b90fcc6bd1512046af6a3aa5e9" prot="public" static="no">
        <name>EINVALIDLCS</name>
        <initializer>115 /* Invalid LCS*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="31" column="9" bodyfile="include/bl_storage.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_a114de6618ad0b1be01188a2b8b5010f7_1a114de6618ad0b1be01188a2b8b5010f7" prot="public" static="no">
        <name>SB_PUBLIC_KEY_HASH_LEN</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="34" column="9" bodyfile="include/bl_storage.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_aff4b1ea621ccb09e07de09d93c93d971_1aff4b1ea621ccb09e07de09d93c93d971" prot="public" static="no">
        <name>BL_MONOTONIC_COUNTERS_DESC_NSIB</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="37" column="9" bodyfile="include/bl_storage.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_a2754ccd2791908fa9d6c0b7878396791_1a2754ccd2791908fa9d6c0b7878396791" prot="public" static="no">
        <name>BL_MONOTONIC_COUNTERS_DESC_MCUBOOT_ID0</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="43" column="9" bodyfile="include/bl_storage.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" prot="public" static="no">
        <name>BL_STORAGE</name>
        <initializer>((const volatile struct <ref refid="structbl__storage__data" kindref="compound">bl_storage_data</ref> *)(<ref refid="bl__storage_8h_af37c2c280f1acebb2ee67f2f7fac216b_1af37c2c280f1acebb2ee67f2f7fac216b" kindref="member">PM_PROVISION_ADDRESS</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="84" column="9" bodyfile="include/bl_storage.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bl__storage_8h_af49eb9256122fffe1ad43d995ec7cac8_1af49eb9256122fffe1ad43d995ec7cac8" prot="public" static="no">
        <name>BL_STORAGE_IMPLEMENTATION_ID_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="87" column="9" bodyfile="include/bl_storage.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" prot="public" static="no">
        <name>STATE_ENTERED</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="238" column="9" bodyfile="include/bl_storage.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" prot="public" static="no">
        <name>STATE_NOT_ENTERED</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="239" column="9" bodyfile="include/bl_storage.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" prot="public" static="no" strong="no">
        <type></type>
        <name>lcs</name>
        <enumvalue id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda43a4f5082ffa684b29a98f09b13c4bb1" prot="public">
          <name>BL_STORAGE_LCS_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda58c9c02d7fd57b482f15c80687d1d3cb" prot="public">
          <name>BL_STORAGE_LCS_ASSEMBLY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" prot="public">
          <name>BL_STORAGE_LCS_PROVISIONING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" prot="public">
          <name>BL_STORAGE_LCS_SECURED</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda055815a9342f0ac679391c8be61dad16" prot="public">
          <name>BL_STORAGE_LCS_DECOMMISSIONED</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The PSA life cycle states a device can be in. </para>
        </briefdescription>
        <detaileddescription>
<para>The LCS can be only transitioned in the order they are defined here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="191" column="1" bodyfile="include/bl_storage.h" bodystart="191" bodyend="197"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bl__storage_ga588b9be770d1f9f90e8d97ace8aefb35_1ga588b9be770d1f9f90e8d97ace8aefb35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t s0_address_read</definition>
        <argsstring>(void)</argsstring>
        <name>s0_address_read</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading address of slot 0. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Address of slot 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="98" column="10" declfile="include/bl_storage.h" declline="98" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gac1b4e16ed57411c4dcf6271c4f763b9b_1gac1b4e16ed57411c4dcf6271c4f763b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t s1_address_read</definition>
        <argsstring>(void)</argsstring>
        <name>s1_address_read</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading address of slot 1. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Address of slot 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="105" column="10" declfile="include/bl_storage.h" declline="105" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_ga5f01045a46e0cd6015081a1ecf33597d_1ga5f01045a46e0cd6015081a1ecf33597d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t num_public_keys_read</definition>
        <argsstring>(void)</argsstring>
        <name>num_public_keys_read</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading number of public key data slots. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of public key data slots. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="112" column="10" declfile="include/bl_storage.h" declline="112" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_ga398093b212163efead6fa1eca64cb943_1ga398093b212163efead6fa1eca64cb943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verify_public_keys</definition>
        <argsstring>(void)</argsstring>
        <name>verify_public_keys</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading number of public key data slots. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if all keys are ok. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EHASHFF</parametername>
</parameternamelist>
<parameterdescription>
<para>if one or more keys contains an aligned 0xFFFF. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="120" column="5" declfile="include/bl_storage.h" declline="120" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gab4f1cd8d93f5c2910f1ce01b7d8eb300_1gab4f1cd8d93f5c2910f1ce01b7d8eb300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int public_key_data_read</definition>
        <argsstring>(uint32_t key_idx, uint8_t *p_buf)</argsstring>
        <name>public_key_data_read</name>
        <param>
          <type>uint32_t</type>
          <declname>key_idx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buf</declname>
        </param>
        <briefdescription>
<para>Function for reading public key hashes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where the hash will be written. The buffer must be at least SB_PUBLIC_KEY_HASH_LEN bytes large. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of successfully written bytes to p_buf. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Key has been invalidated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>key_idx is too large. There is no key with that index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="132" column="5" declfile="include/bl_storage.h" declline="132" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_ga93cdbed56da0e3cd0ffa705715863aad_1ga93cdbed56da0e3cd0ffa705715863aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void invalidate_public_key</definition>
        <argsstring>(uint32_t key_idx)</argsstring>
        <name>invalidate_public_key</name>
        <param>
          <type>uint32_t</type>
          <declname>key_idx</declname>
        </param>
        <briefdescription>
<para>Function for invalidating a public key. </para>
        </briefdescription>
        <detaileddescription>
<para>The public key will no longer be returned by <ref refid="group__bl__storage_gab4f1cd8d93f5c2910f1ce01b7d8eb300_1gab4f1cd8d93f5c2910f1ce01b7d8eb300" kindref="member">public_key_data_read</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="141" column="6" declfile="include/bl_storage.h" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gaa7ec999e86dc9211a52f01b2a8ccfa93_1gaa7ec999e86dc9211a52f01b2a8ccfa93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int num_monotonic_counter_slots</definition>
        <argsstring>(uint16_t counter_desc, uint16_t *counter_slots)</argsstring>
        <name>num_monotonic_counter_slots</name>
        <param>
          <type>uint16_t</type>
          <declname>counter_desc</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>counter_slots</declname>
        </param>
        <briefdescription>
<para>Get the number of monotonic counter slots. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">counter_slots</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of slots occupied by the counter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Cannot find counters with description <computeroutput>counter_desc</computeroutput> or the pointer to <computeroutput>counter_slots</computeroutput> is NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="153" column="5" declfile="include/bl_storage.h" declline="153" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gaf5a6d81c229c93e57045763540798929_1gaf5a6d81c229c93e57045763540798929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_monotonic_counter</definition>
        <argsstring>(uint16_t counter_desc, uint16_t *counter_value)</argsstring>
        <name>get_monotonic_counter</name>
        <param>
          <type>uint16_t</type>
          <declname>counter_desc</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>counter_value</declname>
        </param>
        <briefdescription>
<para>Get the current HW monotonic counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">counter_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the current counter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Cannot find counters with description <computeroutput>counter_desc</computeroutput> or the pointer to <computeroutput>counter_value</computeroutput> is NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="165" column="5" declfile="include/bl_storage.h" declline="165" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gac8c5257a0802478447c6cf4b1ddf7ef0_1gac8c5257a0802478447c6cf4b1ddf7ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int set_monotonic_counter</definition>
        <argsstring>(uint16_t counter_desc, uint16_t new_counter)</argsstring>
        <name>set_monotonic_counter</name>
        <param>
          <type>uint16_t</type>
          <declname>counter_desc</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>new_counter</declname>
        </param>
        <briefdescription>
<para>Set the current HW monotonic counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FYI for users looking at the values directly in flash: Values are stored with their bits flipped. This is to squeeze one more value out of the counter.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_counter</parametername>
</parameternamelist>
<parameterdescription>
<para>The new counter value. Must be larger than the current value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>The counter was updated successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>new_counter</computeroutput> is invalid (must be larger than current counter, and cannot be 0xFFFF). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There are no more free counter slots (see <verbatim>embed:rst:inline :kconfig:option:`CONFIG_SB_NUM_VER_COUNTER_SLOTS` </verbatim>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="184" column="5" declfile="include/bl_storage.h" declline="184" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_ga74d02e3eeb5ad4d8a86d69438f14ff7a_1ga74d02e3eeb5ad4d8a86d69438f14ff7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void otp_copy32</definition>
        <argsstring>(uint8_t *restrict dst, uint32_t volatile *restrict src, size_t size)</argsstring>
        <name>otp_copy32</name>
        <param>
          <type>uint8_t *restrict</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t volatile *restrict</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies <computeroutput>src</computeroutput> into <computeroutput>dst</computeroutput>. Reads from <computeroutput>src</computeroutput> are done 32 bits at a time. Writes to <computeroutput>dst</computeroutput> are done a byte at a time.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buffer. Must be 4-byte-aligned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of <emphasis>bytes</emphasis> in src to copy into dst. Must be divisible by 4. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="207" column="7" bodyfile="include/bl_storage.h" bodystart="207" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gae408b04b2de98d475945c9cbb15f0632_1gae408b04b2de98d475945c9cbb15f0632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_implementation_id_from_otp</definition>
        <argsstring>(uint8_t *buf)</argsstring>
        <name>read_implementation_id_from_otp</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the implementation id from OTP and copy it into a given buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer that has at least BL_STORAGE_IMPLEMENTATION_ID_SIZE bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="223" column="7" bodyfile="include/bl_storage.h" bodystart="223" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_ga7c065e99da679c80dce34b0b1309fe78_1ga7c065e99da679c80dce34b0b1309fe78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_life_cycle_state</definition>
        <argsstring>(enum lcs *lcs)</argsstring>
        <name>read_life_cycle_state</name>
        <param>
          <type>enum <ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref> *</type>
          <declname>lcs</declname>
        </param>
        <briefdescription>
<para>Read the current life cycle state the device is in from OTP,. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">lcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Will be set to the current LCS the device is in</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>The LCS read was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EREADLCS</parametername>
</parameternamelist>
<parameterdescription>
<para>Error on reading from OTP or invalid OTP content. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="255" column="6" bodyfile="include/bl_storage.h" bodystart="255" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__bl__storage_gab309f6576a50a508e932fe14baea9de4_1gab309f6576a50a508e932fe14baea9de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int update_life_cycle_state</definition>
        <argsstring>(enum lcs next_lcs)</argsstring>
        <name>update_life_cycle_state</name>
        <param>
          <type>enum <ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref></type>
          <declname>next_lcs</declname>
        </param>
        <briefdescription>
<para>Update the life cycle state in OTP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">next_lcs</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be the same or the successor state of the current one.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EREADLCS</parametername>
</parameternamelist>
<parameterdescription>
<para>Reading the current state failed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVALIDLCS</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid next state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="301" column="6" bodyfile="include/bl_storage.h" bodystart="301" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BL_STORAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_STORAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drivers/nrfx_common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx_nvmc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pm_config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>this<sp/>gets<sp/>included<sp/>in<sp/>an<sp/>image<sp/>that<sp/>is<sp/>build<sp/>without<sp/>a<sp/>bootloader</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>provision<sp/>area<sp/>is<sp/>not<sp/>defined,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>point<sp/>to<sp/>the<sp/>OTP<sp/>manually</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>NCSDK-18032<sp/>is<sp/>to<sp/>prevent<sp/>this<sp/>workaround<sp/>in<sp/>the<sp/>future</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PM_PROVISION_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="bl__storage_8h_af37c2c280f1acebb2ee67f2f7fac216b_1af37c2c280f1acebb2ee67f2f7fac216b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PM_PROVISION_ADDRESS<sp/>(&amp;NRF_UICR-&gt;OTP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="bl__storage_8h_a34ef2e6892c01fa1d2a82571c2627db9_1a34ef2e6892c01fa1d2a82571c2627db9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EHASHFF<sp/>113<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>hash<sp/>contains<sp/>too<sp/>many<sp/>0xFs.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="bl__storage_8h_a899d7f29da6a5c9895a26036c946fab4_1a899d7f29da6a5c9895a26036c946fab4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EREADLCS<sp/>114<sp/></highlight><highlight class="comment">/*<sp/>LCS<sp/>field<sp/>of<sp/>OTP<sp/>is<sp/>in<sp/>an<sp/>invalid<sp/>state<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="bl__storage_8h_ac79f90b90fcc6bd1512046af6a3aa5e9_1ac79f90b90fcc6bd1512046af6a3aa5e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EINVALIDLCS<sp/>115<sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>LCS*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>truncate<sp/>the<sp/>32<sp/>byte<sp/>sha256<sp/>down<sp/>to<sp/>16<sp/>bytes<sp/>before<sp/>storing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="bl__storage_8h_a114de6618ad0b1be01188a2b8b5010f7_1a114de6618ad0b1be01188a2b8b5010f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SB_PUBLIC_KEY_HASH_LEN<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Counter<sp/>used<sp/>by<sp/>NSIB<sp/>to<sp/>check<sp/>the<sp/>firmware<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="bl__storage_8h_aff4b1ea621ccb09e07de09d93c93d971_1aff4b1ea621ccb09e07de09d93c93d971" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_MONOTONIC_COUNTERS_DESC_NSIB<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Counter<sp/>used<sp/>by<sp/>MCUBOOT<sp/>to<sp/>check<sp/>the<sp/>firmware<sp/>version.<sp/>Suffixed</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>with<sp/>ID0<sp/>as<sp/>we<sp/>might<sp/>support<sp/>checking<sp/>the<sp/>version<sp/>of<sp/>multiple</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>images<sp/>in<sp/>the<sp/>future.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="bl__storage_8h_a2754ccd2791908fa9d6c0b7878396791_1a2754ccd2791908fa9d6c0b7878396791" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_MONOTONIC_COUNTERS_DESC_MCUBOOT_ID0<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structlife__cycle__state__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlife__cycle__state__data" kindref="compound">life_cycle_state_data</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="structlife__cycle__state__data_a9d63b6046cabe5490d4e67dd9d00e71b_1a9d63b6046cabe5490d4e67dd9d00e71b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlife__cycle__state__data_a9d63b6046cabe5490d4e67dd9d00e71b_1a9d63b6046cabe5490d4e67dd9d00e71b" kindref="member">provisioning</ref>;</highlight></codeline>
<codeline lineno="57" refid="structlife__cycle__state__data_a42616e66c892150a7533823f2d2fbd3c_1a42616e66c892150a7533823f2d2fbd3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlife__cycle__state__data_a42616e66c892150a7533823f2d2fbd3c_1a42616e66c892150a7533823f2d2fbd3c" kindref="member">secure</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>to<sp/>end<sp/>the<sp/>alignment<sp/>at<sp/>a<sp/>4-byte<sp/>boundary<sp/>as<sp/>the<sp/>UICR-&gt;OTP</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>only<sp/>supports<sp/>4-byte<sp/>reads.<sp/>We<sp/>place<sp/>the<sp/>reserved<sp/>padding<sp/>in</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>struct<sp/>in<sp/>case<sp/>we<sp/>ever<sp/>need<sp/>to<sp/>support</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>another<sp/>state.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structlife__cycle__state__data_a2405843f0bc19cbb397ad4417f6643c4_1a2405843f0bc19cbb397ad4417f6643c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlife__cycle__state__data_a2405843f0bc19cbb397ad4417f6643c4_1a2405843f0bc19cbb397ad4417f6643c4" kindref="member">reserved_for_padding</ref>;</highlight></codeline>
<codeline lineno="64" refid="structlife__cycle__state__data_a0f89c5b5c8df4951983a9455b0913149_1a0f89c5b5c8df4951983a9455b0913149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlife__cycle__state__data_a0f89c5b5c8df4951983a9455b0913149_1a0f89c5b5c8df4951983a9455b0913149" kindref="member">decommissioned</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structbl__storage__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbl__storage__data" kindref="compound">bl_storage_data</ref><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB:<sp/>When<sp/>placed<sp/>in<sp/>OTP,<sp/>reads<sp/>must<sp/>be<sp/>4<sp/>bytes<sp/>and<sp/>4<sp/>byte<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlife__cycle__state__data" kindref="compound">life_cycle_state_data</ref><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref>;</highlight></codeline>
<codeline lineno="74" refid="structbl__storage__data_a646fd18707711ad1b86e313578942ac9_1a646fd18707711ad1b86e313578942ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbl__storage__data_a646fd18707711ad1b86e313578942ac9_1a646fd18707711ad1b86e313578942ac9" kindref="member">implementation_id</ref>[32];</highlight></codeline>
<codeline lineno="75" refid="structbl__storage__data_ac33532b1cfc7c24d184840433ba81cdb_1ac33532b1cfc7c24d184840433ba81cdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structbl__storage__data_ac33532b1cfc7c24d184840433ba81cdb_1ac33532b1cfc7c24d184840433ba81cdb" kindref="member">s0_address</ref>;</highlight></codeline>
<codeline lineno="76" refid="structbl__storage__data_acef41ffa7b34b3d378696beef5d6d505_1acef41ffa7b34b3d378696beef5d6d505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structbl__storage__data_acef41ffa7b34b3d378696beef5d6d505_1acef41ffa7b34b3d378696beef5d6d505" kindref="member">s1_address</ref>;</highlight></codeline>
<codeline lineno="77" refid="structbl__storage__data_a5de712031b7fff6be0625339308ded93_1a5de712031b7fff6be0625339308ded93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structbl__storage__data_a5de712031b7fff6be0625339308ded93_1a5de712031b7fff6be0625339308ded93" kindref="member">num_public_keys</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>entries<sp/>in<sp/>&apos;key_data&apos;<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79" refid="structbl__storage__data_a648f715d1e9116ab43924410f68037c9_1a648f715d1e9116ab43924410f68037c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structbl__storage__data_a648f715d1e9116ab43924410f68037c9_1a648f715d1e9116ab43924410f68037c9" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="80" refid="structbl__storage__data_a554a8e5a65af808354d40e720d4dfc19_1a554a8e5a65af808354d40e720d4dfc19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbl__storage__data_a554a8e5a65af808354d40e720d4dfc19_1a554a8e5a65af808354d40e720d4dfc19" kindref="member">hash</ref>[<ref refid="bl__storage_8h_a114de6618ad0b1be01188a2b8b5010f7_1a114de6618ad0b1be01188a2b8b5010f7" kindref="member">SB_PUBLIC_KEY_HASH_LEN</ref>];</highlight></codeline>
<codeline lineno="81" refid="structbl__storage__data_a9350f3ee93a4cfe905fa53fb644b26b8_1a9350f3ee93a4cfe905fa53fb644b26b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structbl__storage__data_a9350f3ee93a4cfe905fa53fb644b26b8_1a9350f3ee93a4cfe905fa53fb644b26b8" kindref="member">key_data</ref>[1];</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_STORAGE<sp/>((const<sp/>volatile<sp/>struct<sp/>bl_storage_data<sp/>*)(PM_PROVISION_ADDRESS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>must<sp/>be<sp/>32<sp/>bytes<sp/>according<sp/>to<sp/>the<sp/>IETF<sp/>PSA<sp/>token<sp/>specification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="bl__storage_8h_af49eb9256122fffe1ad43d995ec7cac8_1af49eb9256122fffe1ad43d995ec7cac8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_STORAGE_IMPLEMENTATION_ID_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="group__bl__storage_ga588b9be770d1f9f90e8d97ace8aefb35_1ga588b9be770d1f9f90e8d97ace8aefb35" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__bl__storage_ga588b9be770d1f9f90e8d97ace8aefb35_1ga588b9be770d1f9f90e8d97ace8aefb35" kindref="member">s0_address_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="group__bl__storage_gac1b4e16ed57411c4dcf6271c4f763b9b_1gac1b4e16ed57411c4dcf6271c4f763b9b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__bl__storage_gac1b4e16ed57411c4dcf6271c4f763b9b_1gac1b4e16ed57411c4dcf6271c4f763b9b" kindref="member">s1_address_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group__bl__storage_ga5f01045a46e0cd6015081a1ecf33597d_1ga5f01045a46e0cd6015081a1ecf33597d" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__bl__storage_ga5f01045a46e0cd6015081a1ecf33597d_1ga5f01045a46e0cd6015081a1ecf33597d" kindref="member">num_public_keys_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__bl__storage_ga398093b212163efead6fa1eca64cb943_1ga398093b212163efead6fa1eca64cb943" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_ga398093b212163efead6fa1eca64cb943_1ga398093b212163efead6fa1eca64cb943" kindref="member">verify_public_keys</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="group__bl__storage_gab4f1cd8d93f5c2910f1ce01b7d8eb300_1gab4f1cd8d93f5c2910f1ce01b7d8eb300" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gab4f1cd8d93f5c2910f1ce01b7d8eb300_1gab4f1cd8d93f5c2910f1ce01b7d8eb300" kindref="member">public_key_data_read</ref>(uint32_t<sp/>key_idx,<sp/>uint8_t<sp/>*p_buf);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group__bl__storage_ga93cdbed56da0e3cd0ffa705715863aad_1ga93cdbed56da0e3cd0ffa705715863aad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_ga93cdbed56da0e3cd0ffa705715863aad_1ga93cdbed56da0e3cd0ffa705715863aad" kindref="member">invalidate_public_key</ref>(uint32_t<sp/>key_idx);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__bl__storage_gaa7ec999e86dc9211a52f01b2a8ccfa93_1gaa7ec999e86dc9211a52f01b2a8ccfa93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaa7ec999e86dc9211a52f01b2a8ccfa93_1gaa7ec999e86dc9211a52f01b2a8ccfa93" kindref="member">num_monotonic_counter_slots</ref>(uint16_t<sp/>counter_desc,<sp/>uint16_t<sp/>*counter_slots);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="group__bl__storage_gaf5a6d81c229c93e57045763540798929_1gaf5a6d81c229c93e57045763540798929" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaf5a6d81c229c93e57045763540798929_1gaf5a6d81c229c93e57045763540798929" kindref="member">get_monotonic_counter</ref>(uint16_t<sp/>counter_desc,<sp/>uint16_t<sp/>*counter_value);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__bl__storage_gac8c5257a0802478447c6cf4b1ddf7ef0_1gac8c5257a0802478447c6cf4b1ddf7ef0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gac8c5257a0802478447c6cf4b1ddf7ef0_1gac8c5257a0802478447c6cf4b1ddf7ef0" kindref="member">set_monotonic_counter</ref>(uint16_t<sp/>counter_desc,<sp/>uint16_t<sp/>new_counter);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>{</highlight></codeline>
<codeline lineno="192" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda43a4f5082ffa684b29a98f09b13c4bb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda43a4f5082ffa684b29a98f09b13c4bb1" kindref="member">BL_STORAGE_LCS_UNKNOWN</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="193" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda58c9c02d7fd57b482f15c80687d1d3cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda58c9c02d7fd57b482f15c80687d1d3cb" kindref="member">BL_STORAGE_LCS_ASSEMBLY</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="194" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" kindref="member">BL_STORAGE_LCS_PROVISIONING</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="195" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" kindref="member">BL_STORAGE_LCS_SECURED</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="196" refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda055815a9342f0ac679391c8be61dad16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda055815a9342f0ac679391c8be61dad16" kindref="member">BL_STORAGE_LCS_DECOMMISSIONED</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__bl__storage_ga74d02e3eeb5ad4d8a86d69438f14ff7a_1ga74d02e3eeb5ad4d8a86d69438f14ff7a" refkind="member"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_ga74d02e3eeb5ad4d8a86d69438f14ff7a_1ga74d02e3eeb5ad4d8a86d69438f14ff7a" kindref="member">otp_copy32</ref>(uint8_t<sp/>*restrict<sp/>dst,<sp/>uint32_t<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>*<sp/>restrict<sp/>src,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size<sp/>/<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/>src[i];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[i<sp/>*<sp/>4<sp/>+<sp/>j]<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>8<sp/>*<sp/>j)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223" refid="group__bl__storage_gae408b04b2de98d475945c9cbb15f0632_1gae408b04b2de98d475945c9cbb15f0632" refkind="member"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gae408b04b2de98d475945c9cbb15f0632_1gae408b04b2de98d475945c9cbb15f0632" kindref="member">read_implementation_id_from_otp</ref>(uint8_t<sp/>*buf)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bl__storage_ga74d02e3eeb5ad4d8a86d69438f14ff7a_1ga74d02e3eeb5ad4d8a86d69438f14ff7a" kindref="member">otp_copy32</ref>(buf,<sp/>(uint32_t<sp/>*)&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;implementation_id,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bl__storage_8h_af49eb9256122fffe1ad43d995ec7cac8_1af49eb9256122fffe1ad43d995ec7cac8" kindref="member">BL_STORAGE_IMPLEMENTATION_ID_SIZE</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>OTP<sp/>is<sp/>0xFFFF<sp/>when<sp/>erased<sp/>and,<sp/>like<sp/>all<sp/>flash,<sp/>can<sp/>only<sp/>flip</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>bits<sp/>from<sp/>0<sp/>to<sp/>1<sp/>when<sp/>erasing.<sp/>By<sp/>setting<sp/>all<sp/>bits<sp/>to<sp/>zero<sp/>we</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>enforce<sp/>the<sp/>correct<sp/>transitioning<sp/>of<sp/>LCS<sp/>until<sp/>a<sp/>full<sp/>erase<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>device.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_ENTERED<sp/>0x0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_NOT_ENTERED<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>bl_storage<sp/>functions<sp/>below<sp/>are<sp/>static<sp/>inline<sp/>in<sp/>the<sp/>header<sp/>file</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>TF-M<sp/>(that<sp/>does<sp/>not<sp/>include<sp/>bl_storage.c)<sp/>can<sp/>also<sp/>have</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>access<sp/>to<sp/>them.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>temporary<sp/>solution<sp/>until<sp/>TF-M<sp/>has<sp/>access<sp/>to<sp/>NSIB<sp/>functions.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__bl__storage_ga7c065e99da679c80dce34b0b1309fe78_1ga7c065e99da679c80dce34b0b1309fe78" refkind="member"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_ga7c065e99da679c80dce34b0b1309fe78_1ga7c065e99da679c80dce34b0b1309fe78" kindref="member">read_life_cycle_state</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>*<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>provisioning<sp/>=<sp/>nrfx_nvmc_otp_halfword_read(</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.provisioning);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>secure<sp/>=<sp/>nrfx_nvmc_otp_halfword_read((uint32_t)<sp/>&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.secure);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>decommissioned<sp/>=<sp/>nrfx_nvmc_otp_halfword_read(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.decommissioned);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provisioning<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>secure<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>decommissioned<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>=<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda58c9c02d7fd57b482f15c80687d1d3cb" kindref="member">BL_STORAGE_LCS_ASSEMBLY</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provisioning<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>secure<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>decommissioned<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>=<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" kindref="member">BL_STORAGE_LCS_PROVISIONING</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provisioning<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>secure<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>decommissioned<sp/>==<sp/><ref refid="group__bl__storage_ga6a4f8e634f110d0b7904870e90ed7cf6_1ga6a4f8e634f110d0b7904870e90ed7cf6" kindref="member">STATE_NOT_ENTERED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>=<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" kindref="member">BL_STORAGE_LCS_SECURED</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provisioning<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>secure<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>decommissioned<sp/>==<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>=<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda055815a9342f0ac679391c8be61dad16" kindref="member">BL_STORAGE_LCS_DECOMMISSIONED</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>reach<sp/>this<sp/>the<sp/>OTP<sp/>must<sp/>be<sp/>corrupted<sp/>or<sp/>reading<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="bl__storage_8h_a899d7f29da6a5c9895a26036c946fab4_1a899d7f29da6a5c9895a26036c946fab4" kindref="member">EREADLCS</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group__bl__storage_gab309f6576a50a508e932fe14baea9de4_1gab309f6576a50a508e932fe14baea9de4" refkind="member"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gab309f6576a50a508e932fe14baea9de4_1gab309f6576a50a508e932fe14baea9de4" kindref="member">update_life_cycle_state</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>next_lcs)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1gaf8733603bf55c32765f5cfbd6f2eabcd" kindref="member">lcs</ref><sp/>current_lcs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda43a4f5082ffa684b29a98f09b13c4bb1" kindref="member">BL_STORAGE_LCS_UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="bl__storage_8h_ac79f90b90fcc6bd1512046af6a3aa5e9_1ac79f90b90fcc6bd1512046af6a3aa5e9" kindref="member">EINVALIDLCS</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="group__bl__storage_ga7c065e99da679c80dce34b0b1309fe78_1ga7c065e99da679c80dce34b0b1309fe78" kindref="member">read_life_cycle_state</ref>(&amp;current_lcs);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_lcs<sp/>&lt;<sp/>current_lcs)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>is<sp/>only<sp/>possible<sp/>to<sp/>transition<sp/>into<sp/>a<sp/>higher<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="bl__storage_8h_ac79f90b90fcc6bd1512046af6a3aa5e9_1ac79f90b90fcc6bd1512046af6a3aa5e9" kindref="member">EINVALIDLCS</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_lcs<sp/>==<sp/>current_lcs)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>same<sp/>LCS<sp/>is<sp/>a<sp/>valid<sp/>argument,<sp/>but<sp/>nothing<sp/>to<sp/>do<sp/>so<sp/>return<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>the<sp/>device<sp/>starts<sp/>in<sp/>ASSEMBLY,<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>write<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda58c9c02d7fd57b482f15c80687d1d3cb" kindref="member">BL_STORAGE_LCS_ASSEMBLY</ref><sp/>&amp;&amp;<sp/>next_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" kindref="member">BL_STORAGE_LCS_PROVISIONING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfx_nvmc_halfword_write((uint32_t)&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.provisioning,<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdab7e8f66de38ac9459818c7b8aca4794f" kindref="member">BL_STORAGE_LCS_PROVISIONING</ref><sp/>&amp;&amp;<sp/>next_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" kindref="member">BL_STORAGE_LCS_SECURED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfx_nvmc_halfword_write((uint32_t)&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.secure,<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcdadf07c4391c4ad03ac021b161223cac83" kindref="member">BL_STORAGE_LCS_SECURED</ref><sp/>&amp;&amp;<sp/>next_lcs<sp/>==<sp/><ref refid="group__bl__storage_gaf8733603bf55c32765f5cfbd6f2eabcd_1ggaf8733603bf55c32765f5cfbd6f2eabcda055815a9342f0ac679391c8be61dad16" kindref="member">BL_STORAGE_LCS_DECOMMISSIONED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfx_nvmc_halfword_write((uint32_t)&amp;<ref refid="bl__storage_8h_aa6b60a51d2afa3fc410c39534f5cfb3a_1aa6b60a51d2afa3fc410c39534f5cfb3a" kindref="member">BL_STORAGE</ref>-&gt;lcs.decommissioned,<sp/><ref refid="group__bl__storage_ga235d632546cec659c8fa8a3c6ec56513_1ga235d632546cec659c8fa8a3c6ec56513" kindref="member">STATE_ENTERED</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>will<sp/>be<sp/>the<sp/>case<sp/>if<sp/>any<sp/>invalid<sp/>transition<sp/>is<sp/>tried<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="bl__storage_8h_ac79f90b90fcc6bd1512046af6a3aa5e9_1ac79f90b90fcc6bd1512046af6a3aa5e9" kindref="member">EINVALIDLCS</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BL_STORAGE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bl_storage.h"/>
  </compounddef>
</doxygen>
