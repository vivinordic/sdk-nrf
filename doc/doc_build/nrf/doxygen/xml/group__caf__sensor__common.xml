<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__caf__sensor__common" kind="group">
    <compoundname>caf_sensor_common</compoundname>
    <title>CAF Sensor Common</title>
    <innerclass refid="structcaf__sampled__channel" prot="public">caf_sampled_channel</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__caf__sensor__common_1ga44ecccf37618584aed8fe6070a343470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sensor_value_greater_then</definition>
        <argsstring>(struct sensor_value sensor_val1, struct sensor_value sensor_val2)</argsstring>
        <name>sensor_value_greater_then</name>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val1</declname>
        </param>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val2</declname>
        </param>
        <briefdescription>
<para>Helper function for checking if one sensor_value is greater than the other. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_val1</parametername>
</parameternamelist>
<parameterdescription>
<para>First compered sensor value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensor_val2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second compered sensor value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sensor_val1 is greater than sensor_val2, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="53" column="20" bodyfile="include/caf/caf_sensor_common.h" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__caf__sensor__common_1ga02c84e6bd0fb041fc2af8af43a5e953e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct sensor_value</type>
        <definition>static struct sensor_value sensor_value_abs_difference</definition>
        <argsstring>(struct sensor_value sensor_val1, struct sensor_value sensor_val2)</argsstring>
        <name>sensor_value_abs_difference</name>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val1</declname>
        </param>
        <param>
          <type>struct sensor_value</type>
          <declname>sensor_val2</declname>
        </param>
        <briefdescription>
<para>Helper function for calculating absolute value of difference of two sensor_values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_val1</parametername>
</parameternamelist>
<parameterdescription>
<para>First sensor value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensor_val2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second sensor value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Absolute value of difference between sensor_val1 and sensor_val2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="53" column="20" bodyfile="include/caf/caf_sensor_common.h" bodystart="67" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__caf__sensor__common_1ga5a0474022234b3446d04ba660c0a920a" prot="public" static="no">
        <name>FLOAT_TO_SENSOR_VAL_CONST</name>
        <initializer>1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="25" column="9" bodyfile="include/caf/caf_sensor_common.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__caf__sensor__common_1ga08b38a9cb4f90df0bbb1ac66b33c43f3" prot="public" static="no">
        <name>FLOAT_TO_SENSOR_VALUE</name>
        <param><defname>float_val</defname></param>
        <initializer>	{											\
		.val1 = (int32_t)(float_val),							\
		.val2 = (int32_t)(((float_val) - (int32_t)(float_val)) *			\
						<ref refid="group__caf__sensor__common_ga5a0474022234b3446d04ba660c0a920a_1ga5a0474022234b3446d04ba660c0a920a" kindref="member">FLOAT_TO_SENSOR_VAL_CONST</ref>),			\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/caf_sensor_common.h" line="27" column="9" bodyfile="include/caf/caf_sensor_common.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CAF Sensor Common. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
