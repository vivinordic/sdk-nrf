<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="qos_8h" kind="file" language="C++">
    <compoundname>qos.h</compoundname>
    <includes local="no">zephyr/kernel.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="cloud__module__event_8h" local="no">applications/asset_tracker_v2/src/events/cloud_module_event.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="1">
        <label>include/qos.h</label>
        <link refid="qos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/kernel.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>applications/asset_tracker_v2/src/events/cloud_module_event.h</label>
        <link refid="cloud__module__event_8h"/>
      </node>
      <node id="1">
        <label>include/qos.h</label>
        <link refid="qos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structqos__payload" prot="public">qos_payload</innerclass>
    <innerclass refid="structqos__data" prot="public">qos_data</innerclass>
    <innerclass refid="structqos__evt" prot="public">qos_evt</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__qos_ga7e15941995698236d043e8e54844de63_1ga7e15941995698236d043e8e54844de63" prot="public" static="no">
        <name>QOS_MESSAGE_ID_BASE</name>
        <initializer>15000</initializer>
        <briefdescription>
<para>ID base used for message IDs retrieved using <ref refid="group__qos_ga53870ab671709f85da3c9c9ed6ee4606_1ga53870ab671709f85da3c9c9ed6ee4606" kindref="member">qos_message_id_get_next()</ref> API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="26" column="9" bodyfile="include/qos.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__qos__flag__bitmask_ga60adfe131895142b1eb49aa58b0dcc12_1ga60adfe131895142b1eb49aa58b0dcc12" prot="public" static="no">
        <name>QOS_FLAG_RELIABILITY_ACK_DISABLED</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>Set this flag to disable acknowledging of a message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="39" column="9" bodyfile="include/qos.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__qos__flag__bitmask_gab291dfa7fdbe75266df38e303614dc35_1gab291dfa7fdbe75266df38e303614dc35" prot="public" static="no">
        <name>QOS_FLAG_RELIABILITY_ACK_REQUIRED</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>Set this flag to require acknowledging of a message. </para>
        </briefdescription>
        <detaileddescription>
<para>By setting this flag the caller will be notified periodically with the QOS_EVT_MESSAGE_TIMER_EXPIRED event until <ref refid="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" kindref="member">qos_message_remove()</ref> has been called with the corresponding message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="48" column="9" bodyfile="include/qos.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1ga1c6be71f9b5c800fe34198f3c0ae51a0" prot="public" static="no" strong="no">
        <type></type>
        <name>qos_evt_type</name>
        <enumvalue id="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a4033e445e925bf060babb2d959ef552f" prot="public">
          <name>QOS_EVT_MESSAGE_NEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A new message is ready. Payload is of type <ref refid="structqos__data" kindref="compound">qos_data</ref>. (message) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a41cbdd1062ad60ae4fc48ad19acd4d30" prot="public">
          <name>QOS_EVT_MESSAGE_TIMER_EXPIRED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The internal backoff timer has expired. This callback contains one or more messages that should be sent. Payload is of type <ref refid="structqos__data" kindref="compound">qos_data</ref>. (message)</para>
<para>Callbacks of this event type are notified in system workqueue context. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a85ce79a0f819801ba08fe56d9d46c302" prot="public">
          <name>QOS_EVT_MESSAGE_REMOVED_FROM_LIST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event received when the internal list of pending messages is full or a message has been removed from the list using the <ref refid="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" kindref="member">qos_message_remove()</ref> API call.</para>
<para>If the heap_allocated flag is set in the <ref refid="structqos__data" kindref="compound">qos_data</ref> message structure the corresponding buffer (message.data.buf) must be freed by the caller. Payload is of type <ref refid="structqos__data" kindref="compound">qos_data</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Events notified by the library&apos;s callback handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="53" column="1" bodyfile="include/qos.h" bodystart="53" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__qos_gaae5efa78763f4f34473073001fb309bd_1gaae5efa78763f4f34473073001fb309bd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* qos_evt_handler_t) (const struct qos_evt *evt)</definition>
        <argsstring>)(const struct qos_evt *evt)</argsstring>
        <name>qos_evt_handler_t</name>
        <briefdescription>
<para>QoS library event handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>The event and the associated parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="130" column="9" bodyfile="include/qos.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__qos_ga8f4635fe86e0ba557fe170eaa9c23c6d_1ga8f4635fe86e0ba557fe170eaa9c23c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int qos_init</definition>
        <argsstring>(qos_evt_handler_t evt_handler)</argsstring>
        <name>qos_init</name>
        <param>
          <type><ref refid="group__qos_gaae5efa78763f4f34473073001fb309bd_1gaae5efa78763f4f34473073001fb309bd" kindref="member">qos_evt_handler_t</ref></type>
          <declname>evt_handler</declname>
        </param>
        <briefdescription>
<para>Function that initializes the QoS library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the event callback handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="136" column="5" declfile="include/qos.h" declline="136" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_ga69a7d4837fe2d64f28dbe0a50f96b828_1ga69a7d4837fe2d64f28dbe0a50f96b828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int qos_message_add</definition>
        <argsstring>(struct qos_data *message)</argsstring>
        <name>qos_message_add</name>
        <param>
          <type>struct <ref refid="structqos__data" kindref="compound">qos_data</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Add a message to the library. If the message fails to be added to the internal list because the list is full, the message will be notified with the QOS_EVT_MESSAGE_REMOVED_FROM_LIST event, so that it can be freed if heap allocated. When this API is called, the event QOS_EVT_MESSAGE_NEW is always notified with the corresponding message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the corresponding message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If the message pointer is NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>If the internal list is full. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="150" column="5" declfile="include/qos.h" declline="150" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int qos_message_remove</definition>
        <argsstring>(uint32_t id)</argsstring>
        <name>qos_message_remove</name>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove message from internal list. An event QOS_EVT_MESSAGE_REMOVED_FROM_LIST will be notified in the library callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Message ID of message to be removed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODATA</parametername>
</parameternamelist>
<parameterdescription>
<para>If the passed in message ID is not found in the internal list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="160" column="5" declfile="include/qos.h" declline="160" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_ga9e9ac45c7ff8195ea2f7e83111a82a03_1ga9e9ac45c7ff8195ea2f7e83111a82a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool qos_message_has_flag</definition>
        <argsstring>(const struct qos_data *message, uint32_t flag)</argsstring>
        <name>qos_message_has_flag</name>
        <param>
          <type>const struct <ref refid="structqos__data" kindref="compound">qos_data</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Function that checks if a flag is part of the bitmask associated with a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to check for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if the flag checked for is a part of the message flag bitmask. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if flag checked for is not a part of the message flag bitmask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="170" column="6" declfile="include/qos.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_gab40df62651913d83ae8a51c6cdae4d8b_1gab40df62651913d83ae8a51c6cdae4d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qos_message_print</definition>
        <argsstring>(const struct qos_data *message)</argsstring>
        <name>qos_message_print</name>
        <param>
          <type>const struct <ref refid="structqos__data" kindref="compound">qos_data</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Function that prints the contents of a qos message structure. This requires that the library log level is set to debug level. CONFIG_QOS_LOG_LEVEL_DBG=y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="176" column="6" declfile="include/qos.h" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_ga53870ab671709f85da3c9c9ed6ee4606_1ga53870ab671709f85da3c9c9ed6ee4606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t qos_message_id_get_next</definition>
        <argsstring>(void)</argsstring>
        <name>qos_message_id_get_next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Generate message ID that counts from QOS_MESSAGE_ID_BASE message ID base. Count is reset if UINT16_MAX is reached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Message</parametername>
</parameternamelist>
<parameterdescription>
<para>ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="183" column="10" declfile="include/qos.h" declline="183" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_ga4461a5f74134f422e3191dc32c773248_1ga4461a5f74134f422e3191dc32c773248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qos_message_notify_all</definition>
        <argsstring>(void)</argsstring>
        <name>qos_message_notify_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Notify all pending messages. All messages that are currently stored in the internal list will be notified via the QOS_EVT_MESSAGE_TIMER_EXPIRED event. This API does not clear the internal pending list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="189" column="6" declfile="include/qos.h" declline="189" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_ga958989c04c26681215ab0cc4472d99cf_1ga958989c04c26681215ab0cc4472d99cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qos_message_remove_all</definition>
        <argsstring>(void)</argsstring>
        <name>qos_message_remove_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Remove all pending messages. All messages that are currently stored in the internal list will removed. Each message will be notified in the QOS_EVT_MESSAGE_REMOVED_FROM_LIST callback event. This API clears the internal pending list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="196" column="6" declfile="include/qos.h" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__qos_gafb915070e20326739eddf74ddd0ece76_1gafb915070e20326739eddf74ddd0ece76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qos_timer_reset</definition>
        <argsstring>(void)</argsstring>
        <name>qos_timer_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset and stop an ongoing timer backoff. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qos.h" line="199" column="6" declfile="include/qos.h" declline="199" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QOS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QOS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__qos_ga7e15941995698236d043e8e54844de63_1ga7e15941995698236d043e8e54844de63" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QOS_MESSAGE_ID_BASE<sp/>15000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__qos__flag__bitmask_ga60adfe131895142b1eb49aa58b0dcc12_1ga60adfe131895142b1eb49aa58b0dcc12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QOS_FLAG_RELIABILITY_ACK_DISABLED<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__qos__flag__bitmask_gab291dfa7fdbe75266df38e303614dc35_1gab291dfa7fdbe75266df38e303614dc35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QOS_FLAG_RELIABILITY_ACK_REQUIRED<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1ga1c6be71f9b5c800fe34198f3c0ae51a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1ga1c6be71f9b5c800fe34198f3c0ae51a0" kindref="member">qos_evt_type</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a4033e445e925bf060babb2d959ef552f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a4033e445e925bf060babb2d959ef552f" kindref="member">QOS_EVT_MESSAGE_NEW</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a41cbdd1062ad60ae4fc48ad19acd4d30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a41cbdd1062ad60ae4fc48ad19acd4d30" kindref="member">QOS_EVT_MESSAGE_TIMER_EXPIRED</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a85ce79a0f819801ba08fe56d9d46c302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1gga1c6be71f9b5c800fe34198f3c0ae51a0a85ce79a0f819801ba08fe56d9d46c302" kindref="member">QOS_EVT_MESSAGE_REMOVED_FROM_LIST</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structqos__payload" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__payload" kindref="compound">qos_payload</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structqos__payload_a9f0d1e621009e90665dc7e44a4a445a3_1a9f0d1e621009e90665dc7e44a4a445a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="structqos__payload_a9f0d1e621009e90665dc7e44a4a445a3_1a9f0d1e621009e90665dc7e44a4a445a3" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="83" refid="structqos__payload_a4df29c1c6c39b597eec2719212ebd46c_1a4df29c1c6c39b597eec2719212ebd46c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structqos__payload_a4df29c1c6c39b597eec2719212ebd46c_1a4df29c1c6c39b597eec2719212ebd46c" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structqos__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__data" kindref="compound">qos_data</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="structqos__data_af4ff0bb2f463b601c5283aad2a8ff83b_1af4ff0bb2f463b601c5283aad2a8ff83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structqos__data_af4ff0bb2f463b601c5283aad2a8ff83b_1af4ff0bb2f463b601c5283aad2a8ff83b" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structqos__data_a786bdc07156015749ebaf91ebdbf2b68_1a786bdc07156015749ebaf91ebdbf2b68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structqos__data_a786bdc07156015749ebaf91ebdbf2b68_1a786bdc07156015749ebaf91ebdbf2b68" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structqos__data_a54d950b9caef8143f55e76a8d3140a17_1a54d950b9caef8143f55e76a8d3140a17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structqos__data_a54d950b9caef8143f55e76a8d3140a17_1a54d950b9caef8143f55e76a8d3140a17" kindref="member">notified_count</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structqos__data_ac862ffaa85413ccfca4e2921abcd9dc3_1ac862ffaa85413ccfca4e2921abcd9dc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structqos__data_ad1a16909d0210dd69b21556cccec9e28_1ad1a16909d0210dd69b21556cccec9e28" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__payload" kindref="compound">qos_payload</ref><sp/><ref refid="structqos__data_ac862ffaa85413ccfca4e2921abcd9dc3_1ac862ffaa85413ccfca4e2921abcd9dc3" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="structqos__data_a7810cecf71796aec705072793a715a70_1a7810cecf71796aec705072793a715a70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structqos__data_a7810cecf71796aec705072793a715a70_1a7810cecf71796aec705072793a715a70" kindref="member">heap_allocated</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structqos__evt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__evt" kindref="compound">qos_evt</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga1c6be71f9b5c800fe34198f3c0ae51a0_1ga1c6be71f9b5c800fe34198f3c0ae51a0" kindref="member">qos_evt_type</ref><sp/><ref refid="structqos__evt_a4f385847f5594412b106d1537ee29179_1a4f385847f5594412b106d1537ee29179" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__data" kindref="compound">qos_data</ref><sp/><ref refid="structqos__evt_a72058114ae2f27c8a1a97beafa7dd5f0_1a72058114ae2f27c8a1a97beafa7dd5f0" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__qos_gaae5efa78763f4f34473073001fb309bd_1gaae5efa78763f4f34473073001fb309bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__qos_gaae5efa78763f4f34473073001fb309bd_1gaae5efa78763f4f34473073001fb309bd" kindref="member">qos_evt_handler_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqos__evt" kindref="compound">qos_evt</ref><sp/>*evt);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__qos_ga8f4635fe86e0ba557fe170eaa9c23c6d_1ga8f4635fe86e0ba557fe170eaa9c23c6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga8f4635fe86e0ba557fe170eaa9c23c6d_1ga8f4635fe86e0ba557fe170eaa9c23c6d" kindref="member">qos_init</ref>(<ref refid="group__qos_gaae5efa78763f4f34473073001fb309bd_1gaae5efa78763f4f34473073001fb309bd" kindref="member">qos_evt_handler_t</ref><sp/>evt_handler);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__qos_ga69a7d4837fe2d64f28dbe0a50f96b828_1ga69a7d4837fe2d64f28dbe0a50f96b828" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga69a7d4837fe2d64f28dbe0a50f96b828_1ga69a7d4837fe2d64f28dbe0a50f96b828" kindref="member">qos_message_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqos__data" kindref="compound">qos_data</ref><sp/>*<ref refid="structqos__evt_a72058114ae2f27c8a1a97beafa7dd5f0_1a72058114ae2f27c8a1a97beafa7dd5f0" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__qos_gaa3b6098d7d0c5b557f46365f7ae1dd3c_1gaa3b6098d7d0c5b557f46365f7ae1dd3c" kindref="member">qos_message_remove</ref>(uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group__qos_ga9e9ac45c7ff8195ea2f7e83111a82a03_1ga9e9ac45c7ff8195ea2f7e83111a82a03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga9e9ac45c7ff8195ea2f7e83111a82a03_1ga9e9ac45c7ff8195ea2f7e83111a82a03" kindref="member">qos_message_has_flag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqos__data" kindref="compound">qos_data</ref><sp/>*<ref refid="structqos__evt_a72058114ae2f27c8a1a97beafa7dd5f0_1a72058114ae2f27c8a1a97beafa7dd5f0" kindref="member">message</ref>,<sp/>uint32_t<sp/>flag);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group__qos_gab40df62651913d83ae8a51c6cdae4d8b_1gab40df62651913d83ae8a51c6cdae4d8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__qos_gab40df62651913d83ae8a51c6cdae4d8b_1gab40df62651913d83ae8a51c6cdae4d8b" kindref="member">qos_message_print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structqos__data" kindref="compound">qos_data</ref><sp/>*<ref refid="structqos__evt_a72058114ae2f27c8a1a97beafa7dd5f0_1a72058114ae2f27c8a1a97beafa7dd5f0" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__qos_ga53870ab671709f85da3c9c9ed6ee4606_1ga53870ab671709f85da3c9c9ed6ee4606" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="group__qos_ga53870ab671709f85da3c9c9ed6ee4606_1ga53870ab671709f85da3c9c9ed6ee4606" kindref="member">qos_message_id_get_next</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__qos_ga4461a5f74134f422e3191dc32c773248_1ga4461a5f74134f422e3191dc32c773248" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga4461a5f74134f422e3191dc32c773248_1ga4461a5f74134f422e3191dc32c773248" kindref="member">qos_message_notify_all</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__qos_ga958989c04c26681215ab0cc4472d99cf_1ga958989c04c26681215ab0cc4472d99cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__qos_ga958989c04c26681215ab0cc4472d99cf_1ga958989c04c26681215ab0cc4472d99cf" kindref="member">qos_message_remove_all</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group__qos_gafb915070e20326739eddf74ddd0ece76_1gafb915070e20326739eddf74ddd0ece76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__qos_gafb915070e20326739eddf74ddd0ece76_1gafb915070e20326739eddf74ddd0ece76" kindref="member">qos_timer_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>QOS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/qos.h"/>
  </compounddef>
</doxygen>
