<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="nrf__modem__lib__trace_8h" kind="file" language="C++">
    <compoundname>nrf_modem_lib_trace.h</compoundname>
    <includes local="no">zephyr/kernel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/modem/nrf_modem_lib_trace.h</label>
        <link refid="nrf__modem__lib__trace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/kernel.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1ga1b25e3140e9b304fa8a96822e043288f" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_modem_lib_trace_level</name>
        <enumvalue id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa4b873712f133553d7a4ea7d406c0c59a" prot="public">
          <name>NRF_MODEM_LIB_TRACE_LEVEL_OFF</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disable output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa2e45fa16ee7e4e36226f1cbb140a2ce2" prot="public">
          <name>NRF_MODEM_LIB_TRACE_LEVEL_COREDUMP_ONLY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Coredump only. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288facd8cf6f4085ade492dea775ee6f22696" prot="public">
          <name>NRF_MODEM_LIB_TRACE_LEVEL_FULL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LTE, IP, GNSS, and coredump. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fabbb4647c208899510a635e0ce54f4dfb" prot="public">
          <name>NRF_MODEM_LIB_TRACE_LEVEL_IP_ONLY</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IP. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa73191896ffa32a9ba814e9b1cc77c66c" prot="public">
          <name>NRF_MODEM_LIB_TRACE_LEVEL_LTE_AND_IP</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LTE and IP. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Trace level. </para>
        </briefdescription>
        <detaileddescription>
<para>The trace level can be used to filter the traces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="27" column="1" bodyfile="include/modem/nrf_modem_lib_trace.h" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1gac10eee0832369a403388599132ce81ff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_modem_lib_trace_event</name>
        <enumvalue id="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1ggac10eee0832369a403388599132ce81ffa43b168dc5e699c8658037665b25e1b61" prot="public">
          <name>NRF_MODEM_LIB_TRACE_EVT_FULL</name>
          <initializer>= -ENOSPC</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace storage is full. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Trace event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="36" column="1" bodyfile="include/modem/nrf_modem_lib_trace.h" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__modem__lib__trace_gaa70a8cdf9248fb898ec5dbc44f9d0a36_1gaa70a8cdf9248fb898ec5dbc44f9d0a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_modem_lib_trace_callback</definition>
        <argsstring>(enum nrf_modem_lib_trace_event evt)</argsstring>
        <name>nrf_modem_lib_trace_callback</name>
        <param>
          <type>enum <ref refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1gac10eee0832369a403388599132ce81ff" kindref="member">nrf_modem_lib_trace_event</ref></type>
          <declname>evt</declname>
        </param>
        <briefdescription>
<para>Trace callback that is called by the trace library when an event occour. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This callback must be defined by the application with some trace backends.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>evt</parametername>
</parameternamelist>
<parameterdescription>
<para>Occurring event</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, non-zero otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="48" column="13" declfile="include/modem/nrf_modem_lib_trace.h" declline="48" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga1efc1e060d5ae08a133cab61fba625ab_1ga1efc1e060d5ae08a133cab61fba625ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_modem_lib_trace_processing_done_wait</definition>
        <argsstring>(k_timeout_t timeout)</argsstring>
        <name>nrf_modem_lib_trace_processing_done_wait</name>
        <param>
          <type>k_timeout_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for trace to have finished processing after coredump or shutdown. </para>
        </briefdescription>
        <detaileddescription>
<para>This function blocks until the trace module has finished processing data after a modem fault (coredump) or modem shutdown.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Time to wait for trace processing to be done.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, non-zero otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="59" column="5" declfile="include/modem/nrf_modem_lib_trace.h" declline="59" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga1fe927bdde1f8e5e6b4d63e7440593e0_1ga1fe927bdde1f8e5e6b4d63e7440593e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_modem_lib_trace_level_set</definition>
        <argsstring>(enum nrf_modem_lib_trace_level trace_level)</argsstring>
        <name>nrf_modem_lib_trace_level_set</name>
        <param>
          <type>enum <ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1ga1b25e3140e9b304fa8a96822e043288f" kindref="member">nrf_modem_lib_trace_level</ref></type>
          <declname>trace_level</declname>
        </param>
        <briefdescription>
<para>Set trace level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trace_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Trace level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, non-zero otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="67" column="5" declfile="include/modem/nrf_modem_lib_trace.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a_1ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nrf_modem_lib_trace_data_size</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_modem_lib_trace_data_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the number of bytes stored in the compile-time selected trace backend. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>To ensure the retrieved number of bytes is correct, this function should only be called when the backend is done processing traces. This operation is only supported with some trace backends. If not supported, the function returns -ENOTSUP.</para>
</simplesect>
<simplesect kind="return"><para>Number of bytes stored in the trace backend. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="78" column="8" declfile="include/modem/nrf_modem_lib_trace.h" declline="78" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga80438e40e8e75df1f1933d22969763ef_1ga80438e40e8e75df1f1933d22969763ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_modem_lib_trace_read</definition>
        <argsstring>(uint8_t *buf, size_t len)</argsstring>
        <name>nrf_modem_lib_trace_read</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read trace data. </para>
        </briefdescription>
        <detaileddescription>
<para>Read out the trace data. After read, the backend can choose to free the space and prepare it for further write operations.</para>
<para><simplesect kind="note"><para>This operation is only supported with some trace backends. If not supported, the function returns -ENOTSUP.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of output buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>read number of bytes, negative errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="94" column="5" declfile="include/modem/nrf_modem_lib_trace.h" declline="94" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga403c4aa999be5d11929810eb68338bbb_1ga403c4aa999be5d11929810eb68338bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_modem_lib_trace_clear</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_modem_lib_trace_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear captured trace data. </para>
        </briefdescription>
        <detaileddescription>
<para>Clear all captured trace data and prepare for capturing new traces.</para>
<para><simplesect kind="note"><para>This operation is only supported with some trace backends. If not supported, the function returns -ENOTSUP.</para>
</simplesect>
<simplesect kind="return"><para>0 on success, negative errno on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="106" column="5" declfile="include/modem/nrf_modem_lib_trace.h" declline="106" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__modem__lib__trace_ga11b0e70f602964425f61efed23f35866_1ga11b0e70f602964425f61efed23f35866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrf_modem_lib_trace_backend_bitrate_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_modem_lib_trace_backend_bitrate_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the last measured rolling average bitrate of the trace backend. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the last measured rolling average bitrate of the trace backend calculated over the last<verbatim>embed:rst:inline :kconfig:option:`CONFIG_NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_PERIOD_MS` </verbatim> period.</para>
<para><simplesect kind="return"><para>Rolling average bitrate of the trace backend </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/nrf_modem_lib_trace.h" line="116" column="10" declfile="include/modem/nrf_modem_lib_trace.h" declline="116" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_MODEM_LIB_TRACE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_MODEM_LIB_TRACE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1ga1b25e3140e9b304fa8a96822e043288f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1ga1b25e3140e9b304fa8a96822e043288f" kindref="member">nrf_modem_lib_trace_level</ref><sp/>{</highlight></codeline>
<codeline lineno="28" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa4b873712f133553d7a4ea7d406c0c59a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa4b873712f133553d7a4ea7d406c0c59a" kindref="member">NRF_MODEM_LIB_TRACE_LEVEL_OFF</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa2e45fa16ee7e4e36226f1cbb140a2ce2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa2e45fa16ee7e4e36226f1cbb140a2ce2" kindref="member">NRF_MODEM_LIB_TRACE_LEVEL_COREDUMP_ONLY</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288facd8cf6f4085ade492dea775ee6f22696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288facd8cf6f4085ade492dea775ee6f22696" kindref="member">NRF_MODEM_LIB_TRACE_LEVEL_FULL</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fabbb4647c208899510a635e0ce54f4dfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fabbb4647c208899510a635e0ce54f4dfb" kindref="member">NRF_MODEM_LIB_TRACE_LEVEL_IP_ONLY</ref><sp/>=<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa73191896ffa32a9ba814e9b1cc77c66c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1gga1b25e3140e9b304fa8a96822e043288fa73191896ffa32a9ba814e9b1cc77c66c" kindref="member">NRF_MODEM_LIB_TRACE_LEVEL_LTE_AND_IP</ref><sp/>=<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1gac10eee0832369a403388599132ce81ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1gac10eee0832369a403388599132ce81ff" kindref="member">nrf_modem_lib_trace_event</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1ggac10eee0832369a403388599132ce81ffa43b168dc5e699c8658037665b25e1b61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1ggac10eee0832369a403388599132ce81ffa43b168dc5e699c8658037665b25e1b61" kindref="member">NRF_MODEM_LIB_TRACE_EVT_FULL</ref><sp/>=<sp/>-ENOSPC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__nrf__modem__lib__trace_gaa70a8cdf9248fb898ec5dbc44f9d0a36_1gaa70a8cdf9248fb898ec5dbc44f9d0a36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_gaa70a8cdf9248fb898ec5dbc44f9d0a36_1gaa70a8cdf9248fb898ec5dbc44f9d0a36" kindref="member">nrf_modem_lib_trace_callback</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_gac10eee0832369a403388599132ce81ff_1gac10eee0832369a403388599132ce81ff" kindref="member">nrf_modem_lib_trace_event</ref><sp/>evt);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__nrf__modem__lib__trace_ga1efc1e060d5ae08a133cab61fba625ab_1ga1efc1e060d5ae08a133cab61fba625ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga1efc1e060d5ae08a133cab61fba625ab_1ga1efc1e060d5ae08a133cab61fba625ab" kindref="member">nrf_modem_lib_trace_processing_done_wait</ref>(k_timeout_t<sp/>timeout);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__nrf__modem__lib__trace_ga1fe927bdde1f8e5e6b4d63e7440593e0_1ga1fe927bdde1f8e5e6b4d63e7440593e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga1fe927bdde1f8e5e6b4d63e7440593e0_1ga1fe927bdde1f8e5e6b4d63e7440593e0" kindref="member">nrf_modem_lib_trace_level_set</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga1b25e3140e9b304fa8a96822e043288f_1ga1b25e3140e9b304fa8a96822e043288f" kindref="member">nrf_modem_lib_trace_level</ref><sp/>trace_level);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__nrf__modem__lib__trace_ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a_1ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a_1ga4e0fb7b60eaec1b1e2afb1a8a5f6cb8a" kindref="member">nrf_modem_lib_trace_data_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__nrf__modem__lib__trace_ga80438e40e8e75df1f1933d22969763ef_1ga80438e40e8e75df1f1933d22969763ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga80438e40e8e75df1f1933d22969763ef_1ga80438e40e8e75df1f1933d22969763ef" kindref="member">nrf_modem_lib_trace_read</ref>(uint8_t<sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__nrf__modem__lib__trace_ga403c4aa999be5d11929810eb68338bbb_1ga403c4aa999be5d11929810eb68338bbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nrf__modem__lib__trace_ga403c4aa999be5d11929810eb68338bbb_1ga403c4aa999be5d11929810eb68338bbb" kindref="member">nrf_modem_lib_trace_clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CONFIG_NRF_MODEM_LIB_TRACE_BACKEND_BITRATE)<sp/>||<sp/>defined(__DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__nrf__modem__lib__trace_ga11b0e70f602964425f61efed23f35866_1ga11b0e70f602964425f61efed23f35866" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__nrf__modem__lib__trace_ga11b0e70f602964425f61efed23f35866_1ga11b0e70f602964425f61efed23f35866" kindref="member">nrf_modem_lib_trace_backend_bitrate_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CONFIG_NRF_MODEM_LIB_TRACE_BACKEND_BITRATE)<sp/>||<sp/>defined(__DOXYGEN__)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NRF_MODEM_LIB_TRACE_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/modem/nrf_modem_lib_trace.h"/>
  </compounddef>
</doxygen>
