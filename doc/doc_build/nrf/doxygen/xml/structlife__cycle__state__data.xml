<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structlife__cycle__state__data" kind="struct" language="C++" prot="public">
    <compoundname>life_cycle_state_data</compoundname>
    <includes refid="bl__storage_8h" local="no">bl_storage.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlife__cycle__state__data_a9d63b6046cabe5490d4e67dd9d00e71b_1a9d63b6046cabe5490d4e67dd9d00e71b" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t life_cycle_state_data::provisioning</definition>
        <argsstring></argsstring>
        <name>provisioning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="56" column="10" bodyfile="include/bl_storage.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlife__cycle__state__data_a42616e66c892150a7533823f2d2fbd3c_1a42616e66c892150a7533823f2d2fbd3c" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t life_cycle_state_data::secure</definition>
        <argsstring></argsstring>
        <name>secure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="57" column="10" bodyfile="include/bl_storage.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlife__cycle__state__data_a2405843f0bc19cbb397ad4417f6643c4_1a2405843f0bc19cbb397ad4417f6643c4" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t life_cycle_state_data::reserved_for_padding</definition>
        <argsstring></argsstring>
        <name>reserved_for_padding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="63" column="10" bodyfile="include/bl_storage.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlife__cycle__state__data_a0f89c5b5c8df4951983a9455b0913149_1a0f89c5b5c8df4951983a9455b0913149" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t life_cycle_state_data::decommissioned</definition>
        <argsstring></argsstring>
        <name>decommissioned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bl_storage.h" line="64" column="10" bodyfile="include/bl_storage.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Storage for the PRoT Security Lifecycle state, that consists of 4 states:<itemizedlist>
<listitem><para>Device assembly and test</para>
</listitem><listitem><para>PRoT Provisioning</para>
</listitem><listitem><para>Secured</para>
</listitem><listitem><para>Decommissioned These states are transitioned top down during the life time of a device. The Device assembly and test state is implicitly defined by checking if the provisioning state wasn&apos;t entered yet. This works as ASSEMBLY implies the OTP to be erased. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="include/bl_storage.h" line="55" column="1" bodyfile="include/bl_storage.h" bodystart="55" bodyend="65"/>
    <listofallmembers>
      <member refid="structlife__cycle__state__data_a0f89c5b5c8df4951983a9455b0913149_1a0f89c5b5c8df4951983a9455b0913149" prot="public" virt="non-virtual"><scope>life_cycle_state_data</scope><name>decommissioned</name></member>
      <member refid="structlife__cycle__state__data_a9d63b6046cabe5490d4e67dd9d00e71b_1a9d63b6046cabe5490d4e67dd9d00e71b" prot="public" virt="non-virtual"><scope>life_cycle_state_data</scope><name>provisioning</name></member>
      <member refid="structlife__cycle__state__data_a2405843f0bc19cbb397ad4417f6643c4_1a2405843f0bc19cbb397ad4417f6643c4" prot="public" virt="non-virtual"><scope>life_cycle_state_data</scope><name>reserved_for_padding</name></member>
      <member refid="structlife__cycle__state__data_a42616e66c892150a7533823f2d2fbd3c_1a42616e66c892150a7533823f2d2fbd3c" prot="public" virt="non-virtual"><scope>life_cycle_state_data</scope><name>secure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
