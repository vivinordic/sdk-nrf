<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dfu__target__mcuboot_8h" kind="file" language="C++">
    <compoundname>dfu_target_mcuboot.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="dfu__target_8h" local="no">dfu/dfu_target.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/dfu/dfu_target_mcuboot.h</label>
        <link refid="dfu__target__mcuboot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>dfu/dfu_target.h</label>
        <link refid="dfu__target_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target__mcuboot_ga4e4801350d718a24138fc7285e2db68b_1ga4e4801350d718a24138fc7285e2db68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_set_buf</definition>
        <argsstring>(uint8_t *buf, size_t len)</argsstring>
        <name>dfu_target_mcuboot_set_buf</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set buffer to use for flash write operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>value if successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="29" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="29" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_gafabc4d253376dc26de42ad53b55df6d0_1gafabc4d253376dc26de42ad53b55df6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dfu_target_mcuboot_identify</definition>
        <argsstring>(const void *const buf)</argsstring>
        <name>dfu_target_mcuboot_identify</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>See if data in buf indicates MCUBoot style upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if data matches, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="36" column="6" declfile="include/dfu/dfu_target_mcuboot.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_ga734f468b64f5715c87bf172569632cb4_1ga734f468b64f5715c87bf172569632cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_init</definition>
        <argsstring>(size_t file_size, int img_num, dfu_target_callback_t cb)</argsstring>
        <name>dfu_target_mcuboot_init</name>
        <param>
          <type>size_t</type>
          <declname>file_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <param>
          <type><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Initialize dfu target, perform steps necessary to receive firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the current file being downloaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Image pair index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback for signaling events(unused).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="47" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_ga6225ff0f74bd70c54431b16e292bdea0_1ga6225ff0f74bd70c54431b16e292bdea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_mcuboot_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get offset of firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="56" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="56" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_gacd40fa69f8b596df49500f599ad25687_1gacd40fa69f8b596df49500f599ad25687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_write</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_mcuboot_write</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write firmware data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data that should be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="66" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="66" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_gacf468b65990570fe98ad9d06dc68c426_1gacf468b65990570fe98ad9d06dc68c426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_mcuboot_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>Deinitialize resources and finalize firmware upgrade if successful. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the firmware was successfully recived.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="75" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="75" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_ga8b4c3be60446424f2a1aedb6e5db9a92_1ga8b4c3be60446424f2a1aedb6e5db9a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_schedule_update</definition>
        <argsstring>(int img_num)</argsstring>
        <name>dfu_target_mcuboot_schedule_update</name>
        <param>
          <type>int</type>
          <declname>img_num</declname>
        </param>
        <briefdescription>
<para>Schedule update of one or more images. </para>
        </briefdescription>
        <detaileddescription>
<para>This call requests images update. The update will be performed after the device reset.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">img_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Given image pair index or -1 for all of image pair indexes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for a successful request or a negative error code identicating reason of failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="89" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="89" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__mcuboot_gaea68aa342aa4466d4beff2c79e68d806_1gaea68aa342aa4466d4beff2c79e68d806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_mcuboot_reset</definition>
        <argsstring>(void)</argsstring>
        <name>dfu_target_mcuboot_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Release resources and erase the download area. </para>
        </briefdescription>
        <detaileddescription>
<para>Cancels any ongoing updates.</para>
<para><simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_mcuboot.h" line="98" column="5" declfile="include/dfu/dfu_target_mcuboot.h" declline="98" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DFU_TARGET_MCUBOOT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFU_TARGET_MCUBOOT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dfu__target_8h" kindref="compound">dfu/dfu_target.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__dfu__target__mcuboot_ga4e4801350d718a24138fc7285e2db68b_1ga4e4801350d718a24138fc7285e2db68b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_ga4e4801350d718a24138fc7285e2db68b_1ga4e4801350d718a24138fc7285e2db68b" kindref="member">dfu_target_mcuboot_set_buf</ref>(uint8_t<sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__dfu__target__mcuboot_gafabc4d253376dc26de42ad53b55df6d0_1gafabc4d253376dc26de42ad53b55df6d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_gafabc4d253376dc26de42ad53b55df6d0_1gafabc4d253376dc26de42ad53b55df6d0" kindref="member">dfu_target_mcuboot_identify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__dfu__target__mcuboot_ga734f468b64f5715c87bf172569632cb4_1ga734f468b64f5715c87bf172569632cb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_ga734f468b64f5715c87bf172569632cb4_1ga734f468b64f5715c87bf172569632cb4" kindref="member">dfu_target_mcuboot_init</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num,<sp/><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__dfu__target__mcuboot_ga6225ff0f74bd70c54431b16e292bdea0_1ga6225ff0f74bd70c54431b16e292bdea0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_ga6225ff0f74bd70c54431b16e292bdea0_1ga6225ff0f74bd70c54431b16e292bdea0" kindref="member">dfu_target_mcuboot_offset_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__dfu__target__mcuboot_gacd40fa69f8b596df49500f599ad25687_1gacd40fa69f8b596df49500f599ad25687" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_gacd40fa69f8b596df49500f599ad25687_1gacd40fa69f8b596df49500f599ad25687" kindref="member">dfu_target_mcuboot_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__dfu__target__mcuboot_gacf468b65990570fe98ad9d06dc68c426_1gacf468b65990570fe98ad9d06dc68c426" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_gacf468b65990570fe98ad9d06dc68c426_1gacf468b65990570fe98ad9d06dc68c426" kindref="member">dfu_target_mcuboot_done</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successful);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__dfu__target__mcuboot_ga8b4c3be60446424f2a1aedb6e5db9a92_1ga8b4c3be60446424f2a1aedb6e5db9a92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_ga8b4c3be60446424f2a1aedb6e5db9a92_1ga8b4c3be60446424f2a1aedb6e5db9a92" kindref="member">dfu_target_mcuboot_schedule_update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_num);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="group__dfu__target__mcuboot_gaea68aa342aa4466d4beff2c79e68d806_1gaea68aa342aa4466d4beff2c79e68d806" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__mcuboot_gaea68aa342aa4466d4beff2c79e68d806_1gaea68aa342aa4466d4beff2c79e68d806" kindref="member">dfu_target_mcuboot_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DFU_TARGET_MCUBOOT_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/dfu/dfu_target_mcuboot.h"/>
  </compounddef>
</doxygen>
