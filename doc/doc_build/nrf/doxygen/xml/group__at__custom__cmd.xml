<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__at__custom__cmd" kind="group">
    <compoundname>at_custom_cmd</compoundname>
    <title>Custom AT commands</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__at__custom__cmd_1ga5793d4dc72cd5568b4a99592bfd34591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int at_custom_cmd_respond</definition>
        <argsstring>(char *buf, size_t buf_size, const char *response,...)</argsstring>
        <name>at_custom_cmd_respond</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>response</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Fill response buffer without overflowing the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For the modem library to accept the response in <computeroutput>buf</computeroutput> as a success, the response must contain &quot;OK\\r\\n&quot;. If the response is an error, use &quot;ERROR\\r\\n&quot; or appropriate CMS/CME responses, e.g. &quot;+CMS ERROR: &lt;errorcode&gt;&quot;.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to put response into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the response buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Response format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Format arguments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-NRF_EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>if no buffer provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-NRF_E2BIG</parametername>
</parameternamelist>
<parameterdescription>
<para>if the provided buffer is too small for the response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="48" column="5" declfile="include/modem/at_custom_cmd.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__at__custom__cmd_1ga143d89c95c972ab6d9962353662fa8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at_custom_cmd_pause</definition>
        <argsstring>(struct nrf_modem_at_cmd_filter *entry)</argsstring>
        <name>at_custom_cmd_pause</name>
        <param>
          <type>struct nrf_modem_at_cmd_filter *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Pause a custom AT command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the custom AT command to pause. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="78" column="6" declfile="include/modem/at_custom_cmd.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__at__custom__cmd_1ga2f6c9df1a7464f8e5e7520c52c5f930b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at_custom_cmd_resume</definition>
        <argsstring>(struct nrf_modem_at_cmd_filter *entry)</argsstring>
        <name>at_custom_cmd_resume</name>
        <param>
          <type>struct nrf_modem_at_cmd_filter *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Resume a custom AT command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the custom AT command to resume. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="85" column="6" declfile="include/modem/at_custom_cmd.h" declline="85" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__at__custom__cmd_1gaf5177193fbf770996c75658353786e40" prot="public" static="no">
        <name>AT_CUSTOM_CMD_PAUSED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="52" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__at__custom__cmd_1gabbc68502d00650be9be27ddaa619cdc7" prot="public" static="no">
        <name>AT_CUSTOM_CMD_ACTIVE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="54" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__at__custom__cmd_1ga64bdbbc83b4076c51c2e65dc88af37b8" prot="public" static="no">
        <name>AT_CUSTOM_CMD</name>
        <param><defname>entry</defname></param>
        <param><defname>_filter</defname></param>
        <param><defname>_callback</defname></param>
        <param><defname>...</defname></param>
        <initializer>	static int _callback(char *buf, size_t len, char *at_cmd);                                 \
	static STRUCT_SECTION_ITERABLE(nrf_modem_at_cmd_filter, entry) = {                         \
		.cmd = _filter,                                                                    \
		.callback = _callback,                                                             \
		COND_CODE_1(__VA_ARGS__, (.paused = __VA_ARGS__,), ())                             \
	}</initializer>
        <briefdescription>
<para>Define an custom AT command callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The (partial) AT command on which the callback should trigger. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The AT command callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial state ( <computeroutput>AT_CUSTOM_CMD_PAUSED</computeroutput> or <computeroutput>AT_CUSTOM_CMD_ACTIVE</computeroutput> ). The default is <computeroutput>AT_CUSTOM_CMD_ACTIVE</computeroutput> . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/modem/at_custom_cmd.h" line="65" column="9" bodyfile="include/modem/at_custom_cmd.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Public API for adding custom AT commands using filters in the Modem library with application callbacks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
